{
  "0_1_bfs": {
    "resources": [
      {
        "resource_title": "0-1 BFS | CP Algorithms",
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/graph/01_bfs.html",
        "is_starred": true
      },
      {
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/22276",
        "resource_title": "0-1 BFS [Tutorial]  By himanshujaju",
        "resource_comments": ""
      }
    ],
    "topic_id": "0_1_bfs",
    "is_data_complete": true,
    "completion_count": 34,
    "template_codes": [],
    "created_at": {
      "seconds": 1714041772,
      "nanoseconds": 899000000
    },
    "problem_order": [
      "codeforces_1063b",
      "spoj_kaththi",
      "codeforces_821d",
      "codeforces_877d",
      "codeforces_173b",
      "boi13_tracks",
      "cf_gym_100625j",
      "uva_11573",
      "codechef_cc004",
      "atcoder_abc176_d",
      "atcoder_abc213_e",
      "codeforces_590c",
      "codeforces_173c",
      "codeforces_1341e",
      "atcoder_arc061_c"
    ]
  },
  "1d1d_dp_optimization": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Dynamic%20Programming%20Optimizations/1D1D%20DP.cpp"
    ],
    "created_at": {
      "seconds": 1714681901,
      "nanoseconds": 65000000
    },
    "topic_id": "1d1d_dp_optimization",
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/93772",
        "resource_title": "1D1D-optimization  By seiko.iwasawa"
      },
      {
        "resource_comments": "",
        "resource_url": "https://sites.google.com/site/ubcprogrammingteam/news/1d1ddynamicprogrammingoptimization-parti",
        "resource_title": "1D/1D Dynamic Programming Optimization - Part I",
        "is_starred": true
      },
      {
        "resource_url": "https://robert1003.github.io/2020/02/29/dp-opt-knuth.html",
        "resource_comments": "",
        "resource_title": "DP optimization | A Simple Blog"
      }
    ],
    "completion_count": 3,
    "is_data_complete": true
  },
  "2_sat": {
    "is_data_complete": true,
    "topic_id": "2_sat",
    "created_at": {
      "seconds": 1714049248,
      "nanoseconds": 447000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/2%20SAT.cpp"
    ],
    "resources": [
      {
        "resource_title": "2-SAT | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/graph/2SAT.html",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/92977",
        "resource_title": "[Tutorial] 2-SAT  By arujbansal",
        "is_starred": true
      },
      {
        "is_video_type": true,
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/watch?v=0nNYy3rltgA",
        "resource_title": "Episode 24 - 2SAT | Algorithms Live!"
      }
    ],
    "completion_count": 25,
    "problem_order": [
      "yosupo_two_sat",
      "cses_1684",
      "eolymp_7538",
      "codeforces_1475f",
      "codeforces_776d",
      "codechef_hkrman",
      "kattis_illumination",
      "atcoder_abc210_f",
      "cf_gym_102412h",
      "codeforces_1218i",
      "uva_11930",
      "codeforces_1903f",
      "codeforces_1215f"
    ]
  },
  "2d_bit": {
    "completion_count": 15,
    "is_data_complete": true,
    "topic_id": "2d_bit",
    "template_codes": [],
    "created_at": {
      "seconds": 1713051007,
      "nanoseconds": 384000000
    },
    "resources": [
      {
        "resource_url": "https://www.topcoder.com/thrive/articles/Binary%20Indexed%20Trees#2d",
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "BINARY INDEXED TREES | Topcoder"
      },
      {
        "resource_title": "Finding sum in two-dimensional array | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/data_structures/fenwick.html#finding-sum-in-two-dimensional-array",
        "resource_comments": ""
      },
      {
        "resource_comments": "2D BIT using Ordered Set",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/52094",
        "resource_title": "Easy implementation of Compressed 2D Binary Indexed Tree for grid of binary numbers[Tutorial]"
      },
      {
        "resource_title": "2D BIT | USACO Guide",
        "resource_url": "https://usaco.guide/plat/2DRQ?lang=cpp#2d-bit",
        "is_starred": true,
        "resource_comments": "check only 2d BIT section"
      }
    ],
    "problem_order": [
      "cses_1739",
      "poj_1195",
      "codeforces_785e",
      "spoj_usubqsub",
      "dmoj_bfs17p6",
      "wcipeg_ioi0722"
    ]
  },
  "2d_bit_with_range_update_and_range_query": {
    "problem_order": [
      "spoj_usubqsub",
      "codeforces_341d",
      "codeforces_869e"
    ],
    "is_data_complete": true,
    "resources": [
      {
        "resource_title": "A bit more of general ideas  By adamant",
        "resource_url": "https://codeforces.com/blog/entry/104466",
        "resource_comments": "check idea 3",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "resource_title": "A New Algorithm for Updating and Querying Sub-arrays of Multidimensional Arrays | Paper",
        "resource_url": "https://arxiv.org/pdf/1311.6093v4.pdf"
      }
    ],
    "created_at": {
      "seconds": 1713056793,
      "nanoseconds": 688000000
    },
    "completion_count": 5,
    "topic_id": "2d_bit_with_range_update_and_range_query",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/BIT%202D%20with%20Range%20Update%20and%20Range%20Query.cpp"
    ]
  },
  "2d_dynamic_segment_tree": {
    "resources": [
      {
        "resource_title": "IOI 2013 - Game Solution | USACO Guide",
        "resource_comments": "use the treap implemention if you are familiar with treaps",
        "resource_url": "https://usaco.guide/problems/ioi-2013game/solution"
      }
    ],
    "topic_id": "2d_dynamic_segment_tree",
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Segment%20Tree%202D%20Dynamic.cpp"
    ],
    "completion_count": 6,
    "created_at": {
      "seconds": 1713053960,
      "nanoseconds": 881000000
    }
  },
  "2d_fft_ntt": {
    "created_at": {
      "seconds": 1714361923,
      "nanoseconds": 684000000
    },
    "resources": [],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/NTT%202D.cpp"
    ],
    "topic_id": "2d_fft_ntt",
    "is_data_complete": true,
    "completion_count": 3
  },
  "2d_prefix_sum": {
    "is_data_complete": true,
    "completion_count": 88,
    "created_at": {
      "seconds": 1715078710,
      "nanoseconds": 83000000
    },
    "topic_id": "2d_prefix_sum",
    "problem_order": [
      "cses_1652",
      "codeforces_1722e",
      "usaco_919",
      "usaco_416",
      "codeforces_1829g",
      "codechef_tictacto"
    ],
    "resources": [
      {
        "resource_title": "More on Prefix Sums | USACO Guide",
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://usaco.guide/silver/more-prefix-sums?lang=cpp"
      },
      {
        "resource_url": "https://www.geeksforgeeks.org/prefix-sum-2d-array/",
        "resource_title": "Prefix Sum of Matrix (Or 2D Array) | Geeks for Geeks",
        "resource_comments": ""
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Basics/Prefix%20Sum%202D.cpp"
    ]
  },
  "2d_segment_tree": {
    "resources": [
      {
        "resource_url": "https://cp-algorithms.com/data_structures/segment_tree.html#generalization-to-higher-dimensions",
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Generalization to higher dimensions | CP Algorithms"
      },
      {
        "resource_title": "2D segment Tree by papa-ka-para",
        "resource_url": "https://www.youtube.com/watch?v=kKlZ9B3cS14",
        "resource_comments": ""
      }
    ],
    "is_data_complete": true,
    "completion_count": 12,
    "problem_order": [
      "cses_1739",
      "uva_3226",
      "codeforces_869e",
      "ioi13_game",
      "wcipeg_ioi0722"
    ],
    "topic_id": "2d_segment_tree",
    "template_codes": [],
    "created_at": {
      "seconds": 1712897075,
      "nanoseconds": 380000000
    }
  },
  "2d_string_hashing": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Strings/String%20Hashing%202D.cpp"
    ],
    "is_data_complete": true,
    "topic_id": "2d_string_hashing",
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/63588",
        "resource_title": "Hashing a board"
      }
    ],
    "created_at": {
      "seconds": 1714640878,
      "nanoseconds": 713000000
    },
    "completion_count": 5
  },
  "3_sat": {
    "is_data_complete": true,
    "resources": [
      {
        "resource_title": "DPLL algorithm",
        "resource_url": "https://en.wikipedia.org/wiki/DPLL_algorithm",
        "resource_comments": ""
      },
      {
        "resource_url": "https://mertozlutiras.medium.com/brief-explanation-of-dpll-davis-putnam-logemann-loveland-algorithm-663f4a603c1",
        "resource_comments": "",
        "resource_title": "How does DPLL Algorithm Work? A Brief Explanation of DPLL | Mert Özlütıraş"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/3%20SAT.cpp"
    ],
    "completion_count": 0,
    "created_at": {
      "seconds": 1714049985,
      "nanoseconds": 986000000
    },
    "topic_id": "3_sat"
  },
  "4d_mo": {
    "resources": [],
    "problem_order": [
      "gym_101138d",
      "codeforces_1767f"
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/4D%20MO.cpp"
    ],
    "completion_count": 2,
    "topic_id": "4d_mo",
    "is_data_complete": true,
    "created_at": {
      "seconds": 1713391382,
      "nanoseconds": 149000000
    }
  },
  "a_star_algorithm": {
    "problem_order": [
      "hackerrank_pacman_astar",
      "hackerrank_pacman_ucs",
      "spoj_rapregui"
    ],
    "topic_id": "a_star_algorithm",
    "completion_count": 3,
    "created_at": {
      "seconds": 1714108937,
      "nanoseconds": 221000000
    },
    "is_data_complete": true,
    "template_codes": [],
    "resources": [
      {
        "resource_url": "https://en.wikipedia.org/wiki/A*_search_algorithm",
        "resource_title": "A* search algorithm | Wiki",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_title": "A* Search Algorithm | Geeks For Geeks",
        "resource_url": "https://www.geeksforgeeks.org/a-search-algorithm/"
      }
    ]
  },
  "activity_selection_problem": {
    "template_codes": [],
    "topic_id": "activity_selection_problem",
    "completion_count": 18,
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714833079,
      "nanoseconds": 123000000
    },
    "problem_order": [
      "cses_1632",
      "cses_1140",
      "gym_101242l"
    ],
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://www.geeksforgeeks.org/activity-selection-problem-greedy-algo-1/",
        "resource_comments": "",
        "resource_title": "Activity Selection Problem | Greedy Algo-1 | Geeks for Geeks"
      },
      {
        "resource_title": "Activity selection problem | Wiki",
        "resource_comments": "",
        "resource_url": "https://en.wikipedia.org/wiki/Activity_selection_problem"
      },
      {
        "resource_title": "Optimal schedule of jobs given their deadlines and durations | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/schedules/schedule-with-completion-duration.html",
        "resource_comments": "",
        "is_starred": true
      }
    ]
  },
  "aho_corasick": {
    "created_at": {
      "seconds": 1714641854,
      "nanoseconds": 162000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Strings/Aho%20Corasick.cpp",
      "https://github.com/ShahjalalShohag/code-library/blob/main/Strings/Aho%20Corasick%20All%20Pair%20Occurrence%20Relation.cpp"
    ],
    "topic_id": "aho_corasick",
    "problem_order": [
      "cses_2102",
      "cses_2103",
      "lightoj_substring_frequency_ii",
      "kattis_stringmultimatching",
      "uva_2637",
      "uva_2112",
      "uva_1620",
      "timus_1269",
      "timus_1158",
      "codeforces_163e",
      "cses_1731",
      "hackerearth_abcd_strings",
      "cf_gym_101174e",
      "codeforces_963d",
      "codeforces_1400f",
      "codechef_twostrs"
    ],
    "is_data_complete": true,
    "resources": [
      {
        "is_starred": true,
        "resource_title": "Aho-Corasick algorithm | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/string/aho_corasick.html",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_title": "Aho-Corasick algorithm. Construction  By adamant",
        "resource_url": "https://codeforces.com/blog/entry/14854"
      }
    ],
    "completion_count": 10
  },
  "aliens_trick": {
    "completion_count": 5,
    "template_codes": [],
    "topic_id": "aliens_trick",
    "problem_order": [
      "noi19_feast",
      "codeforces_1279f",
      "usaco_697",
      "codeforces_739e",
      "codeforces_673e",
      "codeforces_802o",
      "ioi16_aliens",
      "csacademy_popcorn",
      "cf_gym_102331h"
    ],
    "is_data_complete": true,
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://mamnoonsiam.github.io/posts/attack-on-aliens.html",
        "resource_comments": "",
        "resource_title": "My Take on Aliens' Trick | Mamnoon Siam"
      },
      {
        "resource_title": "Theoretical grounds of lambda optimization  By adamant",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/98334",
        "is_starred": true
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/49691",
        "resource_title": "Incredibly beautiful DP optimization from N^3 to N log^2 N  By linkret",
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://cpblog.rezwanarefin.me/posts/ioi16-aliens-trick/",
        "resource_title": "Dynamic Programming Optimization - IOI'16 Aliens Trick | Rezwan Arefin"
      },
      {
        "resource_url": "https://www.serbanology.com/vault/The%20Trick%20From%20Aliens",
        "resource_comments": "",
        "resource_title": "The Trick From Aliens | SERBANOLOGY"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/46693",
        "resource_comments": "",
        "resource_title": "VK cup eliminations — Levels and Regions — higher limits  By Radewoosh"
      },
      {
        "resource_comments": "",
        "resource_url": "https://usaco.guide/adv/lagrange?lang=cpp",
        "resource_title": "Lagrangian Relaxation | USACO Guide"
      }
    ],
    "created_at": {
      "seconds": 1714131347,
      "nanoseconds": 323000000
    }
  },
  "all_pair_segment_intersection": {
    "created_at": {
      "seconds": 1714764426,
      "nanoseconds": 724000000
    },
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "Search for a pair of intersecting segments | CP Algorithms",
        "is_starred": true,
        "resource_url": "https://cp-algorithms.com/geometry/intersecting_segments.html"
      }
    ],
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Geometry/All%20Pair%20Segment%20Intersection.cpp"
    ],
    "topic_id": "all_pair_segment_intersection",
    "problem_order": [
      "codeforces_1359f",
      "timus_1469"
    ]
  },
  "all_subarray_maximum_minimum": {
    "problem_order": [
      "cses_1645",
      "leetcode_next_greater_element_i",
      "atcoder_agc005_b",
      "leetcode_sum_of_subarray_minimums",
      "spoj_diferenc",
      "codeforces_547b",
      "gym_104120i",
      "codeforces_526f",
      "codeforces_602d",
      "codechef_mtmxsum",
      "codeforces_1483c",
      "csacademy_min_max_sum",
      "dmoj_coci14c2p6",
      "codeforces_1777f"
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714910055,
      "nanoseconds": 88000000
    },
    "completion_count": 8,
    "topic_id": "all_subarray_maximum_minimum",
    "resources": [
      {
        "resource_url": "https://en.wikipedia.org/wiki/All_nearest_smaller_values",
        "resource_title": "All nearest smaller values | Wiki",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_title": "Find the nearest smaller numbers on left side in an array | Geeks for Geeks",
        "is_starred": true,
        "resource_url": "https://www.geeksforgeeks.org/find-the-nearest-smaller-numbers-on-left-side-in-an-array/"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/21902?#comment-265823",
        "resource_comments": "",
        "resource_title": "A comment by animeshf regarding sum of all subarray maximums",
        "is_starred": true
      }
    ],
    "template_codes": []
  },
  "all_substring_longest_common_subsequence": {
    "topic_id": "all_substring_longest_common_subsequence",
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Strings/All%20Substring%20Longest%20Common%20Subsequence.cpp"
    ],
    "resources": [
      {
        "resource_url": "https://www.sciencedirect.com/science/article/pii/S0166218X07002727",
        "resource_comments": "",
        "resource_title": "An all-substrings common subsequence algorithm | Paper",
        "is_starred": true
      },
      {
        "resource_title": "[Tutorial] On Range LIS Queries, Part 1  By ko_osaga",
        "resource_url": "https://codeforces.com/blog/entry/111625",
        "resource_comments": "",
        "is_starred": true
      }
    ],
    "created_at": {
      "seconds": 1714650417,
      "nanoseconds": 720000000
    },
    "completion_count": 1
  },
  "alpha_beta_pruning": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Game%20Theory/Alpha%20Beta%20Pruning.cpp"
    ],
    "completion_count": 1,
    "topic_id": "alpha_beta_pruning",
    "created_at": {
      "seconds": 1714741093,
      "nanoseconds": 155000000
    },
    "is_data_complete": true,
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://www.geeksforgeeks.org/minimax-algorithm-in-game-theory-set-4-alpha-beta-pruning/",
        "resource_title": "Minimax Algorithm in Game Theory | Set 4 | Geeks for Geeks"
      }
    ]
  },
  "angles_3d": {
    "topic_id": "angles_3d",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%203D.cpp#L204-L226"
    ],
    "resources": [
      {
        "resource_url": "https://victorlecomte.com/cp-geo.pdf",
        "resource_title": "Chapter 3.4 Angles between planes and lines | CP Geo",
        "is_starred": true,
        "resource_comments": ""
      }
    ],
    "created_at": {
      "seconds": 1714761655,
      "nanoseconds": 366000000
    }
  },
  "arrays": {
    "resources": [
      {
        "is_starred": true,
        "resource_comments": "",
        "is_video_type": true,
        "resource_title": "Arrays  | Tech With Tim",
        "resource_url": "https://www.youtube.com/watch?v=1FVBeLD_FdE&list=PLzMcBGfZo4-lmGC8VW0iu6qfMHjy7gLQ3&index=9"
      },
      {
        "resource_comments": "",
        "resource_title": "C++ Arrays | Programiz",
        "resource_url": "https://www.programiz.com/cpp-programming/arrays",
        "is_starred": true
      },
      {
        "resource_title": "Passing Array to a Function in C++ Programming | Programiz",
        "resource_comments": "",
        "resource_url": "https://www.programiz.com/cpp-programming/passing-arrays-function"
      },
      {
        "resource_title": "C++ Multidimensional Arrays | Programiz",
        "resource_comments": "",
        "resource_url": "https://www.programiz.com/cpp-programming/multidimensional-arrays"
      }
    ],
    "completion_count": 727,
    "created_at": {
      "seconds": 1713661826,
      "nanoseconds": 863000000
    },
    "template_codes": [],
    "topic_id": "arrays",
    "is_data_complete": true,
    "problem_order": [
      "gym_287310a",
      "gym_287310b",
      "gym_287310c",
      "gym_287309e",
      "gym_287310e",
      "gym_287309y",
      "gym_287310f",
      "gym_287310g",
      "gym_287310h",
      "gym_287310i",
      "gym_287310l",
      "gym_287310m",
      "gym_287310p",
      "gym_287310q",
      "gym_287310r",
      "gym_287310v",
      "gym_287310u",
      "gym_287310s",
      "gym_287310t",
      "gym_287310w",
      "hackerrank_2d_array"
    ]
  },
  "articulation_bridges_and_bridge_tree": {
    "completion_count": 30,
    "created_at": {
      "seconds": 1714027313,
      "nanoseconds": 913000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Articulation%20Bridges.cpp"
    ],
    "problem_order": [
      "yosupo_two_edge_connected_components",
      "codeforces_1000e",
      "spoj_ec_p",
      "uva_796",
      "uva_610",
      "ceoi17_oneway",
      "cf_gym_100114j",
      "spoj_graffdef",
      "codeforces_732f",
      "codeforces_700c",
      "cf_gym_100676h",
      "hackerearth_delete_and_cut_game_91969de1",
      "codechef_prcnsr2",
      "codeforces_555e",
      "hackerrank_sherlock_and_queries_on_the_graph"
    ],
    "topic_id": "articulation_bridges_and_bridge_tree",
    "is_data_complete": true,
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/graph/bridge-searching.html",
        "is_starred": true,
        "resource_title": "Finding bridges in a graph in  O(N + M) | CP Algorithms"
      },
      {
        "is_starred": true,
        "resource_title": "Bridge Trees [Tutorial]  By aryan12",
        "resource_url": "https://codeforces.com/blog/entry/99259",
        "resource_comments": ""
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/71146",
        "resource_title": "Articulation points and bridges (Tarjan's Algorithm)  By searleser97",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_url": "https://www.hackerearth.com/practice/algorithms/graphs/articulation-points-and-bridges/tutorial/",
        "resource_title": "Articulation Points and Bridges | HackerEarth"
      },
      {
        "resource_comments": "",
        "resource_title": "The \"Bridge Tree\" of a graph | Tanuj Khattar",
        "resource_url": "https://threadsiiithyderabad.quora.com/The-Bridge-Tree-of-a-graph"
      }
    ]
  },
  "articulation_points": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Articulation%20Points.cpp",
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Block%20Cut%20Tree.cpp"
    ],
    "is_data_complete": true,
    "completion_count": 13,
    "topic_id": "articulation_points",
    "created_at": {
      "seconds": 1714028922,
      "nanoseconds": 241000000
    },
    "problem_order": [
      "uva_315",
      "uva_10199",
      "uva_10765",
      "cses_1705",
      "yosupo_biconnected_components",
      "spoj_submerge",
      "szkopul_edt8w290owtatmcjad0o0ywk",
      "apio18_duathlon",
      "szkopul_yy6_3ua_c1rt7q_97lawc0up",
      "cf_gym_102512a",
      "dmoj_tle17c1p6",
      "ceoi15_pipes",
      "codechef_sadpairs"
    ],
    "resources": [
      {
        "resource_title": "Finding articulation points in a graph in O(N + M) | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/graph/cutpoints.html",
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "resource_url": "https://www.hackerearth.com/practice/algorithms/graphs/articulation-points-and-bridges/tutorial/",
        "resource_title": "Articulation Points and Bridges | HackerEarth",
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_url": "https://usaco.guide/adv/BCC-2CC?lang=cpp#biconnected-components",
        "resource_comments": "",
        "resource_title": "Biconnected Components | USACO Guide"
      },
      {
        "resource_comments": "",
        "resource_url": "https://en.wikipedia.org/wiki/Biconnected_component#Block-cut_tree",
        "is_starred": true,
        "resource_title": "Block-cut tree | Wiki"
      }
    ]
  },
  "augmented_dsu": {
    "created_at": {
      "seconds": 1713324944,
      "nanoseconds": 826000000
    },
    "topic_id": "augmented_dsu",
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://medium.com/@alphawizard/augmented-dsu-f2c974926cb2",
        "resource_title": "Augmented DSU | Arpit Gupta"
      },
      {
        "resource_title": "Atcoder Good Set Query Problem Editorial by en_translator",
        "resource_comments": "",
        "resource_url": "https://atcoder.jp/contests/abc328/editorial/7664"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Augmented%20DSU.cpp"
    ],
    "is_data_complete": true,
    "problem_order": [
      "atcoder_abc328_f",
      "spoj_chain",
      "timus_1003"
    ],
    "completion_count": 6
  },
  "backtracking": {
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "What is Backtracking Algorithm? Types, Examples & its Application By Soni Upadhyay",
        "is_starred": true,
        "resource_url": "https://www.simplilearn.com/tutorials/data-structure-tutorial/backtracking-algorithm"
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Backtracking tutorial: power set  WilliamFiset",
        "resource_url": "https://www.youtube.com/watch?v=RnlHPR0lyOE",
        "is_video_type": true
      },
      {
        "resource_title": "Recursion and Backtracking | HackerEarth",
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://www.hackerearth.com/practice/basic-programming/recursion/recursion-and-backtracking/tutorial/"
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://www.geeksforgeeks.org/introduction-to-backtracking-data-structure-and-algorithm-tutorials/",
        "resource_title": "Introduction to Backtracking – Data Structure and Algorithm Tutorials | Geeks for Geeks"
      },
      {
        "resource_url": "https://www.programiz.com/dsa/backtracking-algorithm",
        "resource_title": "Backtracking Algorithm | Programiz",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_title": "N Queens Problem | Geeks for Geeks",
        "resource_url": "https://www.geeksforgeeks.org/printing-solutions-n-queen-problem/"
      },
      {
        "resource_url": "https://www.geeksforgeeks.org/sudoku-backtracking-7/",
        "resource_title": "Sudoku | Geeks for Geeks",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_title": "M coloring problem | Geeks for Geeks",
        "resource_url": "https://www.geeksforgeeks.org/m-coloring-problem/"
      },
      {
        "resource_title": "Hamiltonian path problem | Wiki",
        "resource_comments": "",
        "resource_url": "https://en.wikipedia.org/wiki/Hamiltonian_path_problem"
      },
      {
        "resource_title": "Eight queens puzzle | Wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Eight_queens_puzzle",
        "resource_comments": ""
      },
      {
        "resource_url": "https://en.wikipedia.org/wiki/Knight%27s_tour",
        "resource_comments": "",
        "resource_title": "Knight's tour | Wiki"
      },
      {
        "resource_title": "15 Puzzle Game: Existence Of The Solution | CP Algorithms",
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/others/15-puzzle.html"
      }
    ],
    "is_data_complete": true,
    "topic_id": "backtracking",
    "template_codes": [],
    "problem_order": [
      "codeforces_476b",
      "cses_2165",
      "uva_569",
      "poj_1979",
      "uva_750",
      "uva_167",
      "poj_1315",
      "kattis_mapcolouring",
      "uva_524",
      "uva_775",
      "uva_571",
      "uva_11085",
      "uva_10344",
      "uva_677",
      "cses_1689",
      "kattis_randomdigitalexponentiation",
      "lightoj_c_icpc_dhk_2021",
      "spoj_btck",
      "uva_574",
      "spoj_invphi",
      "lightoj_1061",
      "cf_gym_102040d"
    ],
    "completion_count": 10,
    "created_at": {
      "seconds": 1714907665,
      "nanoseconds": 799000000
    }
  },
  "balanced_brackets": {
    "problem_order": [
      "uva_614",
      "leetcode_valid_parentheses",
      "codeforces_5c",
      "cses_2064",
      "codeforces_1726c",
      "codeforces_1023c",
      "codeforces_1153c",
      "cses_2187",
      "codeforces_785d",
      "codeforces_1015f",
      "kattis_piecesofparentheses",
      "codeforces_670e",
      "codeforces_223a",
      "cf_gym_101341a",
      "atcoder_abc223_f",
      "codeforces_380c",
      "codeforces_1830c"
    ],
    "is_data_complete": true,
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "Balanced bracket sequences | CP Algorithms",
        "is_starred": true,
        "resource_url": "https://cp-algorithms.com/combinatorics/bracket_sequences.html"
      },
      {
        "resource_url": "https://www.geeksforgeeks.org/check-for-balanced-parentheses-in-an-expression/",
        "resource_comments": "",
        "resource_title": "Check for Balanced Brackets in an expression | Geeks for Geeks",
        "is_starred": true
      }
    ],
    "template_codes": [],
    "topic_id": "balanced_brackets",
    "completion_count": 9,
    "created_at": {
      "seconds": 1714650760,
      "nanoseconds": 831000000
    }
  },
  "basis_vector": {
    "is_data_complete": true,
    "topic_id": "basis_vector",
    "completion_count": 4,
    "resources": [
      {
        "resource_comments": "check all Week 3 lectures",
        "resource_url": "https://www.math.uh.edu/~jiwenhe/math2331/index.htm",
        "resource_title": "Math 2331 - 17040: Linear Algebra | Dr. Jiwen He",
        "is_starred": true
      },
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "XOR Basis Presentation | Benq",
        "resource_url": "https://drive.google.com/drive/folders/1Ll8EuA3p64JLmzImfQu5qiWvc6_QTa0E"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/68953",
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "A Beautiful Technique for Some XOR Related Problems  By DrSwad"
      },
      {
        "resource_comments": "",
        "resource_title": "Linear Basis (Xor Basis Extended)  By errorgorn",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/98376"
      },
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/100066",
        "resource_title": "XOR basis without linear algebra  By Everule"
      },
      {
        "resource_title": "2 Special cases of Gaussian [Tutorial]  By MazzForces",
        "resource_comments": "check problem 2",
        "resource_url": "https://codeforces.com/blog/entry/60003"
      }
    ],
    "problem_order": [
      "lightoj_maximum_subset_sum",
      "spoj_xmax",
      "cf_group_203881s",
      "lightoj_subsets_forming_perfect_squar",
      "codeforces_895c",
      "codeforces_959f",
      "codeforces_1100f",
      "atcoder_agc045_a",
      "codeforces_1101g",
      "codeforces_845g",
      "codeforces_1163e",
      "codechef_xorcmpnt",
      "hackerearth_chef_f59c8115",
      "atcoder_abc223_h",
      "atcoder_abc236_f",
      "atcoder_abc141_f",
      "codeforces_662a",
      "cf_gym_103414g",
      "codeforces_587e"
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Basis%20Vector.cpp"
    ],
    "created_at": {
      "seconds": 1714466969,
      "nanoseconds": 438000000
    }
  },
  "basis_vector_ft_lexicographically_largest_basis": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Basis%20Vector%20ft%20Weighted%20Linearly%20Independent%20Vectors.cpp"
    ],
    "completion_count": 2,
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/112149?#comment-999480",
        "resource_comments": "",
        "resource_title": "A comment by jiangly",
        "is_starred": true
      }
    ],
    "is_data_complete": true,
    "topic_id": "basis_vector_ft_lexicographically_largest_basis",
    "created_at": {
      "seconds": 1714472903,
      "nanoseconds": 160000000
    }
  },
  "basis_vector_reduced_row_echelon_form": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Basis%20Vector%20Reduced%20Row%20Echelon%20Form.cpp"
    ],
    "created_at": {
      "seconds": 1714472593,
      "nanoseconds": 573000000
    },
    "is_data_complete": true,
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://en.wikipedia.org/wiki/Row_echelon_form#Reduced_row_echelon_form",
        "resource_title": "Reduced row echelon form | Wiki"
      }
    ],
    "completion_count": 2,
    "topic_id": "basis_vector_reduced_row_echelon_form"
  },
  "batch_processing": {
    "topic_id": "batch_processing",
    "template_codes": [],
    "completion_count": 8,
    "resources": [
      {
        "resource_title": "Batching | USACO Guide",
        "resource_comments": "",
        "resource_url": "https://usaco.guide/plat/sqrt?lang=cpp#batching",
        "is_starred": true
      },
      {
        "is_starred": true,
        "resource_url": "https://usaco.guide/CPH.pdf#page=263",
        "resource_title": "27.1- Batch Processing | Competitive Programming Handbook",
        "resource_comments": ""
      },
      {
        "resource_comments": "check from 13:18 to 18:13",
        "resource_title": "Sqrt decomposition by queries | Errichto",
        "resource_url": "https://www.youtube.com/watch?v=BJhzd_VG61k",
        "is_video_type": true
      },
      {
        "resource_comments": "check 23:08 to 30:20",
        "is_video_type": true,
        "resource_url": "https://www.youtube.com/watch?v=Uqyn-3w7yIU",
        "resource_title": "Square root decomposition topic summary | Competitive Programming | Vivek Gupta | Advanced"
      }
    ],
    "created_at": {
      "seconds": 1713378076,
      "nanoseconds": 491000000
    },
    "is_data_complete": true
  },
  "bell_number": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Bell%20Number.cpp"
    ],
    "resources": [
      {
        "resource_url": "https://en.wikipedia.org/wiki/Bell_number",
        "resource_comments": "",
        "resource_title": "Bell number | Wiki"
      }
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714305901,
      "nanoseconds": 989000000
    },
    "topic_id": "bell_number",
    "completion_count": 4
  },
  "bellman_ford": {
    "completion_count": 49,
    "topic_id": "bellman_ford",
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714045126,
      "nanoseconds": 36000000
    },
    "problem_order": [
      "kattis_shortestpath3",
      "cses_1673",
      "cses_1197",
      "eolymp_1453",
      "uva_423",
      "uva_10099",
      "uva_515"
    ],
    "resources": [
      {
        "resource_url": "https://cp-algorithms.com/graph/bellman_ford.html",
        "resource_title": "Bellman-Ford Algorithm | CP Algorithms",
        "resource_comments": "check until \"Shortest Path Faster Algorithm \"",
        "is_starred": true
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=lyw4FaxrwHg",
        "is_starred": true,
        "resource_title": "Bellman Ford Algorithm | Shortest path & Negative cycles | Graph Theory  WilliamFiset",
        "is_video_type": true,
        "resource_comments": ""
      },
      {
        "resource_title": "Bellman-Ford | USACO Guide",
        "resource_comments": "",
        "resource_url": "https://usaco.guide/adv/sp-neg?lang=cpp#shortest-paths"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Bellman%20Ford.cpp"
    ]
  },
  "berlekamp_messey": {
    "is_data_complete": true,
    "topic_id": "berlekamp_messey",
    "problem_order": [
      "yosupo_find_linear_recurrence",
      "spoj_itrix12e",
      "codeforces_392c",
      "spoj_fibpwsum",
      "codechef_partn01",
      "codechef_rec20f",
      "atcoder_abc198_f",
      "codeforces_506e",
      "cf_gym_102268e",
      "codechef_panic",
      "loj_2463"
    ],
    "created_at": {
      "seconds": 1714458105,
      "nanoseconds": 327000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/BerleKamp%20Massey.cpp"
    ],
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "Trivialize Linear Recurrence Problems with Berlekamp-Massey! | mzhang2021",
        "resource_url": "https://mzhang2021.github.io/cp-blog/berlekamp-massey/",
        "is_starred": true
      },
      {
        "resource_title": "Linear Recurrence and Berlekamp-Massey Algorithm  By TLE",
        "resource_url": "https://codeforces.com/blog/entry/61306",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_comments": "Not Berlekamp Messey, but another way to recover linear recurrence. You can safely ignore this if you want.",
        "resource_url": "https://codeforces.com/blog/entry/101628",
        "resource_title": "Recovering a linear recurrence with the extended Euclidean algorithm  By adamant"
      }
    ],
    "completion_count": 3
  },
  "bertrands_ballot_theorem": {
    "completion_count": 1,
    "created_at": {
      "seconds": 1714306207,
      "nanoseconds": 189000000
    },
    "topic_id": "bertrands_ballot_theorem",
    "template_codes": [],
    "resources": [
      {
        "resource_url": "https://en.wikipedia.org/wiki/Bertrand%27s_ballot_theorem",
        "resource_title": "Bertrand's ballot theorem | Wiki",
        "resource_comments": "check the \"Random walks\" section too"
      }
    ],
    "is_data_complete": true
  },
  "best_theorem": {
    "template_codes": [],
    "created_at": {
      "seconds": 1714111392,
      "nanoseconds": 113000000
    },
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "BEST theorem | wiki",
        "resource_url": "https://en.wikipedia.org/wiki/BEST_theorem",
        "is_starred": true
      },
      {
        "is_starred": true,
        "resource_title": "Editorial of Problem G - 16 Integers",
        "resource_comments": "",
        "resource_url": "https://atcoder.jp/contests/abc336/editorial/9283"
      }
    ],
    "completion_count": 1,
    "is_data_complete": true,
    "topic_id": "best_theorem"
  },
  "bezouts_identity": {
    "completion_count": 20,
    "template_codes": [],
    "created_at": {
      "seconds": 1714212872,
      "nanoseconds": 591000000
    },
    "resources": [
      {
        "is_starred": true,
        "resource_title": "Bezout's Identity | Brilliant",
        "resource_url": "https://brilliant.org/wiki/bezouts-identity/",
        "resource_comments": ""
      },
      {
        "resource_title": "Bézout's identity | Wiki",
        "resource_comments": "",
        "resource_url": "https://en.wikipedia.org/wiki/B%C3%A9zout%27s_identity"
      },
      {
        "resource_title": "Bazout's Identity, Codeforces Round #499 (Div. 2) — E  By CazadorDivino",
        "resource_url": "https://codeforces.com/blog/entry/60892",
        "resource_comments": "Discussion of this problem: https://codeforces.com/contest/1011/problem/E"
      },
      {
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/watch?v=yYxQ9_EL69Q",
        "resource_title": "Bézout's identity || Problem D || Codeforces Round 698 || Nezzar and Board || Div 2 |  Anmol Gera"
      }
    ],
    "is_data_complete": true,
    "topic_id": "bezouts_identity"
  },
  "bfs": {
    "topic_id": "bfs",
    "completion_count": 101,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/BFS.cpp"
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1713941892,
      "nanoseconds": 666000000
    },
    "problem_order": [
      "cses_1667",
      "codeforces_242c",
      "spoj_nakanj",
      "codeforces_378c",
      "cses_1193",
      "codeforces_769c",
      "spoj_adacycle",
      "spoj_digokeys",
      "uva_336",
      "uva_429",
      "uva_439",
      "codeforces_796d",
      "codeforces_1037d",
      "codeforces_1651d",
      "codeforces_35c",
      "codeforces_59e",
      "cses_1194",
      "spoj_multii",
      "uva_10653",
      "codeforces_1407e"
    ],
    "resources": [
      {
        "resource_url": "https://www.youtube.com/watch?v=xlVX7dXLS64",
        "is_video_type": true,
        "resource_comments": "",
        "resource_title": "Breadth First Search (BFS): Visualized and Explained | Reducible",
        "is_starred": true
      },
      {
        "is_video_type": true,
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/watch?v=oDqjPvD54Ss",
        "resource_title": "Breadth First Search Algorithm | Shortest Path | Graph Theory | WilliamFiset"
      },
      {
        "is_video_type": true,
        "resource_title": "Breadth First Search grid shortest path | Graph Theory  WilliamFiset",
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://www.youtube.com/watch?v=KiCBXu4P-2Y"
      },
      {
        "resource_title": "Breadth-first search | CP Algorithms",
        "is_starred": true,
        "resource_url": "https://cp-algorithms.com/graph/breadth-first-search.html",
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_title": "Breadth first search | CS Academy",
        "resource_url": "https://csacademy.com/lesson/breadth_first_search",
        "resource_comments": "great animations!"
      },
      {
        "resource_title": "Breadth First Search | HackerEarth",
        "is_starred": true,
        "resource_url": "https://www.hackerearth.com/practice/algorithms/graphs/breadth-first-search/tutorial/",
        "resource_comments": ""
      },
      {
        "resource_title": "Breadth first search | Programiz",
        "resource_url": "https://www.programiz.com/dsa/graph-bfs",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_title": "গ্রাফ থিওরিতে হাতেখড়ি-৪(ব্রেডথ ফার্স্ট সার্চ) | শাফায়েতের ব্লগ",
        "resource_url": "https://www.shafaetsplanet.com/?p=604"
      },
      {
        "resource_title": "Multisource BFS | Devansh",
        "resource_comments": "",
        "resource_url": "https://medium.com/geekculture/multisource-bfs-for-your-faang-coding-interviews-d5177753f507"
      }
    ]
  },
  "bigint": {
    "resources": [
      {
        "resource_comments": "Why to use and applications of BigInt?",
        "resource_title": "BigInt (BIG INTEGERS) in C++ with Example (GFG)",
        "is_starred": true,
        "resource_url": "https://www.geeksforgeeks.org/bigint-big-integers-in-c-with-example/"
      },
      {
        "resource_title": "How to use BigInt?",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/16380"
      }
    ],
    "topic_id": "bigint",
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714907411,
      "nanoseconds": 844000000
    },
    "completion_count": 2,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Miscellaneous/BigInt.cpp"
    ],
    "problem_order": [
      "yosupo_addition_of_big_integers",
      "codechef_multisrm",
      "spoj_mul",
      "spoj_vfmul",
      "yosupo_multiplication_of_big_integers",
      "yosupo_division_of_big_integers",
      "codeforces_986d",
      "codeforces_98b"
    ]
  },
  "binarizing_a_tree": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Binarizing%20a%20Tree.cpp"
    ],
    "created_at": {
      "seconds": 1714832344,
      "nanoseconds": 112000000
    },
    "resources": [
      {
        "resource_title": "Editorial of 757G — Can Bash Save the Day?",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/49743",
        "is_starred": true
      }
    ],
    "is_data_complete": true,
    "topic_id": "binarizing_a_tree",
    "completion_count": 2
  },
  "binary_exponentiation": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Basics/Binary%20Exponentiation.cpp"
    ],
    "topic_id": "binary_exponentiation",
    "completion_count": 84,
    "is_data_complete": true,
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/72527",
        "resource_title": "Modular Arithmetic for Beginners  By Spheniscine",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "resource_title": "Binary Exponentiation | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/algebra/binary-exp.html",
        "is_starred": true
      },
      {
        "is_starred": false,
        "resource_url": "https://usaco.guide/gold/modular?lang=cpp",
        "resource_title": "Modular Arithmetic | USACO Guide",
        "resource_comments": "check until \"Modular Inverse\""
      }
    ],
    "created_at": {
      "seconds": 1715079113,
      "nanoseconds": 899000000
    },
    "problem_order": [
      "cses_1095",
      "uva_3671",
      "uva_310",
      "spoj_lastdig",
      "leetcode_count_good_numbers",
      "codeforces_1178c",
      "uva_1970",
      "codechef_riffles",
      "spoj_zsum",
      "spoj_locker"
    ]
  },
  "binary_lifting_and_lca": {
    "is_data_complete": true,
    "problem_order": [
      "cses_1687",
      "cses_1688",
      "yosupo_lca",
      "cses_1135",
      "yosupo_jump_on_tree",
      "spoj_disquery",
      "hackerrank_kth_ancestor",
      "lightoj_a_secret_mission",
      "cses_1750",
      "cf_gym_102694c",
      "cf_gym_102694d",
      "lightoj_min_max_roads",
      "codeforces_1328e",
      "codeforces_1702g2",
      "codeforces_832d",
      "spoj_qtree2",
      "codeforces_1142b",
      "cses_1160",
      "toph_city_of_atlantis",
      "codeforces_208e",
      "codechef_lgseg",
      "cses_1191",
      "codeforces_176e",
      "codeforces_191c",
      "codeforces_466e",
      "codeforces_519e",
      "codeforces_587c",
      "codeforces_609e",
      "hackerearth_optimal_connectivity_c6ae79ca",
      "codechef_talca",
      "codeforces_629e",
      "csacademy_root_lca_queries",
      "codeforces_733f",
      "codeforces_855d",
      "codeforces_916e",
      "spoj_adaorang",
      "codeforces_1843f2",
      "atcoder_abc346_f",
      "kattis_surveillance",
      "toph_fun_with_functions",
      "toph_static_tree",
      "codeforces_372d",
      "codeforces_986e",
      "tlx_troc_12f",
      "tlx_troc_13g"
    ],
    "completion_count": 65,
    "topic_id": "binary_lifting_and_lca",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/LCA.cpp"
    ],
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "Binary Lifting (Kth Ancestor of a Tree Node) | Errichto",
        "resource_url": "https://www.youtube.com/watch?v=oib-XsjFa-M",
        "is_starred": true,
        "is_video_type": true
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "is_video_type": true,
        "resource_title": "LCA – Lowest Common Ancestor | Errichto",
        "resource_url": "https://www.youtube.com/watch?v=dOAxrhAUIhA"
      },
      {
        "is_starred": true,
        "resource_url": "https://cp-algorithms.com/graph/lca_binary_lifting.html",
        "resource_title": "Lowest Common Ancestor - Binary Lifting | CP Algorithms",
        "resource_comments": ""
      },
      {
        "resource_url": "https://youtu.be/MOy4UDjN8DM?t=1057&si=YJIZrm_NKMJzv076",
        "resource_comments": "check from 17:37 to 25:00",
        "resource_title": "AlgorithmsThread 8: Tree Basics"
      },
      {
        "resource_title": "Binary Jumping and LCA | USACO Guide",
        "resource_url": "https://usaco.guide/plat/binary-jump?lang=cpp",
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_title": "18.3 Lowest common ancestor | CPH",
        "resource_url": "https://usaco.guide/CPH.pdf#page=177"
      },
      {
        "resource_title": "Binary Lifting | aryansh",
        "resource_comments": "",
        "resource_url": "https://aryansh.gitbook.io/informatics-notes/binary-lifting/binary-lifting-gold-part-1"
      }
    ],
    "created_at": {
      "seconds": 1713951706,
      "nanoseconds": 719000000
    }
  },
  "binary_search": {
    "is_data_complete": true,
    "created_at": {
      "seconds": 1715033113,
      "nanoseconds": 704000000
    },
    "resources": [
      {
        "is_starred": true,
        "resource_comments": "",
        "is_video_type": true,
        "resource_url": "https://www.youtube.com/watch?v=GU7DpgHINWQ&list=PLl0KD3g-oDOHpWRyyGBUJ9jmul0lUOD80&index=3",
        "resource_title": "Binary Search tutorial |  Errichto Algorithms"
      },
      {
        "resource_title": "Binary Search | EDU",
        "is_starred": true,
        "resource_comments": "Complete steps 1, 2, 3, 4 and 5",
        "resource_url": "https://codeforces.com/edu/course/2/lesson/6"
      },
      {
        "is_starred": true,
        "resource_title": "Binary Search | USACO Guide",
        "resource_url": "https://usaco.guide/silver/binary-search?lang=cpp",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_url": "https://csacademy.com/lesson/binary_search",
        "resource_title": "Binary Search | CSAcademy",
        "is_starred": true
      },
      {
        "resource_url": "https://www.programiz.com/dsa/binary-search",
        "resource_comments": "",
        "resource_title": "Binary Search | Programiz"
      },
      {
        "resource_comments": "",
        "resource_title": "Binary Search Algorithm in 100 Seconds | Fireship",
        "resource_url": "https://www.youtube.com/watch?v=MFhxShGxHWc",
        "is_video_type": true
      },
      {
        "resource_url": "https://youtu.be/FYBuOLKKqrw?si=TSRi_J0MB071-uyT",
        "is_video_type": true,
        "resource_title": "Binary Search In One Shot C++ [Hindi]",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_url": "https://nor-blog.codeberg.page/posts/2021-11-07-binary-search/",
        "resource_title": "Binary search and other \"halving\" methods | nor"
      }
    ],
    "completion_count": 153,
    "problem_order": [
      "cf_edu_283911a",
      "cf_edu_283911b",
      "cf_edu_283911c",
      "cf_edu_283911d",
      "cses_1620",
      "cf_edu_283932a",
      "cses_2422",
      "cf_edu_283932b",
      "cf_edu_283932c",
      "cf_edu_283932e",
      "codeforces_1201c",
      "cses_1085",
      "cf_edu_285083b",
      "leetcode_ugly_number_iii",
      "codeforces_1730b",
      "cf_edu_285083a",
      "cses_2431",
      "cf_edu_285083c",
      "cf_edu_285069a",
      "cf_edu_285069c",
      "codeforces_1117c",
      "codeforces_782b",
      "codeforces_1538f",
      "codeforces_670d1",
      "codeforces_348a",
      "yosupo_static_range_frequency",
      "cf_edu_285084c",
      "gym_101242l"
    ],
    "topic_id": "binary_search",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Basics/Binary%20Search.cpp"
    ]
  },
  "bipartite_matching": {
    "topic_id": "bipartite_matching",
    "is_data_complete": true,
    "completion_count": 11,
    "created_at": {
      "seconds": 1714133600,
      "nanoseconds": 58000000
    },
    "problem_order": [
      "cses_1696",
      "spoj_matching",
      "yosupo_bipartitematching",
      "kattis_gopher2",
      "timus_1099",
      "lightoj_knights_in_chessboard_ii",
      "cf_gym_100820a",
      "spoj_adapath",
      "codeforces_1139e",
      "kattis_borders",
      "kattis_justenoughbridges",
      "codeforces_1404e"
    ],
    "resources": [
      {
        "resource_title": "Hopcroft–Karp Algorithm | Brilliant",
        "resource_url": "https://brilliant.org/wiki/hopcroft-karp/",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_title": "Understanding Hopcroft-Karp Algorithm for Maximum Matching | Punem Nithin",
        "resource_url": "https://medium.com/@punem_nithin/understanding-hopcroft-karp-algorithm-for-maximum-matching-9f6d5b4b0719"
      },
      {
        "resource_url": "https://cp-algorithms.com/graph/kuhn_maximum_bipartite_matching.html",
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Kuhn's Algorithm for Maximum Bipartite Matching | CP Algorithms"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/HopCroft%20Karp%20Algorithm.cpp",
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Kuhns%20Algorithm.cpp"
    ]
  },
  "birthday_paradox": {
    "is_data_complete": true,
    "template_codes": [],
    "completion_count": 2,
    "resources": [
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Randomized algorithms lecture #2 - birthday paradox, random shuffle, hashing  Errichto Algorithms",
        "is_video_type": true,
        "resource_url": "https://www.youtube.com/watch?v=GS2MxmorEzc"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/129094",
        "resource_title": "How to blow up too weak hashing without thinking  By physics0523",
        "resource_comments": "example use case of Birthday Paradox",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://en.wikipedia.org/wiki/Birthday_problem",
        "resource_title": "Birthday problem | Wiki"
      }
    ],
    "created_at": {
      "seconds": 1714719734,
      "nanoseconds": 274000000
    },
    "topic_id": "birthday_paradox"
  },
  "bishop_placement": {
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714849787,
      "nanoseconds": 451000000
    },
    "topic_id": "bishop_placement",
    "completion_count": 1,
    "resources": [
      {
        "resource_title": "Placing Bishops on a Chessboard | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/combinatorics/bishops-on-chessboard.html",
        "resource_comments": ""
      }
    ],
    "template_codes": [
      "https://cp-algorithms.com/combinatorics/bishops-on-chessboard.html#implementation"
    ]
  },
  "bit": {
    "problem_order": [
      "lightoj_curious_robin_hood",
      "cses_1651",
      "cses_1144",
      "cf_edu_274545a",
      "spoj_kquery",
      "kattis_megainversions",
      "spoj_crayon",
      "codeforces_459d",
      "codeforces_61e",
      "cses_1734",
      "cses_1749",
      "cf_edu_274684c",
      "codeforces_1234d",
      "codeforces_12d",
      "codeforces_920f",
      "yaroslav and divisors",
      "spoj_adacabaa",
      "codeforces_594d"
    ],
    "completion_count": 56,
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/data_structures/fenwick.html",
        "resource_title": "Fenwick Tree | CP Algorithms",
        "is_starred": true
      },
      {
        "resource_url": "https://www.topcoder.com/community/data-science/data-science-tutorials/binary-indexed-trees/",
        "resource_title": "BINARY INDEXED TREES | Topcoder",
        "resource_comments": "check until 2D BIT"
      },
      {
        "resource_url": "https://csacademy.com/lesson/fenwick_trees",
        "resource_title": "Fenwick Tree | CS Academy",
        "resource_comments": ""
      },
      {
        "resource_title": "Fenwick Trees |  Algorithms Live!",
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/watch?v=kPaJfAUwViY"
      }
    ],
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/BIT.cpp"
    ],
    "topic_id": "bit",
    "created_at": {
      "seconds": 1713055076,
      "nanoseconds": 861000000
    }
  },
  "bit_lcs": {
    "resources": [
      {
        "resource_title": "A Bit-String Longest-Common-Subsequence Algorithm",
        "resource_comments": "",
        "resource_url": "https://users.monash.edu/~lloyd/tildeStrings/Alignment/86.IPL.html"
      }
    ],
    "created_at": {
      "seconds": 1714650471,
      "nanoseconds": 96000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Strings/Bit%20LCS.cpp"
    ],
    "topic_id": "bit_lcs",
    "is_data_complete": true
  },
  "bit_manipulation": {
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Basics/Bitwise%20Operations.cpp"
    ],
    "created_at": {
      "seconds": 1715078944,
      "nanoseconds": 465000000
    },
    "resources": [
      {
        "is_starred": true,
        "resource_title": "Bit manipulation | CP Algorithms",
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/algebra/bit-manipulation.html"
      },
      {
        "resource_url": "https://usaco.guide/silver/intro-bitwise?lang=cpp",
        "is_starred": true,
        "resource_title": "Intro to Bitwise Operators | USACO Guide",
        "resource_comments": ""
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/94470",
        "resource_title": "Some equations using bitwise operators!  By srlabib",
        "resource_comments": ""
      }
    ],
    "problem_order": [
      "codeforces_484a",
      "codeforces_1421a",
      "codechef_nxs2",
      "codeforces_1527a",
      "codeforces_1514b",
      "codechef_bittup",
      "codeforces_1682b",
      "codeforces_242e",
      "codeforces_482b",
      "codeforces_1368d",
      "atcoder_abc171_e",
      "hackerrank_sum_vs_xor",
      "hackerrank_the_great_xor",
      "codeforces_1567b",
      "codeforces_1420b",
      "codeforces_1362b",
      "codeforces_1615b",
      "codeforces_1095c",
      "codeforces_1270c",
      "atcoder_abc147_d",
      "codeforces_1513b",
      "codeforces_1325d",
      "codeforces_1151b",
      "codeforces_1017d",
      "codeforces_1879d",
      "cf_gym_100739a"
    ],
    "topic_id": "bit_manipulation",
    "completion_count": 74
  },
  "bit_with_range_update_and_range_query": {
    "is_data_complete": true,
    "created_at": {
      "seconds": 1713056022,
      "nanoseconds": 819000000
    },
    "resources": [
      {
        "resource_url": "https://cp-algorithms.com/data_structures/fenwick.html#3-range-updates-and-range-queries",
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Range Updates and Range Queries | CP Algorithms"
      },
      {
        "resource_comments": "",
        "resource_url": "https://blog.mitrichev.ch/2013/05/fenwick-tree-range-updates.html",
        "resource_title": "Fenwick tree range updates | Petr"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/BIT%20with%20Range%20Update%20and%20Range%20Query.cpp"
    ],
    "completion_count": 15,
    "topic_id": "bit_with_range_update_and_range_query"
  },
  "bitmask_dp": {
    "template_codes": [],
    "completion_count": 31,
    "is_data_complete": true,
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://cp-algorithms.com/algebra/bit-manipulation.html",
        "resource_title": "Bit manipulation | CP Algorithm",
        "resource_comments": "make sure you know the basics first"
      },
      {
        "resource_url": "https://www.hackerearth.com/practice/algorithms/dynamic-programming/bit-masking/tutorial/",
        "resource_comments": "",
        "resource_title": "Dynamic Programming and Bit Masking | HackerEarth"
      },
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://usaco.guide/CPH.pdf#page=112",
        "resource_title": "10.5 Dynamic programming | CPH"
      },
      {
        "resource_title": "A Primer on Bitmask DP | Neo Wang",
        "resource_url": "https://nwatx.me/post/dpbitmasks",
        "resource_comments": ""
      },
      {
        "resource_title": "[Tutorial] Non-trivial DP Tricks and Techniques  By zscoder",
        "resource_url": "https://codeforces.com/blog/entry/47764",
        "resource_comments": "check DP + Bitmasks section"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/81516",
        "is_video_type": true,
        "resource_comments": "",
        "resource_title": "Introduction to DP with Bitmasking  By kartik8800"
      },
      {
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/337",
        "resource_title": "A little bit of classics: dynamic programming over subsets and paths in graphs By Ripatti",
        "resource_comments": ""
      },
      {
        "resource_title": "Bitmask DP Problems [Slightly Harder Examples] | Gautam",
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://gautambitmaskdp.blogspot.com/?m=1"
      },
      {
        "resource_url": "https://usaco.guide/gold/dp-bitmasks?lang=cpp",
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Bitmask DP | USACO Guide"
      },
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Traveling Salesman Problem | Dynamic Programming | Graph Theory  WilliamFiset",
        "resource_url": "https://www.youtube.com/watch?v=cY4HiiFHO1o",
        "is_video_type": true
      }
    ],
    "problem_order": [
      "atcoder_dp_o",
      "cses_1690",
      "spoj_pesada04",
      "codeforces_11d",
      "codeforces_1316e",
      "usaco_494",
      "usaco_515",
      "codeforces_21d",
      "codeforces_895c",
      "codeforces_8c",
      "codeforces_16e",
      "atcoder_dp_u",
      "codeforces_453b",
      "codeforces_678e",
      "codechef_tshirts",
      "codechef_lealco",
      "spoj_hist2",
      "codeforces_757d",
      "codechef_seagcd2",
      "hackerearth_hasan_and_points_pairing",
      "hackerearth_sherlock_and_coprime_subset",
      "usaco_1089",
      "izho14_bank",
      "kattis_catandmice",
      "codeforces_71e",
      "cses_1653",
      "codeforces_662c",
      "spoj_baby",
      "usaco_1282",
      "yosupo_maximum_independent_set",
      "codeforces_1103d",
      "codeforces_1148g"
    ],
    "topic_id": "bitmask_dp",
    "created_at": {
      "seconds": 1714720802,
      "nanoseconds": 128000000
    }
  },
  "bitmasks": {
    "template_codes": [],
    "completion_count": 1,
    "created_at": {
      "seconds": 1713661772,
      "nanoseconds": 370000000
    },
    "topic_id": "bitmasks",
    "resources": []
  },
  "bitset": {
    "topic_id": "bitset",
    "completion_count": 155,
    "created_at": {
      "seconds": 1715118944,
      "nanoseconds": 850000000
    },
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://www.geeksforgeeks.org/cpp-bitset-and-its-application/",
        "resource_title": "C++ bitset and its application | Geeks for Geeks",
        "is_starred": true
      }
    ],
    "is_data_complete": true,
    "template_codes": []
  },
  "bitwise_disjoint_partitioning": {
    "completion_count": 2,
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Disjoint partitioning with binary representation | Nafis",
        "resource_url": "https://nafis277.github.io/Bit_Trick.html"
      }
    ],
    "created_at": {
      "seconds": 1715196521,
      "nanoseconds": 631000000
    },
    "template_codes": [],
    "is_data_complete": true,
    "topic_id": "bitwise_disjoint_partitioning"
  },
  "bitwise_operations": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Basics/Bitwise%20Operations.cpp",
      "https://github.com/ShahjalalShohag/code-library/blob/main/Basics/Bitmasks.cpp"
    ],
    "completion_count": 362,
    "created_at": {
      "seconds": 1713661771,
      "nanoseconds": 690000000
    },
    "is_data_complete": true,
    "topic_id": "bitwise_operations",
    "resources": [
      {
        "resource_title": "C++ Bitwise Operators | Programiz",
        "is_starred": true,
        "resource_url": "https://www.programiz.com/cpp-programming/bitwise-operators",
        "resource_comments": ""
      },
      {
        "is_video_type": true,
        "resource_comments": "",
        "resource_title": "Bitwise operations for beginners  By Errichto",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/73490"
      },
      {
        "resource_url": "https://youtu.be/LGrE0siZ-ZA?si=Ohjq6KG7pHqf8st0",
        "resource_title": "Learn these 10 Bitwise Tricks Or Regret Later | Competitive Programming Tricks Part 2 ",
        "is_video_type": true,
        "resource_comments": ""
      }
    ],
    "problem_order": [
      "hackerrank_bitwise_operators_in_c",
      "hackerrank_maximizing_xor",
      "hackerrank_30_bitwise_and",
      "hackerrank_si_basic_check_bit",
      "hackerrank_flipping_bits",
      "hackerrank_si_swap_bits",
      "hackerrank_si_reverse_bits",
      "codeforces_579a",
      "cses_1617",
      "codeforces_1097b",
      "codeforces_550b",
      "uva_12455",
      "codeforces_258a",
      "codeforces_96b",
      "atcoder_arc061_a"
    ]
  },
  "blossom_algorithm_unweighted": {
    "completion_count": 1,
    "topic_id": "blossom_algorithm_unweighted",
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/92339",
        "is_starred": true,
        "resource_title": "[Tutorial] Blossom Algorithm for General Matching in O(n^3)  By Monogon",
        "resource_comments": ""
      },
      {
        "resource_title": "Blossom algorithm | Wiki",
        "resource_comments": "",
        "resource_url": "https://en.wikipedia.org/wiki/Blossom_algorithm"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/92339?#comment-810158",
        "resource_comments": "",
        "resource_title": "Discussion in comments about Randomized Algorithm for General Matching"
      },
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Randomized general matching with Tutte matrix  By adamant",
        "resource_url": "https://codeforces.com/blog/entry/92400"
      }
    ],
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Blossom%20Algorithm.cpp",
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Randomized%20Matching%20Unweighted.cpp"
    ],
    "created_at": {
      "seconds": 1714134450,
      "nanoseconds": 564000000
    }
  },
  "blossom_algorithm_weighted": {
    "problem_order": [
      "yosupo_general_weighted_matching",
      "uoj_81"
    ],
    "completion_count": 0,
    "is_data_complete": true,
    "resources": [],
    "created_at": {
      "seconds": 1714134742,
      "nanoseconds": 361000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Blossom%20Algorithm%20Weighted.cpp",
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Randomized%20Matching%20Weighted.cpp"
    ],
    "topic_id": "blossom_algorithm_weighted"
  },
  "blue_red_hackenbush": {
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714740075,
      "nanoseconds": 769000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Game%20Theory/Blue%20Red%20Hackenbush.cpp"
    ],
    "resources": [
      {
        "is_starred": true,
        "resource_comments": "check until \"3.2 Analysis of Blue-Red-Green Hackenbush\"",
        "resource_title": "3.1 Analysis of Blue-Red Hackenbush",
        "resource_url": "https://is.muni.cz/th/325040/fi_b/Combinatorial_games.pdf"
      },
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "GERALD08 - Editorial",
        "resource_url": "https://discuss.codechef.com/t/gerald08-editorial/5137"
      }
    ],
    "topic_id": "blue_red_hackenbush"
  },
  "boruvkas_algorithm": {
    "created_at": {
      "seconds": 1714035999,
      "nanoseconds": 733000000
    },
    "is_data_complete": true,
    "completion_count": 5,
    "topic_id": "boruvkas_algorithm",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Boruvka's%20Algorithm.cpp"
    ],
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "[Tutorial] Boruvka's Algorithm  By RockyB",
        "resource_url": "https://codeforces.com/blog/entry/77760",
        "is_video_type": true,
        "is_starred": true
      }
    ]
  },
  "broken_profile_dp": {
    "topic_id": "broken_profile_dp",
    "is_data_complete": true,
    "completion_count": 2,
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "An Introduction to Plug DP  By 4fecta",
        "resource_url": "https://codeforces.com/blog/entry/90841"
      },
      {
        "is_video_type": true,
        "resource_url": "https://youtu.be/0bnMHlFUM_o?si=a3z-4oat2tKsPEnq",
        "resource_title": "DP on broken profile by Pavel Mavrin",
        "resource_comments": "DP on broken profile explaination starts at 1:00:35 in this video lecture."
      },
      {
        "resource_title": "DP on Broken Profile | USACO Guide",
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://usaco.guide/adv/dp-more?lang=cpp#dp-on-broken-profile"
      },
      {
        "resource_title": "插头 DP | Oi Wiki",
        "resource_comments": "",
        "resource_url": "https://oi-wiki.org/dp/plug/"
      },
      {
        "resource_title": "Broken profile dynamic programming | EvilBuggy",
        "resource_url": "https://coderevilbuggy.blogspot.com/2018/05/broken-profile-dynamic-programming.html",
        "resource_comments": ""
      }
    ],
    "created_at": {
      "seconds": 1714681771,
      "nanoseconds": 976000000
    },
    "template_codes": []
  },
  "bst": {
    "completion_count": 26,
    "topic_id": "bst",
    "is_data_complete": true,
    "problem_order": [
      "leetcode_description",
      "leetcode_insert_into_a_binary_search_tree",
      "leetcode_delete_node_in_a_bst",
      "leetcode_number_of_ways_to_reorder_array_to_get_same_bst",
      "codeforces_797d",
      "codeforces_1929f"
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/BST.cpp",
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/BST%20using%20STL.cpp"
    ],
    "created_at": {
      "seconds": 1712698938,
      "nanoseconds": 417000000
    },
    "resources": [
      {
        "resource_url": "https://www.programiz.com/dsa/binary-search-tree",
        "resource_comments": "",
        "resource_title": "Binary Search Tree(BST) | Programiz",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "resource_title": "Binary Search Tree | Geeks For Geeks",
        "resource_url": "https://www.geeksforgeeks.org/binary-search-tree-data-structure/",
        "is_starred": false
      },
      {
        "resource_title": "Lecture 5: Binary Search Trees, BST Sort | MIT",
        "resource_url": "https://www.youtube.com/watch?v=9Jry5-82I68",
        "resource_comments": "",
        "is_video_type": true
      }
    ]
  },
  "bubble_sort": {
    "topic_id": "bubble_sort",
    "is_data_complete": true,
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://www.programiz.com/dsa/bubble-sort",
        "resource_title": "Bubble Sort | Programiz",
        "resource_comments": ""
      },
      {
        "resource_title": "Bubble Sort Visualization | Bubble Sort Animation Video | Log2Base2",
        "resource_url": "https://www.youtube.com/watch?v=p6I7LIUqQnU",
        "resource_comments": "",
        "is_video_type": true,
        "is_starred": true
      },
      {
        "resource_url": "https://visualgo.net/en/sorting",
        "is_starred": true,
        "resource_title": "Sorting Algorithm Visualizer | VisuAlgo",
        "resource_comments": "select Bubble Sort"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Basics/Bubble%20Sort.cpp"
    ],
    "created_at": {
      "seconds": 1715159017,
      "nanoseconds": 782000000
    },
    "completion_count": 184
  },
  "burnside_lemma": {
    "created_at": {
      "seconds": 1714315532,
      "nanoseconds": 131000000
    },
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/combinatorics/burnside.html",
        "is_starred": true,
        "resource_title": "Burnside's lemma / Pólya enumeration theorem | CP Algorithms"
      },
      {
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/62401",
        "resource_comments": "",
        "resource_title": "[Tutorial] Burnside's lemma (with example)  By TwoFx"
      },
      {
        "resource_title": "Burnside Lemma made simple.  By Everule",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/102668"
      },
      {
        "is_video_type": true,
        "resource_title": "[Video Tutorial] Burnside Lemma  By acraider",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/98703"
      },
      {
        "resource_comments": "",
        "resource_title": "[Tutorial] From Burnside to Polya: A Short Introduction to Group Theory  By Zhtluo",
        "resource_url": "https://codeforces.com/blog/entry/118984"
      }
    ],
    "topic_id": "burnside_lemma",
    "template_codes": [],
    "is_data_complete": true,
    "problem_order": [
      "cses_2209",
      "lightoj_necklace",
      "cses_2210",
      "cf_gym_101873b",
      "hackerrank_count_the_necklaces",
      "csacademy_cube_coloring",
      "codeforces_1065e",
      "poj_1286",
      "codechef_decorate",
      "poj_2888",
      "spoj_srtmach",
      "codechef_icpc16e",
      "timus_1661"
    ],
    "completion_count": 2
  },
  "cactus_graph": {
    "topic_id": "cactus_graph",
    "completion_count": 2,
    "template_codes": [],
    "created_at": {
      "seconds": 1714119093,
      "nanoseconds": 281000000
    },
    "is_data_complete": true,
    "resources": [
      {
        "resource_title": "Cactus graph | Wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Cactus_graph",
        "resource_comments": ""
      },
      {
        "resource_comments": "check the \"Implementing cacti\" section",
        "resource_url": "https://codeforces.com/blog/entry/68138",
        "resource_title": "[Tutorial] The DFS tree and its applications: how I found out I really didn't understand bridges  By -is-this-fft-"
      }
    ],
    "problem_order": [
      "cf_gym_102361f",
      "spoj_cac",
      "codeforces_231e",
      "codeforces_856d",
      "codeforces_1510c",
      "cf_gym_102201c",
      "cf_gym_102441g",
      "codeforces_980f",
      "codeforces_720b",
      "codeforces_379g",
      "codeforces_1268e",
      "cf_gym_102391e"
    ]
  },
  "cartesian_tree": {
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "[Tutorial] Cartesian tree and some related problems By tibinyte",
        "resource_url": "https://codeforces.com/blog/entry/112664",
        "is_starred": true
      },
      {
        "is_starred": true,
        "resource_title": "[Tutorial] Cartesian tree on arbitrary graphs By aymanrs",
        "resource_url": "https://codeforces.com/blog/entry/114607",
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Solve RMQ (Range Minimum Query) by finding LCA (Lowest Common Ancestor) | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/graph/rmq_linear.html"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Cartesian%20Tree.cpp"
    ],
    "created_at": {
      "seconds": 1713823555,
      "nanoseconds": 715000000
    },
    "is_data_complete": true,
    "topic_id": "cartesian_tree",
    "problem_order": [
      "yosupo_cartesian_tree",
      "codeforces_1748e",
      "ceoi20_fancyfence",
      "codeforces_1290e",
      "infoarena_vaporeon"
    ],
    "completion_count": 4
  },
  "catalan_convolution": {
    "template_codes": [],
    "created_at": {
      "seconds": 1714292215,
      "nanoseconds": 437000000
    },
    "problem_order": [
      "cses_2187",
      "atcoder_abc205_e"
    ],
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/87585",
        "resource_comments": "",
        "resource_title": "[Tutorial] Catalan Numbers and Catalan Convolution  By Dardy"
      }
    ],
    "is_data_complete": true,
    "completion_count": 4,
    "topic_id": "catalan_convolution"
  },
  "catalan_numbers": {
    "template_codes": [],
    "topic_id": "catalan_numbers",
    "problem_order": [
      "cses_2064",
      "codechef_panstack",
      "spoj_skyline",
      "uva_932",
      "poj_2084",
      "codeforces_9d",
      "lightoj_counting_perfect_bst",
      "uva_4752"
    ],
    "completion_count": 20,
    "created_at": {
      "seconds": 1714290267,
      "nanoseconds": 618000000
    },
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/combinatorics/catalan-numbers.html",
        "is_starred": true,
        "resource_title": "Catalan Numbers | CP Algorithms"
      },
      {
        "resource_url": "https://usaco.guide/CPH.pdf#page=220",
        "resource_comments": "",
        "resource_title": "22.2 Catalan numbers | CPH"
      },
      {
        "resource_url": "https://en.wikipedia.org/wiki/Catalan_number",
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Catalan number | Wiki"
      }
    ],
    "is_data_complete": true
  },
  "cauchy_binet_formula": {
    "topic_id": "cauchy_binet_formula",
    "is_data_complete": true,
    "template_codes": [],
    "created_at": {
      "seconds": 1714470373,
      "nanoseconds": 365000000
    },
    "resources": [
      {
        "resource_title": "Cauchy–Binet formula | Wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Cauchy%E2%80%93Binet_formula",
        "resource_comments": ""
      }
    ]
  },
  "cdq_divide_and_conquer": {
    "template_codes": [],
    "completion_count": 3,
    "is_data_complete": true,
    "created_at": {
      "seconds": 1713050601,
      "nanoseconds": 686000000
    },
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "A Simple Introduction to CDQ Divide and Conquer | A Simple Blog",
        "resource_url": "https://robert1003.github.io/2020/01/31/cdq-divide-and-conquer.html"
      },
      {
        "is_starred": true,
        "resource_url": "https://mzhang2021.github.io/cp-blog/divide-and-conquer/",
        "resource_title": "Applications of Divide and Conquer | mzhang2021",
        "resource_comments": "check the \"CDQ Divide and Conquer\" section at the end"
      },
      {
        "resource_comments": "check the \"CDQ Divide and Conquer\" part here",
        "resource_title": "More about Query Problem | HKOI Training Camp",
        "resource_url": "https://assets.hkoi.org/training2018/dc.pdf"
      },
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/68263?#comment-525816",
        "resource_title": "A comment by Rezwan.Arefin01"
      },
      {
        "resource_title": "Divide and Conquer for solving Insert-Query Problems Offline | Rezwan's CP Blog",
        "resource_comments": "",
        "resource_url": "https://cpblog.rezwanarefin.me/posts/dnc-insert-query/"
      }
    ],
    "topic_id": "cdq_divide_and_conquer"
  },
  "centroid_decomposition": {
    "completion_count": 21,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Centroid%20Decomposition.cpp"
    ],
    "is_data_complete": true,
    "problem_order": [
      "cses_2079",
      "codeforces_321c",
      "cses_2080",
      "cses_2081",
      "codeforces_342e",
      "codeforces_914e",
      "codeforces_1387b2",
      "codeforces_716e",
      "ioi11_race",
      "codeforces_776f",
      "dmoj_coci19c3p4",
      "spoj_qtree5",
      "codechef_primedst",
      "codeforces_293e",
      "cf_gym_100633d",
      "lightoj_good_path",
      "cf_gym_100570f",
      "spoj_qtree4",
      "usaco_817",
      "hackerrank_bst_maintenance",
      "codechef_btree",
      "codechef_cntit",
      "codechef_trdst",
      "codechef_gerald2",
      "cf_gym_101991a",
      "codeforces_1140g",
      "cf_gym_102114d",
      "joi14_factories",
      "dmoj_dmopc19c7p6",
      "joi13_synchronization",
      "dmoj_tc19summerh",
      "codeforces_150e",
      "codeforces_833d"
    ],
    "created_at": {
      "seconds": 1713738678,
      "nanoseconds": 224000000
    },
    "topic_id": "centroid_decomposition",
    "resources": [
      {
        "resource_title": "A Visual Introduction to Centroid Decomposition | Igor Carpanese",
        "is_starred": true,
        "resource_url": "https://medium.com/carpanese/an-illustrated-introduction-to-centroid-decomposition-8c1989d53308",
        "resource_comments": ""
      },
      {
        "resource_title": "Centroid Decomposition of a Tree | Tanuj Khattar",
        "resource_comments": "",
        "resource_url": "https://tanujkhattar.wordpress.com/2016/01/10/centroid-decomposition-of-a-tree/"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/81661",
        "is_starred": true,
        "resource_title": "Hybrid Tutorial #-2: Centroid Decomposition | galen_colin",
        "is_video_type": true,
        "resource_comments": ""
      },
      {
        "resource_title": "Centroid Decomposition | USACO Guide",
        "resource_comments": "",
        "resource_url": "https://usaco.guide/plat/centroid?lang=cpp"
      },
      {
        "resource_comments": "",
        "resource_title": "A Simple Introduction to Centroid Decomposition | A Simple Blog",
        "resource_url": "https://robert1003.github.io/2020/01/16/centroid-decomposition.html"
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=-Lgda-6_AiY",
        "resource_comments": "",
        "resource_title": "What is Centroid Decomposition? | Gaurav Sen"
      },
      {
        "resource_comments": "",
        "resource_title": "Episode 12 - Divide and Conquer on Trees",
        "resource_url": "https://youtu.be/3pk02p1-weU"
      }
    ]
  },
  "centroid_of_a_polygon_2d": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L578-L592"
    ],
    "is_data_complete": true,
    "completion_count": 1,
    "resources": [
      {
        "resource_url": "https://en.wikipedia.org/wiki/Centroid",
        "resource_title": "Centroid | Wiki",
        "resource_comments": ""
      }
    ],
    "topic_id": "centroid_of_a_polygon_2d",
    "created_at": {
      "seconds": 1714761880,
      "nanoseconds": 639000000
    }
  },
  "characteristic_polynomial": {
    "is_data_complete": true,
    "resources": [
      {
        "resource_title": "Characteristic polynomial",
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://en.wikipedia.org/wiki/Characteristic_polynomial"
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Cayley–Hamilton theorem | Wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Cayley%E2%80%93Hamilton_theorem"
      },
      {
        "resource_url": "https://en.wikipedia.org/wiki/Hessenberg_matrix",
        "resource_title": "Hessenberg matrix | Wiki",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_url": "https://github.com/yosupo06/library-checker-problems/issues/665",
        "resource_title": "Discussion on Library Checker",
        "resource_comments": ""
      }
    ],
    "created_at": {
      "seconds": 1714468446,
      "nanoseconds": 59000000
    },
    "topic_id": "characteristic_polynomial",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Characteristic%20Polynomial%20Faster.cpp"
    ]
  },
  "characteristic_polynomial_faster_hesserberg_matrix": {
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Characteristic%20Polynomial%20Faster.cpp"
    ],
    "topic_id": "characteristic_polynomial_faster_hesserberg_matrix",
    "created_at": {
      "seconds": 1714462449,
      "nanoseconds": 316000000
    },
    "resources": [
      {
        "resource_title": "Hessenberg matrix | Wiki",
        "resource_comments": "",
        "resource_url": "https://en.wikipedia.org/wiki/Hessenberg_matrix"
      }
    ]
  },
  "check_if_point_is_in_convex_2d": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L670-L687"
    ],
    "problem_order": [
      "atcoder_abc296_g",
      "codeforces_166b",
      "acmsguru_99999253",
      "codeforces_55e",
      "codeforces_87e"
    ],
    "topic_id": "check_if_point_is_in_convex_2d",
    "completion_count": 4,
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "Check if point belongs to the convex polygon | CP Algorithms",
        "is_starred": true,
        "resource_url": "https://cp-algorithms.com/geometry/point-in-convex-polygon.html"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/48868",
        "resource_title": "4.1 Triangle: O(1) and 4.2 Convex polygon: O(logN)",
        "resource_comments": ""
      }
    ],
    "created_at": {
      "seconds": 1714761977,
      "nanoseconds": 747000000
    },
    "is_data_complete": true
  },
  "chicken_mcnugget_theorem": {
    "completion_count": 13,
    "is_data_complete": true,
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/118246",
        "resource_title": "Chicken McNugget Theorem explained[Shortly]  By offline-bot"
      },
      {
        "resource_title": "Chicken McNugget Theorem | AoPS",
        "resource_url": "https://artofproblemsolving.com/wiki/index.php/Chicken_McNugget_Theorem",
        "resource_comments": "",
        "is_starred": true
      }
    ],
    "created_at": {
      "seconds": 1714307459,
      "nanoseconds": 551000000
    },
    "topic_id": "chicken_mcnugget_theorem",
    "template_codes": []
  },
  "chinese_postman_problem": {
    "resources": [
      {
        "resource_url": "https://en.wikipedia.org/wiki/Chinese_postman_problem",
        "resource_title": "Chinese postman problem | Wiki",
        "resource_comments": ""
      },
      {
        "resource_title": "Solving the Chinese Postman's Problem | MIT",
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://web.mit.edu/urban_or_book/www/book/chapter6/6.4.4.html"
      }
    ],
    "topic_id": "chinese_postman_problem",
    "is_data_complete": true,
    "completion_count": 1,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Chinese%20Postman%20Problem.cpp"
    ],
    "created_at": {
      "seconds": 1714132825,
      "nanoseconds": 850000000
    }
  },
  "chirp_z_transform": {
    "is_data_complete": true,
    "resources": [
      {
        "resource_url": "https://cp-algorithms.com/algebra/polynomial.html#chirp-z-transform",
        "resource_title": "Chirp-z Transform | CP Algorithms",
        "resource_comments": ""
      },
      {
        "resource_title": "[Tutorial] Generalized Chirp Z-Transform  By box",
        "resource_url": "https://codeforces.com/blog/entry/83532",
        "resource_comments": ""
      }
    ],
    "created_at": {
      "seconds": 1714365829,
      "nanoseconds": 697000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Polynomial.cpp"
    ],
    "topic_id": "chirp_z_transform",
    "completion_count": 1
  },
  "chordal_graph": {
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714125102,
      "nanoseconds": 502000000
    },
    "resources": [
      {
        "resource_title": "Chordal graph | Wiki",
        "is_starred": true,
        "resource_url": "https://en.wikipedia.org/wiki/Chordal_graph",
        "resource_comments": ""
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/106755",
        "resource_title": "[Stream] Chordal Graph Omakase  By ko_osaga",
        "resource_comments": ""
      }
    ],
    "topic_id": "chordal_graph",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Chordal%20Graph.cpp"
    ]
  },
  "chromatic_number": {
    "completion_count": 2,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Chromatic%20Number.cpp"
    ],
    "problem_order": [
      "yosupo_chromatic_number",
      "kattis_coloring",
      "codeforces_100482a"
    ],
    "created_at": {
      "seconds": 1714103307,
      "nanoseconds": 541000000
    },
    "resources": [
      {
        "resource_title": "Effective way to compute the chromatic number of a graph  By KokiYmgch",
        "resource_url": "https://codeforces.com/blog/entry/57496",
        "resource_comments": ""
      }
    ],
    "topic_id": "chromatic_number",
    "is_data_complete": true
  },
  "chromatic_polynomial_ft_number_of_dags": {
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://en.wikipedia.org/wiki/Chromatic_polynomial",
        "resource_title": "Chromatic polynomial | Wiki"
      },
      {
        "resource_url": "https://www.whitman.edu/Documents/Academics/Mathematics/fouts.pdf",
        "resource_comments": "",
        "resource_title": "THE CHROMATIC POLYNOMIAL | CODY FOUTS"
      },
      {
        "resource_url": "https://www.geeksforgeeks.org/chromatic-polynomial/",
        "resource_title": "Chromatic Polynomial | Geeks for Geeks",
        "resource_comments": ""
      }
    ],
    "created_at": {
      "seconds": 1714104263,
      "nanoseconds": 980000000
    },
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Chromatic%20Polynoimial.cpp"
    ],
    "topic_id": "chromatic_polynomial_ft_number_of_dags"
  },
  "cht": {
    "problem_order": [
      "codeforces_319c",
      "atcoder_dp_z",
      "codeforces_660f",
      "codeforces_1083e",
      "codeforces_631e",
      "cf_gym_103536b",
      "dmoj_apio10p1",
      "csacademy_squared_ends",
      "szkopul_ovriplfk3ihyfpjnvxeztgxh",
      "codechef_cyclrace",
      "kattis_coveredwalkway",
      "cses_2087",
      "codeforces_932f",
      "codeforces_1627e",
      "codeforces_673e",
      "codeforces_1388e",
      "codeforces_311b",
      "kattis_avoidingairports",
      "codechef_jump",
      "codechef_pdeliv",
      "spoj_acquire",
      "poj_3266",
      "spoj_goodg",
      "ceoi09_harbingers",
      "apio14_sequence",
      "szkopul_iyvwsachhcrzzatqh0qfkbsu",
      "szkopul_hh7lqvrvhom1g8yre9423d1p",
      "codechef_poly",
      "kattis_yatp",
      "codechef_weaselsc"
    ],
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/63823",
        "resource_comments": "",
        "resource_title": "[Tutorial] Convex Hull Trick — Geometry being useful  By meooow,"
      },
      {
        "resource_title": "Convex hull trick and Li Chao tree | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/geometry/convex_hull_trick.html#toc-tgt-2",
        "resource_comments": "check until Li Chao Tree"
      },
      {
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/watch?v=OrH2ah4ylv4",
        "resource_title": "Episode 11 - Convex Hull Optimization | Algorithms Live!",
        "is_video_type": true,
        "is_starred": true
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/8219",
        "resource_title": "Dynamic Programming Optimizations  By indy256",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_title": "Convex Hull Trick | USACO Guide",
        "resource_url": "https://usaco.guide/plat/convex-hull-trick?lang=cpp"
      }
    ],
    "created_at": {
      "seconds": 1714683329,
      "nanoseconds": 823000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Dynamic%20Programming%20Optimizations/Convex%20Hull%20Trick.cpp",
      "https://github.com/ShahjalalShohag/code-library/blob/main/Dynamic%20Programming%20Optimizations/Dynamic%20Convex%20Hull%20Trick.cpp"
    ],
    "topic_id": "cht",
    "is_data_complete": true,
    "completion_count": 9
  },
  "circle_inclusion_hierarchy": {
    "topic_id": "circle_inclusion_hierarchy",
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/98782",
        "resource_title": "[Tutorial] Finding inclusion hierarchy among circles — An implementation of a sweep-line algorithm  By Arpa",
        "resource_comments": ""
      }
    ],
    "template_codes": [
      "https://github.com/ar-pa/circles-hierarchy/blob/master/src/main.cpp"
    ],
    "created_at": {
      "seconds": 1714821953,
      "nanoseconds": 131000000
    },
    "is_data_complete": true
  },
  "circle_union_2d": {
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "Area of union of circles discussion",
        "resource_url": "https://codeforces.com/blog/entry/2111"
      }
    ],
    "created_at": {
      "seconds": 1714761831,
      "nanoseconds": 278000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L455-L554"
    ],
    "topic_id": "circle_union_2d",
    "is_data_complete": true
  },
  "circles_2d": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L270-L363",
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L410-L419"
    ],
    "resources": [
      {
        "resource_title": "Chapter 2.7 Circles (excluding 2.7.5 Tangent lines) | CP Geo",
        "resource_url": "https://victorlecomte.com/cp-geo.pdf",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_title": "Circle-Line Intersection | CP Algorithms",
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/geometry/circle-line-intersection.html",
        "is_starred": true
      },
      {
        "resource_title": "Circle-Circle Intersection | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/geometry/circle-circle-intersection.html",
        "resource_comments": ""
      }
    ],
    "problem_order": [
      "uva_438",
      "uva_190",
      "uva_11152",
      "codechef_andoor",
      "spoj_circint",
      "lightoj_1118",
      "spoj_anarc09f",
      "uva_1242",
      "codeforces_681e",
      "cf_gym_100199f",
      "timus_1429",
      "codeforces_933c",
      "poj_3743"
    ],
    "is_data_complete": true,
    "completion_count": 2,
    "topic_id": "circles_2d",
    "created_at": {
      "seconds": 1714760366,
      "nanoseconds": 977000000
    }
  },
  "circles_of_apollonius_2d": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L392-L409"
    ],
    "completion_count": 1,
    "resources": [
      {
        "resource_url": "https://en.wikipedia.org/wiki/Circles_of_Apollonius",
        "resource_title": "Circles of Apollonius | Wiki",
        "resource_comments": "",
        "is_starred": true
      }
    ],
    "topic_id": "circles_of_apollonius_2d",
    "created_at": {
      "seconds": 1714760689,
      "nanoseconds": 748000000
    },
    "is_data_complete": true
  },
  "closest_pair_of_points": {
    "resources": [
      {
        "resource_title": "Finding the nearest pair of points | CP Algorithms",
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/geometry/nearest_points.html",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "resource_title": "A (possibly simpler) algorithm for closest pair problem  By bicsi",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/58747"
      },
      {
        "resource_comments": "",
        "resource_url": "https://www.geeksforgeeks.org/closest-pair-of-points-using-divide-and-conquer-algorithm/",
        "resource_title": "Closest Pair of Points using Divide and Conquer algorithm | Geeks for Geeks"
      }
    ],
    "is_data_complete": true,
    "completion_count": 2,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Geometry/Closest%20Pair%20of%20Points.cpp"
    ],
    "topic_id": "closest_pair_of_points",
    "created_at": {
      "seconds": 1714823481,
      "nanoseconds": 782000000
    },
    "problem_order": [
      "cses_2194",
      "yosupo_closest_pair",
      "uva_10245",
      "kattis_closestpair2",
      "codeforces_120j",
      "spoj_closest",
      "timus_1514"
    ]
  },
  "combining_subtrees_technique": {
    "completion_count": 7,
    "created_at": {
      "seconds": 1714727195,
      "nanoseconds": 335000000
    },
    "topic_id": "combining_subtrees_technique",
    "template_codes": [],
    "is_data_complete": true,
    "problem_order": [
      "kattis_kthsubtree",
      "ceoi17_museum",
      "codeforces_815c",
      "coci19_dzumbus",
      "cf_gym_103886q",
      "codeforces_1249f",
      "dmoj_ioi05p6",
      "atcoder_abc207_f",
      "codeforces_735e",
      "codeforces_1280d",
      "atcoder_aising2019_e",
      "dmoj_coci08c4p6",
      "codeforces_1097g"
    ],
    "resources": [
      {
        "resource_title": "DP on Trees - Combining Subtrees | USACO Guide",
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://usaco.guide/adv/comb-sub?lang=cpp"
      },
      {
        "resource_title": "Dp On Trees  By AghaTizi",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/63257",
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/100910",
        "resource_title": "[Tutorial] Collection of little techniques  By -is-this-fft-",
        "resource_comments": "check technique 7"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/69888",
        "resource_title": "Optimization for dp on tree needed.  By negativez2",
        "is_starred": true,
        "resource_comments": "check all comments"
      },
      {
        "resource_title": "Optimizing Round 595 Problem F from 𝑂(𝑛4)  to 𝑂(𝑛) By neal",
        "resource_comments": "",
        "is_starred": false,
        "resource_url": "https://codeforces.com/blog/entry/70822"
      }
    ]
  },
  "competitive_programming": {
    "is_data_complete": true,
    "template_codes": [],
    "topic_id": "competitive_programming",
    "created_at": {
      "seconds": 1715028464,
      "nanoseconds": 120000000
    },
    "problem_order": [
      "atcoder_abc169_a",
      "codeforces_630a",
      "atcoder_abc209_a",
      "atcoder_abc124_a",
      "atcoder_abc226_a",
      "atcoder_abc222_a",
      "atcoder_abc125_a",
      "atcoder_abc220_a",
      "codeforces_633a",
      "atcoder_abc199_a",
      "atcoder_abc193_a",
      "atcoder_abc152_a",
      "codeforces_598a",
      "atcoder_abc214_b",
      "codeforces_271a",
      "codeforces_26a",
      "atcoder_abc051_b",
      "codeforces_102b"
    ],
    "resources": [
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://github.com/ShahjalalShohag/Competitive-Programming-A-Complete-Guideline",
        "resource_title": "Competitive-Programming-A-Complete-Guideline | YouKn0wWho"
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=ueNT-w7Oluw&t=85s",
        "resource_title": "What is Competitive Programming? | William Lin",
        "is_video_type": true,
        "resource_comments": "",
        "is_starred": true
      },
      {
        "is_starred": true,
        "resource_title": "How to start Competitive Programming? For beginners! | Errichto Algorithms",
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/watch?v=xAeiXy8-9Y8",
        "is_video_type": true
      },
      {
        "resource_title": "How to Practice | USACO Guide",
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://usaco.guide/general/practicing?lang=cpp"
      },
      {
        "resource_title": "Contest Strategy | USACO Guide",
        "resource_url": "https://usaco.guide/general/contest-strategy?lang=cpp",
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_url": "https://usaco.guide/general/resources-cp?lang=cpp",
        "resource_title": "Resources: Competitive Programming | USACO Guide",
        "is_starred": true
      },
      {
        "resource_title": "Contests | USACO Guide",
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://usaco.guide/general/contests?lang=cpp"
      },
      {
        "resource_url": "https://usaco.guide/general/debugging-checklist?lang=cpp",
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "How to Debug | USACO Guide"
      },
      {
        "resource_comments": "",
        "resource_title": "Basic Debugging | USACO Guide",
        "is_starred": true,
        "resource_url": "https://usaco.guide/general/basic-debugging?lang=cpp"
      },
      {
        "is_video_type": true,
        "resource_title": "My Video Tutorials for all the practice problems below [in Bangla]",
        "resource_url": "https://www.youtube.com/watch?v=DX3NnP16r3I",
        "is_starred": false,
        "resource_comments": ""
      },
      {
        "resource_url": "https://youkn0wwho.academy/demo/progress_tracking",
        "is_starred": true,
        "resource_comments": "check Class 1 Problems",
        "resource_title": "Editorial, Codes and AI Help for all the practice problems below"
      }
    ],
    "completion_count": 621
  },
  "complexity_analysis": {
    "template_codes": [],
    "completion_count": 424,
    "topic_id": "complexity_analysis",
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://medium.com/@DevChy/introduction-to-big-o-notation-time-and-space-complexity-f747ea5bca58",
        "is_starred": true,
        "resource_title": "Mastering Big O Notation: Understanding Time and Space Complexity in Algorithms | Chinenye Okeke"
      },
      {
        "is_video_type": true,
        "resource_url": "https://www.youtube.com/watch?v=zUUkiEllHG0",
        "resource_title": "Introduction to Big-O  WilliamFiset",
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "is_video_type": true,
        "resource_comments": "",
        "resource_title": "Big O Notation & Time Complexity Analysis Tutorial  | Tech With Tim",
        "resource_url": "https://www.youtube.com/watch?v=6aDHWSNKlVw"
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=BgLTDT03QtU",
        "resource_title": "Big-O Notation - For Coding Interviews | NeetCode",
        "is_starred": false,
        "is_video_type": true,
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_url": "https://usaco.guide/bronze/time-comp?lang=cpp",
        "is_starred": true,
        "resource_title": "Time Complexity | USACO Guide"
      },
      {
        "resource_comments": "",
        "resource_url": "https://www.geeksforgeeks.org/complete-guide-on-complexity-analysis/",
        "resource_title": "Complete Guide On Complexity Analysis – Data Structure and Algorithms Tutorial | Geeks for Geeks"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/104888",
        "resource_title": "A Time Complexity Guide  By UnexpectedValue",
        "resource_comments": ""
      },
      {
        "resource_title": "How to determine the solution of a problem by looking at its constraints?  By eanacra",
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/21344"
      }
    ],
    "created_at": {
      "seconds": 1715074374,
      "nanoseconds": 530000000
    },
    "is_data_complete": true
  },
  "conditional_statements": {
    "completion_count": 868,
    "created_at": {
      "seconds": 1713661826,
      "nanoseconds": 169000000
    },
    "topic_id": "conditional_statements",
    "template_codes": [],
    "resources": [
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/watch?v=Zkr0aAdD1Ww&list=PLzMcBGfZo4-lmGC8VW0iu6qfMHjy7gLQ3&index=8",
        "resource_title": " If, Else & Else If  | Tech With Tim",
        "is_video_type": true
      },
      {
        "is_starred": true,
        "resource_url": "https://www.programiz.com/cpp-programming/if-else",
        "resource_title": "C++ if, if...else and Nested if...else | Programiz",
        "resource_comments": ""
      }
    ],
    "is_data_complete": true
  },
  "connected_component_dp": {
    "problem_order": [
      "cses_1075",
      "joi16_skyscraper",
      "ceoi16_kangaroo",
      "codeforces_704b",
      "codeforces_1515e",
      "lightoj_network",
      "dmoj_utso21p7",
      "cf_gym_103081f",
      "cf_group_213171r",
      "cf_group_293254d",
      "atcoder_arc117_e",
      "tlx_troc_11h"
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Dynamic%20Programming%20Optimizations/Connected%20Component%20DP.cpp"
    ],
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/92602",
        "resource_title": "[Tutorial] Dp with connected components, a simple way to understand it.  By humbertoyusta"
      },
      {
        "resource_comments": "check \"Connected Component\" DP",
        "resource_title": "[Tutorial] Non-trivial DP Tricks and Techniques  By zscoder",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/47764"
      },
      {
        "resource_comments": "",
        "resource_title": "Do you really understand Connected Components DP?  By TheScrasse,",
        "resource_url": "https://codeforces.com/blog/entry/109293"
      }
    ],
    "created_at": {
      "seconds": 1714681612,
      "nanoseconds": 970000000
    },
    "completion_count": 3,
    "topic_id": "connected_component_dp",
    "is_data_complete": true
  },
  "constructive_algorithms": {
    "created_at": {
      "seconds": 1715164659,
      "nanoseconds": 121000000
    },
    "template_codes": [],
    "completion_count": 79,
    "problem_order": [
      "codeforces_1454a",
      "codeforces_1325a",
      "codeforces_1335b",
      "cses_1070",
      "codeforces_754a",
      "cses_1755",
      "codeforces_1665a",
      "codeforces_1389a",
      "codeforces_1028b",
      "codeforces_1476a",
      "cses_1092",
      "codeforces_1957b",
      "codeforces_1497c2",
      "codeforces_1353d",
      "codeforces_1364c",
      "codeforces_1381a2",
      "codeforces_1396a"
    ],
    "is_data_complete": true,
    "topic_id": "constructive_algorithms",
    "resources": [
      {
        "resource_url": "https://assets.hkoi.org/training2019/cast.pdf",
        "is_starred": true,
        "resource_title": "Constructive Algorithms | Percy Wong",
        "resource_comments": ""
      },
      {
        "resource_title": "Tips on Constructive Algorithms  By ReaLNero",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/80317"
      },
      {
        "resource_title": "Complete Constructive Problems Practice - Noob to Expert | Topic Stream 5 |  Colin Galen",
        "is_video_type": true,
        "resource_url": "https://www.youtube.com/watch?v=3D3XKJonua0",
        "resource_comments": ""
      }
    ]
  },
  "continued_fractions": {
    "is_data_complete": true,
    "topic_id": "continued_fractions",
    "resources": [
      {
        "is_starred": true,
        "resource_title": "On continued fractions. Part 1: Introduction  By adamant",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/73655"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/73687",
        "resource_title": "On continued fractions. Part 2: Properties and interpretation  By adamant",
        "resource_comments": ""
      },
      {
        "resource_url": "https://brilliant.org/wiki/continued-fractions/",
        "resource_title": "Continued Fractions | Brilliant",
        "resource_comments": ""
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Continued%20Fractions.cpp"
    ],
    "created_at": {
      "seconds": 1714479510,
      "nanoseconds": 803000000
    }
  },
  "contribution_technique": {
    "template_codes": [],
    "problem_order": [
      "codeforces_1165e",
      "spoj_tricount",
      "toph_easy_peasy_subset_sum",
      "spoj_summation",
      "atcoder_abc147_d",
      "gym_104333a",
      "codeforces_1879d",
      "baekjoon_23992",
      "codeforces_1743f",
      "codeforces_1777d",
      "codeforces_1824b2",
      "atcoder_abc312_g",
      "codechef_yamp"
    ],
    "completion_count": 23,
    "created_at": {
      "seconds": 1714829186,
      "nanoseconds": 508000000
    },
    "resources": [
      {
        "resource_url": "https://www.youtube.com/watch?v=U_h3IjreRek",
        "resource_comments": "explains lots of contribution technique problems",
        "is_video_type": true,
        "resource_title": "Algorithms Lecture #1 - Sums and Expected Value  Errichto Algorithms",
        "is_starred": true
      },
      {
        "resource_title": "DSA Series : Contribution Technique | ryuusama",
        "resource_url": "https://medium.com/@shahh8138/contribution-technique-6e60ae7f4f95",
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "resource_title": "Contribution technique-I | Ashwanth K",
        "resource_url": "https://medium.com/spidernitt/contribution-technique-i-c1730f195b41",
        "resource_comments": ""
      }
    ],
    "topic_id": "contribution_technique",
    "is_data_complete": true
  },
  "convex_hull_2d": {
    "problem_order": [
      "cses_2195",
      "kattis_convexhull",
      "yosupo_static_convex_hull",
      "lightoj_1203",
      "uva_109",
      "uva_10065",
      "codedrills_palindromic_polygon",
      "lightoj_1239",
      "codechef_dartsegm",
      "gym_100517k",
      "timus_1185",
      "kattis_parade",
      "codeforces_1143f",
      "usaco_382",
      "poj_2079",
      "codeforces_1299c",
      "toph_consephull",
      "toph_towers_of_wadia",
      "toph_chop_chop",
      "lightoj_protect_the_mines"
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L633-L669"
    ],
    "created_at": {
      "seconds": 1714761946,
      "nanoseconds": 842000000
    },
    "completion_count": 8,
    "topic_id": "convex_hull_2d",
    "is_data_complete": true,
    "resources": [
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Convex Hull construction | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/geometry/convex-hull.html"
      },
      {
        "is_starred": true,
        "resource_url": "https://usaco.guide/plat/convex-hull?lang=cpp",
        "resource_comments": "",
        "resource_title": "Convex Hull | USACO Guide"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/62183",
        "is_starred": true,
        "resource_title": "Number of points on Convex hull with lattice points  By Anachor",
        "resource_comments": ""
      }
    ]
  },
  "convex_hull_3d": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%203D.cpp#L367-L546"
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714814702,
      "nanoseconds": 166000000
    },
    "resources": [
      {
        "is_starred": true,
        "resource_title": "Efficient 3D Convex Hull Tutorial  By Monogon",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/81768"
      }
    ],
    "topic_id": "convex_hull_3d"
  },
  "coordinate_compression": {
    "problem_order": [
      "codeforces_1000c",
      "cses_1619",
      "cses_1144",
      "codeforces_1950g",
      "spoj_kquery",
      "cses_1748",
      "cses_1734",
      "codeforces_540e",
      "codeforces_863e",
      "usaco_viewproblem2",
      "usaco_1063"
    ],
    "is_data_complete": true,
    "resources": [
      {
        "resource_comments": "",
        "is_video_type": true,
        "resource_url": "https://www.youtube.com/watch?v=s9oXy-fZUzg",
        "resource_title": "Coordinate Compression | A small but an useful trick to have in the armoury |  take U forward",
        "is_starred": true
      },
      {
        "resource_title": "What is coordinate compression?",
        "resource_url": "https://codeforces.com/blog/entry/23180",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_title": "Coordinate Compression | Geeks for Geeks",
        "resource_url": "https://www.geeksforgeeks.org/coordinate-compression/"
      },
      {
        "resource_title": "Coordinate Compression | Algorithms Digest",
        "is_starred": true,
        "resource_url": "https://medium.com/algorithms-digest/coordinate-compression-2fff95326fb",
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/84164",
        "resource_comments": "check all comments",
        "resource_title": "My code for coordinate compression  By rembocoder"
      }
    ],
    "completion_count": 15,
    "created_at": {
      "seconds": 1714849949,
      "nanoseconds": 598000000
    },
    "template_codes": [],
    "topic_id": "coordinate_compression"
  },
  "counting_labeled_graphs": {
    "resources": [
      {
        "resource_title": "Counting labeled graphs | CP Algorithms",
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/combinatorics/counting_labeled_graphs.html",
        "is_starred": true
      }
    ],
    "completion_count": 2,
    "created_at": {
      "seconds": 1714109502,
      "nanoseconds": 275000000
    },
    "topic_id": "counting_labeled_graphs",
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Counting%20Labeled%20Graphs.cpp"
    ]
  },
  "counting_sort": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Basics/Counting%20Sort.cpp"
    ],
    "topic_id": "counting_sort",
    "completion_count": 135,
    "created_at": {
      "seconds": 1715159107,
      "nanoseconds": 563000000
    },
    "resources": [
      {
        "resource_title": "Counting Sort Algorithm | Programiz",
        "resource_url": "https://www.programiz.com/dsa/counting-sort",
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_url": "https://www.youtube.com/watch?v=lKMkuZO4wlY",
        "is_video_type": true,
        "resource_title": "Counting Sort Animation | Intuition | Algorithm | Visualization | Shreyaans Jain",
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_title": "Sorting Algorithm Visualizer | VisuAlgo",
        "resource_comments": "select Counting Sort",
        "resource_url": "https://visualgo.net/en/sorting"
      }
    ],
    "is_data_complete": true
  },
  "crt": {
    "completion_count": 17,
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://forthright48.com/chinese-remainder-theorem-part-1-coprime-moduli/",
        "resource_title": "Chinese Remainder Theorem Part 1 – Coprime Moduli | forthright48 "
      },
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://forthright48.com/chinese-remainder-theorem-part-2-non-coprime-moduli/",
        "resource_title": "Chinese Remainder Theorem Part 2 – Non Coprime Moduli | forthright48"
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://cp-algorithms.com/algebra/chinese-remainder-theorem.html",
        "resource_title": "Chinese Remainder Theorem | CP Algorithms"
      },
      {
        "resource_title": "Garner's algorithm | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/algebra/garners-algorithm.html",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/61290",
        "resource_title": "[Tutorial] Chinese Remainder Theorem  By Valiors"
      },
      {
        "resource_title": "Intersection of two arithmetic progressions",
        "resource_url": "https://mathoverflow.net/questions/128382/intersection-of-two-arithmetic-progressions",
        "resource_comments": "",
        "is_starred": true
      }
    ],
    "topic_id": "crt",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/CRT.cpp",
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Intersection%20of%20Arithmetic%20Progressions.cpp"
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714221982,
      "nanoseconds": 977000000
    },
    "problem_order": [
      "kattis_chineseremainder",
      "kattis_generalchineseremainder",
      "lightoj_monkey_tradition",
      "hackerrank_cheese-and-random-toppings",
      "codeforces_687b",
      "hackerrank_number_of_sequences",
      "codeforces_1500b",
      "codeforces_338d",
      "szkopul_o730xgzevyntwbmscbinhmbd"
    ]
  },
  "cycle_detection": {
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714048121,
      "nanoseconds": 682000000
    },
    "completion_count": 40,
    "resources": [
      {
        "resource_title": "Checking a graph for acyclicity and finding a cycle | CP Algorithms",
        "is_starred": true,
        "resource_url": "https://cp-algorithms.com/graph/finding-cycle.html",
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/graph/finding-negative-cycle-in-graph.html",
        "resource_title": "Finding a negative cycle in the graph | CP Algorithms"
      },
      {
        "resource_title": "Shortest Cycle in Weighted Graph",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/68073"
      },
      {
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/others/tortoise_and_hare.html",
        "resource_title": "Floyd's Linked List Cycle Finding Algorithm | CP Algorithms"
      }
    ],
    "topic_id": "cycle_detection",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Cycle%20Detection.cpp"
    ],
    "problem_order": [
      "cses_1669",
      "cses_1678",
      "yosupo_cycle_detection",
      "cses_1197",
      "spoj_ucv2013b",
      "yosupo_cycle_detection_undirected",
      "codeforces_263d",
      "codeforces_1454e",
      "cses_1707"
    ]
  },
  "cyclic_lcs": {
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Strings/Cyclic%20LCS.cpp"
    ],
    "topic_id": "cyclic_lcs",
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "Solving Cyclic Longest Common Subsequence in Quadratic Time | Andy Nguyen ",
        "resource_url": "https://arxiv.org/abs/1208.0396"
      }
    ],
    "created_at": {
      "seconds": 1714650546,
      "nanoseconds": 5000000
    }
  },
  "dag_reachability": {
    "template_codes": [],
    "problem_order": [
      "cses_2138",
      "spoj_dagcnt2",
      "codeforces_1062f",
      "cf_gym_103003e",
      "codeforces_1795g",
      "atcoder_agc041_e"
    ],
    "created_at": {
      "seconds": 1714117445,
      "nanoseconds": 200000000
    },
    "completion_count": 5,
    "resources": [
      {
        "resource_title": "[Tutorial] Collection of little techniques  By -is-this-fft-",
        "resource_comments": "check technique 1",
        "resource_url": "https://codeforces.com/blog/entry/100910"
      },
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/127593",
        "resource_title": "A Problem About DAG  By gkO_o"
      }
    ],
    "topic_id": "dag_reachability",
    "is_data_complete": true
  },
  "dag_reachability_using_bitset": {
    "template_codes": [],
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/100910",
        "resource_title": "[Tutorial] Collection of little techniques  By -is-this-fft-",
        "resource_comments": "check technique 1"
      }
    ],
    "topic_id": "dag_reachability_using_bitset",
    "created_at": {
      "seconds": 1714117002,
      "nanoseconds": 307000000
    }
  },
  "de_bruijn_sequence": {
    "created_at": {
      "seconds": 1714099862,
      "nanoseconds": 339000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Strings/De%20Bruijn%20Sequence.cpp"
    ],
    "is_data_complete": true,
    "topic_id": "de_bruijn_sequence",
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://en.wikipedia.org/wiki/De_Bruijn_sequence",
        "resource_title": "de Bruijn sequence | Wiki",
        "is_starred": true
      },
      {
        "is_starred": true,
        "resource_url": "https://usaco.guide/adv/eulerian-tours?lang=cpp#de-bruijn-sequences",
        "resource_title": "De Bruijn Sequences | USACO Guide",
        "resource_comments": ""
      }
    ],
    "completion_count": 2
  },
  "degree_sequences": {
    "resources": [
      {
        "resource_title": "Erdős–Gallai theorem | Wiki",
        "resource_comments": "",
        "resource_url": "https://en.wikipedia.org/wiki/Erd%C5%91s%E2%80%93Gallai_theorem"
      },
      {
        "resource_url": "https://en.wikipedia.org/wiki/Havel%E2%80%93Hakimi_algorithm",
        "resource_comments": "",
        "resource_title": "Havel–Hakimi algorithm | Wiki"
      },
      {
        "resource_url": "http://szhorvat.net/pelican/hh-connected-graphs.html",
        "resource_comments": "",
        "resource_title": "A simple algorithm for realizing a degree sequence as a connected graph | Szabolcs Horvát"
      },
      {
        "resource_url": "https://en.wikipedia.org/wiki/Gale%E2%80%93Ryser_theorem",
        "resource_title": "Gale–Ryser theorem | Wiki",
        "resource_comments": ""
      }
    ],
    "completion_count": 2,
    "template_codes": [],
    "created_at": {
      "seconds": 1714113508,
      "nanoseconds": 428000000
    },
    "is_data_complete": true,
    "topic_id": "degree_sequences"
  },
  "delaunay_triangulation": {
    "topic_id": "delaunay_triangulation",
    "resources": [
      {
        "resource_title": "[Tutorial] Voronoi Diagram and Delaunay Triangulation in O(n log n) with Fortune's Algorithm  By Monogon",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/85638",
        "is_starred": true
      },
      {
        "resource_title": "Delaunay triangulation | Wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Delaunay_triangulation",
        "resource_comments": ""
      },
      {
        "resource_title": "Voronoi diagram | Wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Voronoi_diagram",
        "resource_comments": ""
      },
      {
        "resource_url": "https://cp-algorithms.com/geometry/delaunay.html",
        "resource_comments": "",
        "resource_title": "Delaunay triangulation and Voronoi diagram | CP Algorithms",
        "is_starred": true
      }
    ],
    "completion_count": 2,
    "created_at": {
      "seconds": 1714817491,
      "nanoseconds": 130000000
    },
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Geometry/Delaunay%20Triangulation.cpp",
      "https://github.com/ShahjalalShohag/code-library/blob/main/Geometry/Voronoi%20Diagram.cpp"
    ]
  },
  "deque": {
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://www.programiz.com/cpp-programming/deque",
        "resource_title": "C++ Deque | Programiz",
        "resource_comments": ""
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=3U_Eg9WdGr0&list=PL1w8k37X_6L9NXrP1D31hDTKcdAPIL0cG&index=8",
        "is_video_type": true,
        "resource_title": "Deque | C++ STL (Standard Template Library) | std::deque  Knowledge Center",
        "resource_comments": ""
      },
      {
        "is_video_type": true,
        "resource_title": "Complete C++ STL in 1 Video | Time Complexity and Notes |  take U forward",
        "resource_comments": "check the deque section",
        "resource_url": "https://www.youtube.com/watch?v=RRVYpIET_RU"
      },
      {
        "resource_title": "Deque in C++ Standard Template Library (STL) | Geeks for Geeks",
        "resource_comments": "",
        "resource_url": "https://www.geeksforgeeks.org/deque-cpp-stl/"
      }
    ],
    "created_at": {
      "seconds": 1715113218,
      "nanoseconds": 993000000
    },
    "is_data_complete": true,
    "completion_count": 193,
    "template_codes": [],
    "topic_id": "deque",
    "problem_order": [
      "hackerrank_si_implement_deque",
      "simple deque",
      "aizu_itp2_1_b",
      "spoj_adaqueue",
      "codeforces_546c",
      "hackerrank_deque_stl",
      "spoj_acmceg2c",
      "codeforces_1179a"
    ]
  },
  "derangements": {
    "problem_order": [
      "cses_1717",
      "yosupo_montmort_number_mod",
      "codeforces_888d",
      "cf_gym_100971b"
    ],
    "is_data_complete": true,
    "completion_count": 16,
    "created_at": {
      "seconds": 1714291596,
      "nanoseconds": 274000000
    },
    "topic_id": "derangements",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Derangement.cpp"
    ],
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://en.wikipedia.org/wiki/Derangement",
        "resource_title": "Derangement | Wiki"
      },
      {
        "resource_title": "Derangements | USACO Guide",
        "resource_url": "https://usaco.guide/gold/combo?lang=cpp#derangements",
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/66176",
        "resource_title": "Derangement Generation of an Array [Tutorial]  By lazyneuron",
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_url": "https://en.wikipedia.org/wiki/Rencontres_numbers",
        "resource_title": "Rencontres numbers | Wiki",
        "resource_comments": "More discussions here: https://codeforces.com/blog/entry/14918?#comment-198781"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/114983",
        "resource_comments": "Ignore if you are a beginner",
        "resource_title": "Help wanted for a interesting problem.  By EarthMessenger"
      }
    ]
  },
  "determinant_of_permutant_matrix": {
    "created_at": {
      "seconds": 1714470215,
      "nanoseconds": 619000000
    },
    "topic_id": "determinant_of_permutant_matrix",
    "is_data_complete": true,
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "Editorial of Problem G. Permutant",
        "resource_url": "https://codeforces.com/gym/102129/attachments/download/15399/PTZ2018%20(1).pdf"
      },
      {
        "resource_title": "Circulant matrix | Wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Circulant_matrix",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_title": "Polynomials and roots of unity  By adamant",
        "resource_url": "https://codeforces.com/blog/entry/101876"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Determinant%20of%20Permutant%20Matrix.cpp"
    ]
  },
  "determinant_of_product_matrix": {
    "is_data_complete": true,
    "topic_id": "determinant_of_product_matrix",
    "created_at": {
      "seconds": 1714470056,
      "nanoseconds": 64000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Determinant%20of%20Product%20Matrix.cpp"
    ],
    "resources": []
  },
  "determinant_of_sparse_matrix": {
    "is_data_complete": true,
    "topic_id": "determinant_of_sparse_matrix",
    "created_at": {
      "seconds": 1714460535,
      "nanoseconds": 555000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Determinant%20of%20Sparse%20Matrix.cpp"
    ],
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Nice trick involving sparse matrix exponentiation (kind-of)  By bicsi",
        "resource_url": "https://codeforces.com/blog/entry/85969"
      },
      {
        "resource_comments": "",
        "resource_url": "https://yukicoder.me/wiki/black_box_linear_algebra",
        "is_starred": true,
        "resource_title": "Black box linear algebra | anta"
      }
    ]
  },
  "determinant_under_composite_modulo": {
    "created_at": {
      "seconds": 1714467420,
      "nanoseconds": 616000000
    },
    "problem_order": [
      "yosupo_matrix_det_arbitrary_mod",
      "spoj_deter3",
      "timus_1845"
    ],
    "topic_id": "determinant_under_composite_modulo",
    "is_data_complete": true,
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "Discussion on Library Checker",
        "resource_url": "https://github.com/yosupo06/library-checker-problems/issues/750"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Determinant%20under%20Composite%20Modulo.cpp"
    ]
  },
  "determinant_under_prime_modulo": {
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Determinant | Wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Determinant"
      },
      {
        "resource_title": "Calculating the determinant of a matrix by Gauss | CP Algorithms",
        "is_starred": true,
        "resource_url": "https://cp-algorithms.com/linear_algebra/determinant-gauss.html",
        "resource_comments": ""
      },
      {
        "resource_comments": "not important",
        "resource_url": "https://cp-algorithms.com/linear_algebra/determinant-kraut.html",
        "resource_title": "Calculating the determinant using Kraut method | CP Algorithms"
      },
      {
        "resource_title": "Math 2331 - 17040: Linear Algebra | Dr. Jiwen He",
        "is_starred": true,
        "resource_url": "https://www.math.uh.edu/~jiwenhe/math2331/index.htm",
        "resource_comments": "Check lecture 9"
      }
    ],
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Determinant%20under%20Prime%20Modulo.cpp"
    ],
    "created_at": {
      "seconds": 1714467472,
      "nanoseconds": 836000000
    },
    "completion_count": 5,
    "topic_id": "determinant_under_prime_modulo"
  },
  "dfs": {
    "topic_id": "dfs",
    "problem_order": [
      "cses_1666",
      "cses_1674",
      "codeforces_580c",
      "codeforces_727a",
      "codeforces_24a",
      "codeforces_802j",
      "usaco_944",
      "codeforces_29c",
      "cses_1192",
      "usaco_644",
      "codeforces_813c",
      "cses_1668",
      "spoj_buglife",
      "codeforces_862b",
      "codeforces_378c",
      "codeforces_540c",
      "spoj_adasea",
      "spoj_koze",
      "codeforces_638c",
      "codeforces_767c",
      "codeforces_794d",
      "codeforces_841d",
      "codeforces_29d",
      "codeforces_1833e",
      "codeforces_1144f",
      "codeforces_1176e",
      "codeforces_1093d",
      "codeforces_977e",
      "codeforces_761e",
      "codeforces_844e",
      "codeforces_709e"
    ],
    "completion_count": 122,
    "created_at": {
      "seconds": 1712866617,
      "nanoseconds": 330000000
    },
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/DFS.cpp"
    ],
    "resources": [
      {
        "resource_url": "https://medium.com/basecs/a-gentle-introduction-to-graph-theory-77969829ead8",
        "resource_comments": "check just in case you don't about graph definitions",
        "resource_title": "A Gentle Introduction To Graph Theory | Vaidehi Joshi",
        "is_starred": true
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=PMMc4VsIacU",
        "is_video_type": true,
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Depth First Search (DFS) Explained: Algorithm, Examples, and Code | Reducible"
      },
      {
        "is_starred": true,
        "resource_comments": "",
        "is_video_type": true,
        "resource_url": "https://www.youtube.com/watch?v=7fujbpJ0LB4",
        "resource_title": "Depth First Search Algorithm | Graph Theory  WilliamFiset"
      },
      {
        "is_starred": true,
        "resource_url": "https://www.programiz.com/dsa/graph-dfs",
        "resource_comments": "",
        "resource_title": "Depth First Search (DFS) | Programiz"
      },
      {
        "resource_title": "Depth First Search or DFS for a Graph | Geeks For Geeks",
        "resource_comments": "",
        "resource_url": "https://www.geeksforgeeks.org/depth-first-search-or-dfs-for-a-graph/"
      },
      {
        "resource_comments": "check until \"More about DFS\". It has great animations!",
        "resource_title": "Depth first search | CS Academy",
        "is_starred": true,
        "resource_url": "https://csacademy.com/lesson/depth_first_search"
      },
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Depth First Search | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/graph/depth-first-search.html"
      },
      {
        "resource_url": "https://cp-algorithms.com/graph/bipartite-check.html",
        "resource_title": "Check whether a graph is bipartite | CP Algorithms",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_title": "Depth First Search | HackerEarth",
        "resource_comments": "",
        "resource_url": "https://www.hackerearth.com/practice/algorithms/graphs/depth-first-search/tutorial/"
      },
      {
        "resource_title": "Introduction to Tree Algorithms | USACO Guide",
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://usaco.guide/silver/intro-tree?lang=cpp"
      }
    ]
  },
  "dfs_tree": {
    "template_codes": [],
    "resources": [
      {
        "resource_title": "[Tutorial] The DFS tree and its applications: how I found out I really didn't understand bridges  By -is-this-fft-",
        "resource_url": "https://codeforces.com/blog/entry/68138",
        "resource_comments": ""
      }
    ],
    "topic_id": "dfs_tree",
    "is_data_complete": true,
    "problem_order": [
      "codeforces_118e",
      "spoj_cac",
      "codeforces_861f",
      "codeforces_231e",
      "codeforces_1391e",
      "codeforces_412d",
      "cf_gym_101612g",
      "ceoi17_oneway",
      "codeforces_1364d",
      "codeforces_1277e",
      "codeforces_1325f",
      "codeforces_732f",
      "codeforces_962f"
    ],
    "created_at": {
      "seconds": 1713669748,
      "nanoseconds": 897000000
    },
    "completion_count": 59
  },
  "dials_algorithm": {
    "template_codes": [
      "https://codeforces.com/blog/entry/88408?#comment-790017"
    ],
    "topic_id": "dials_algorithm",
    "created_at": {
      "seconds": 1714047240,
      "nanoseconds": 374000000
    },
    "completion_count": 1,
    "is_data_complete": true,
    "resources": [
      {
        "resource_title": "[Tutorial] 1-K BFS  By Yukuk",
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/88408"
      },
      {
        "resource_url": "https://www.geeksforgeeks.org/dials-algorithm-optimized-dijkstra-for-small-range-weights/",
        "resource_title": "Dial’s Algorithm (Optimized Dijkstra for small range weights) | Geeks For Geeks",
        "resource_comments": ""
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/90917",
        "resource_title": "A-2A-BFS (1-2-BFS)  By ilyakrasnovv,",
        "resource_comments": ""
      }
    ]
  },
  "diameter_of_a_convex_polygon_2d": {
    "created_at": {
      "seconds": 1714762104,
      "nanoseconds": 830000000
    },
    "topic_id": "diameter_of_a_convex_polygon_2d",
    "resources": [
      {
        "resource_title": "Finding the Diameter of a Polygon using Two pointers and Monotone Chain  By chromate00",
        "resource_url": "https://codeforces.com/blog/entry/110739",
        "resource_comments": ""
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L741-L757"
    ],
    "problem_order": [
      "kattis_roberthood",
      "uva_12311"
    ]
  },
  "difference_array": {
    "topic_id": "difference_array",
    "problem_order": [
      "codeforces_816b",
      "hackerrank_crush",
      "cses_1619",
      "codeforces_296c",
      "codeforces_276c",
      "codeforces_863e"
    ],
    "is_data_complete": true,
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/78762",
        "is_starred": true,
        "resource_title": "An Introduction To Difference Arrays  By arujbansal"
      },
      {
        "resource_url": "https://medium.com/@ishankkatiyar162/understanding-difference-array-the-underrated-constant-time-range-update-algorithm-part-1-e432ada7f1f5",
        "resource_title": "Understanding Difference Array: The Underrated Constant Time Range Update Algorithm (Part 1) | Ishank Katiyar",
        "resource_comments": ""
      },
      {
        "resource_url": "https://youtu.be/96RG7EBF8LI?si=oWJ5ZVhJ3u3XrzeK",
        "resource_comments": "",
        "resource_title": "Difference Array Technique | Tutorial | Range Updates | Competitive Programming Tricks Part 1",
        "is_video_type": true
      }
    ],
    "completion_count": 87,
    "template_codes": [],
    "created_at": {
      "seconds": 1715165806,
      "nanoseconds": 956000000
    }
  },
  "digit_dp": {
    "created_at": {
      "seconds": 1714678769,
      "nanoseconds": 918000000
    },
    "is_data_complete": true,
    "topic_id": "digit_dp",
    "completion_count": 40,
    "problem_order": [
      "cses_2220",
      "lightoj_1068",
      "atcoder_dp_s",
      "cf_gym_100886g",
      "codeforces_628d",
      "lightoj_1122",
      "spoj_cpcrc1c",
      "spoj_raone",
      "spoj_lucifer",
      "spoj_numtsn",
      "atcoder_abc154_e",
      "toph_noora_number",
      "codeforces_1036c",
      "codeforces_1073e",
      "toph_lids",
      "lightoj_1205",
      "codechef_dgtcnt",
      "codechef_digimu",
      "codechef_workchef",
      "hackerearth_sallu_bhai_and_ias_8838ac8d",
      "spoj_balnum"
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Dynamic%20Programming%20Optimizations/Digit%20DP.cpp"
    ],
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "Digit DP  By flash_7",
        "resource_url": "https://codeforces.com/blog/entry/53960",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "is_video_type": true,
        "resource_title": "Introduction to Digit Dynamic Programming  By kartik8800",
        "resource_url": "https://codeforces.com/blog/entry/84928"
      },
      {
        "resource_title": "DIGIT DP Tutorial [ITERATIVE]  By Jon.Snow",
        "resource_url": "https://codeforces.com/blog/entry/77096",
        "resource_comments": ""
      },
      {
        "resource_title": "Digit DP \"tricks\"  By gnudgnaoh",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/95488",
        "resource_comments": ""
      }
    ]
  },
  "dijkstra_on_segment_tree": {
    "created_at": {
      "seconds": 1714044069,
      "nanoseconds": 785000000
    },
    "completion_count": 10,
    "is_data_complete": true,
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/51163",
        "resource_title": "Check editorial of 786B - Legacy",
        "resource_comments": ""
      },
      {
        "resource_title": "[Bangla] Handling shortest path tasks on Dense Graph with Segment Tree | Nafis",
        "resource_url": "https://nafis277.github.io/Notes/shortest_path_optimization_with_segtree.pdf",
        "resource_comments": ""
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Dijkstra%20on%20Segment%20Tree.cpp"
    ],
    "topic_id": "dijkstra_on_segment_tree"
  },
  "dijkstras_algorithm": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Dijkstra.cpp"
    ],
    "topic_id": "dijkstras_algorithm",
    "problem_order": [
      "cses_1671",
      "yosupo_shortest_path",
      "codeforces_20c",
      "usaco_861",
      "spoj_shpath",
      "spoj_adatrip",
      "cf_gym_100625d",
      "codeforces_1846g",
      "cses_1195",
      "cses_1196",
      "cses_1202",
      "kattis_robotturtles",
      "codeforces_567e",
      "timus_1930",
      "codeforces_59e",
      "codeforces_449b",
      "codeforces_715b",
      "cf_gym_100753a",
      "codeforces_757f",
      "codeforces_464e",
      "ioi11_crocodile",
      "joi21_ho_t4",
      "dmoj_apio11p2",
      "baekjoon_5250",
      "codeforces_843d",
      "codeforces_827f",
      "lightoj_dangerous_bull_who_wants_to_p"
    ],
    "created_at": {
      "seconds": 1714042789,
      "nanoseconds": 876000000
    },
    "is_data_complete": true,
    "resources": [
      {
        "is_video_type": true,
        "resource_title": "Dijkstra's Shortest Path Algorithm | Graph Theory  WilliamFiset",
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/watch?v=pSqmAO-m7Lk"
      },
      {
        "resource_url": "https://cp-algorithms.com/graph/dijkstra.html",
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Dijkstra Algorithm on dense graphs | CP Algorithms"
      },
      {
        "resource_title": "Dijkstra on sparse graphs | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/graph/dijkstra_sparse.html",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_url": "https://usaco.guide/CPH.pdf#page=136",
        "resource_title": "13.2 Dijkstra’s algorithm | CPH",
        "resource_comments": ""
      },
      {
        "resource_url": "https://alexyd88.github.io/Dijkstra-Visualizer/",
        "resource_title": "Dijkstra Visualizer",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_url": "https://usaco.guide/gold/shortest-paths?lang=cpp#dijkstra",
        "resource_title": "Dijkstra | USACO Guide",
        "resource_comments": "has cool manimation",
        "is_starred": true
      }
    ],
    "completion_count": 69
  },
  "directed_mst": {
    "topic_id": "directed_mst",
    "resources": [
      {
        "is_starred": true,
        "resource_title": "Directed Minimum Spanning Trees | Uri Zwick",
        "resource_comments": "use vpn if you cant access the site",
        "resource_url": "https://www.cs.tau.ac.il//~zwick/grad-algo-13/directed-mst.pdf"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Directed%20MST.cpp"
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714037897,
      "nanoseconds": 469000000
    },
    "completion_count": 1
  },
  "direction_array": {
    "completion_count": 15,
    "resources": [
      {
        "resource_title": "An Efficient (and quite common) Way to Navigate Grid Problems [C++]  By Jellyman102",
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/78827"
      },
      {
        "resource_comments": "",
        "resource_url": "https://www.shafaetsplanet.com/?p=1448",
        "resource_title": "ডিরেকশন অ্যারে | শাফায়েতের ব্লগ"
      }
    ],
    "topic_id": "direction_array",
    "created_at": {
      "seconds": 1714850504,
      "nanoseconds": 734000000
    },
    "template_codes": [],
    "is_data_complete": true
  },
  "dirichlet_convolution": {
    "problem_order": [
      "yosupo_sum_of_totient_function",
      "hdu_5608",
      "luogu_p4213",
      "spoj_divcnt2",
      "luogu_p3768"
    ],
    "created_at": {
      "seconds": 1714210002,
      "nanoseconds": 429000000
    },
    "completion_count": 3,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Dirichlet%20Convolution.cpp"
    ],
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/54150",
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "[Tutorial] Math note — Dirichlet convolution  By Nisiyama_Suzune"
      },
      {
        "resource_title": "杜教筛 | OI Wiki",
        "resource_url": "https://oi-wiki.org/math/number-theory/du/",
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "resource_title": "Dirichlet convolution. Part 1: Fast prefix sum computations  By adamant",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/117635",
        "resource_comments": ""
      },
      {
        "resource_url": "https://gbroxey.github.io/blog/2023/04/30/mult-sum-1.html",
        "resource_title": "Summing Multiplicative Functions (Pt. 1) | griff's math blog!",
        "resource_comments": ""
      },
      {
        "resource_comments": "Hard! Ignore if you want.",
        "resource_url": "https://codeforces.com/blog/entry/117783",
        "resource_title": "Dirichlet convolution. Part 2: Dirichlet series and prime counting  By adamant"
      },
      {
        "resource_comments": "",
        "resource_title": "Prefix Sums of Multiplicative Functions | USACO Guide",
        "resource_url": "https://usaco.guide/adv/multiplicative?lang=cpp"
      }
    ],
    "is_data_complete": true,
    "topic_id": "dirichlet_convolution"
  },
  "discrete_log": {
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://cp-algorithms.com/algebra/discrete-log.html",
        "resource_title": "Discrete Logarithm | CP Algorithms",
        "resource_comments": ""
      }
    ],
    "created_at": {
      "seconds": 1714283097,
      "nanoseconds": 114000000
    },
    "is_data_complete": true,
    "topic_id": "discrete_log",
    "problem_order": [
      "cf_gym_101853g",
      "spoj_mod",
      "codechef_invxor",
      "topcoder_14386"
    ],
    "completion_count": 5,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Discrete%20Log.cpp"
    ]
  },
  "discrete_root": {
    "created_at": {
      "seconds": 1714284140,
      "nanoseconds": 845000000
    },
    "is_data_complete": true,
    "topic_id": "discrete_root",
    "resources": [
      {
        "resource_url": "https://cp-algorithms.com/algebra/discrete-root.html",
        "resource_title": "Discrete Root | CP Algorithms",
        "is_starred": true,
        "resource_comments": ""
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Discrete%20Root.cpp"
    ],
    "completion_count": 2
  },
  "discrete_root_in_o_p_1_4": {
    "topic_id": "discrete_root_in_o_p_1_4",
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://yukicoder.me/problems/no/981/editorial",
        "resource_comments": "Sign in to view this page",
        "resource_title": "Explanation | yukicoder"
      },
      {
        "resource_comments": "",
        "resource_url": "https://37zigen.com/cipolla-algorithm/",
        "resource_title": "Cipolla のアルゴリズム | 37zigen"
      }
    ],
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Discrete%20Root%20Faster.cpp"
    ],
    "created_at": {
      "seconds": 1714284942,
      "nanoseconds": 270000000
    }
  },
  "discrete_root_in_o_p_1_4_using_tonelli_shanks_algorithm": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Discrete%20Root%20Faster.cpp"
    ],
    "created_at": {
      "seconds": 1714284664,
      "nanoseconds": 894000000
    },
    "resources": [],
    "topic_id": "discrete_root_in_o_p_1_4_using_tonelli_shanks_algorithm"
  },
  "disjoint_sparse_table": {
    "topic_id": "disjoint_sparse_table",
    "completion_count": 8,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Disjoint%20Sparse%20Table.cpp"
    ],
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://discuss.codechef.com/t/tutorial-disjoint-sparse-table/17404",
        "resource_comments": "",
        "resource_title": "[Tutorial] Disjoint Sparse Table | nilesh3105"
      },
      {
        "is_video_type": true,
        "resource_comments": "the video is in Russian sadly, but English subtitles are available. Also it has cool Manimations!",
        "resource_title": "Video about Disjoint Sparse Table or how to answer all queries in constant time | peltorator",
        "resource_url": "https://codeforces.com/blog/entry/87940"
      },
      {
        "resource_title": "Disjoint Sparse Table tutorial | ramchandra",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/79108"
      }
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1713291610,
      "nanoseconds": 454000000
    },
    "problem_order": [
      "codechef_segprod",
      "cf_group_102954a",
      "cf_group_102954c",
      "cf_group_102954d"
    ]
  },
  "dist_from_point_to_convex_2d": {
    "created_at": {
      "seconds": 1714762682,
      "nanoseconds": 725000000
    },
    "topic_id": "dist_from_point_to_convex_2d",
    "resources": [],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L932-L977"
    ]
  },
  "dist_from_point_to_polygon_2d": {
    "resources": [
      {
        "resource_url": "https://www.nlc-bnc.ca/obj/s4/f2/dsk1/tape7/PQDD_0027/MQ50856.pdf?oclc_number=1006918422",
        "resource_title": "COMPUTATIONAL GEOMETRY WITH THE ROTATING CALIPERS by Hormoz Pirzadeh",
        "resource_comments": "check chapter 2.4 The minimum distance between two convex polygons"
      },
      {
        "resource_title": "[Tutorial] Distance of two convex polygon  By FHVirus",
        "resource_comments": "uses Minkowski Sum",
        "resource_url": "https://codeforces.com/blog/entry/103477"
      }
    ],
    "completion_count": 1,
    "created_at": {
      "seconds": 1714762402,
      "nanoseconds": 916000000
    },
    "topic_id": "dist_from_point_to_polygon_2d",
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L932-L977"
    ]
  },
  "distance_between_triangle_to_triangle_3d": {
    "created_at": {
      "seconds": 1714814545,
      "nanoseconds": 535000000
    },
    "topic_id": "distance_between_triangle_to_triangle_3d",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%203D.cpp#L259-L304"
    ],
    "resources": []
  },
  "distance_from_triangle_to_triangle_3d": {
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714815890,
      "nanoseconds": 546000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%203D.cpp#L259-L304"
    ],
    "topic_id": "distance_from_triangle_to_triangle_3d",
    "resources": [
      {
        "resource_title": "A comment by ko_osaga",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/64489?#comment-485643",
        "resource_comments": ""
      }
    ]
  },
  "divide_and_conquer": {
    "template_codes": [],
    "resources": [
      {
        "resource_url": "https://www.youtube.com/watch?v=ib4BHvr5-Ao",
        "resource_title": "Divide and Conquer: The Art of Breaking Down Problems | Recursion Series |  WilliamFiset",
        "is_starred": true,
        "resource_comments": "",
        "is_video_type": true
      },
      {
        "resource_title": "Divide and Conquer Algorithm | Programiz",
        "resource_url": "https://www.programiz.com/dsa/divide-and-conquer",
        "resource_comments": "check until \"Divide and Conquer Vs Dynamic approach\""
      }
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1715163704,
      "nanoseconds": 976000000
    },
    "completion_count": 92,
    "topic_id": "divide_and_conquer"
  },
  "divide_and_conquer_on_queries": {
    "is_data_complete": true,
    "template_codes": [],
    "topic_id": "divide_and_conquer_on_queries",
    "completion_count": 7,
    "problem_order": [
      "cses_1647",
      "codechef_segprod",
      "joi14_secret",
      "uva_3141",
      "boi17_toll",
      "dmoj_dmopc19c7p4",
      "codebreaker_supperbox",
      "codeforces_1100f",
      "cf_gym_101741j",
      "usaco_997"
    ],
    "resources": [
      {
        "is_starred": true,
        "resource_title": "Divide & Conquer - SRQ | USACO guide",
        "resource_url": "https://usaco.guide/plat/DC-SRQ?lang=cpp",
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/119104",
        "resource_title": "[Tutorial] Divide and Conquer Offline Query — A Niche Way to solve Static Range Query  By steveonalex",
        "resource_comments": ""
      }
    ],
    "created_at": {
      "seconds": 1713054221,
      "nanoseconds": 6000000
    }
  },
  "divide_and_conquer_optimization": {
    "completion_count": 11,
    "created_at": {
      "seconds": 1714679788,
      "nanoseconds": 3000000
    },
    "is_data_complete": true,
    "topic_id": "divide_and_conquer_optimization",
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://cp-algorithms.com/dynamic_programming/divide-and-conquer-dp.html",
        "resource_title": "Divide and Conquer DP | CP Algorithms"
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://www.youtube.com/watch?v=Ec3fSWk9JOw",
        "is_video_type": true,
        "resource_title": "Divide & Conquer Dynamic Programming Optimisation, CSES Subarray Squares | Algorithms Conquered"
      },
      {
        "is_video_type": true,
        "resource_url": "https://www.youtube.com/watch?v=wLXEWuDWnzI",
        "resource_title": "Dynamic Programming Optimization: Divide and Conquer technique | Tozan Southerpacks Redcoder",
        "resource_comments": ""
      },
      {
        "resource_title": "Divide & Conquer - DP | USACO Guide",
        "is_starred": true,
        "resource_url": "https://usaco.guide/plat/DC-DP?lang=cpp",
        "resource_comments": ""
      }
    ],
    "problem_order": [
      "cses_2086",
      "codeforces_321e",
      "hackerrank_guardians_lunatics_ioi14",
      "codeforces_833b",
      "codeforces_673e",
      "cf_gym_103536a",
      "spoj_adamold",
      "timus_1167",
      "usaco_616",
      "codeforces_1527e",
      "atcoder_arc067_d",
      "codeforces_868f",
      "codechef_chefaor",
      "hackerrank_mining",
      "kattis_money",
      "spoj_larmy"
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Dynamic%20Programming%20Optimizations/Divide%20and%20Conquer%20Optimization.cpp"
    ]
  },
  "divisors": {
    "is_data_complete": true,
    "resources": [
      {
        "resource_title": "C++ Program to Display Factors of a Number | Programiz",
        "resource_url": "https://www.programiz.com/cpp-programming/examples/factors-number",
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "is_video_type": true,
        "resource_comments": "find divisors in O(sqrt(n))",
        "is_starred": true,
        "resource_title": "L2. Print all Divisors of a Number | Maths Playlist |  take U forward",
        "resource_url": "https://www.youtube.com/watch?v=Ae_Ag_saG9s"
      },
      {
        "resource_comments": "code for divisors in O(sqrt(n))",
        "resource_title": "Find all divisors of a natural number - Set 2 in C++ | tutorialspoint",
        "resource_url": "https://www.tutorialspoint.com/find-all-divisors-of-a-natural-number-set-2-in-cplusplus"
      }
    ],
    "created_at": {
      "seconds": 1715076354,
      "nanoseconds": 824000000
    },
    "topic_id": "divisors",
    "completion_count": 385,
    "problem_order": [
      "gym_405759k",
      "aizu_itp1_3_d",
      "codeforces_762a",
      "cses_1713"
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Basics/Divisors.cpp"
    ]
  },
  "dominator_tree": {
    "problem_order": [
      "codeforces_757f",
      "cf_gym_100513l",
      "codechef_graphcnt",
      "cf_gym_101741l",
      "yandex_4227c"
    ],
    "resources": [
      {
        "resource_url": "https://tanujkhattar.wordpress.com/2016/01/11/dominator-tree-of-a-directed-graph/",
        "resource_comments": "use vpn if you can't access the site",
        "resource_title": "Dominator Tree of a Directed Graph | Tanuj Khattar",
        "is_starred": true
      },
      {
        "resource_url": "https://en.wikipedia.org/wiki/Dominator_(graph_theory)",
        "resource_title": "Dominator (graph theory) | Wiki",
        "resource_comments": ""
      }
    ],
    "is_data_complete": true,
    "completion_count": 1,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Dominator%20Tree.cpp"
    ],
    "topic_id": "dominator_tree",
    "created_at": {
      "seconds": 1714118022,
      "nanoseconds": 930000000
    }
  },
  "dp_on_convex_hulls": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Dynamic%20Programming%20Optimizations/DP%20on%20Convex%20Hulls.cpp"
    ],
    "created_at": {
      "seconds": 1714734785,
      "nanoseconds": 328000000
    },
    "is_data_complete": true,
    "resources": [
      {
        "is_starred": true,
        "resource_title": "Transition Then State | mzhang2021",
        "resource_comments": "explains similar techniques",
        "resource_url": "https://mzhang2021.github.io/cp-blog/transition/"
      },
      {
        "resource_comments": "check idea 4",
        "resource_title": "A bit more of general ideas  By adamant",
        "resource_url": "https://codeforces.com/blog/entry/104466"
      }
    ],
    "completion_count": 1,
    "topic_id": "dp_on_convex_hulls"
  },
  "dp_on_trees_and_dags": {
    "resources": [
      {
        "is_starred": true,
        "resource_title": "DP on Trees Tutorial  By darkshadows",
        "resource_url": "https://codeforces.com/blog/entry/20935",
        "resource_comments": ""
      },
      {
        "resource_url": "https://usaco.guide/gold/dp-trees?lang=cpp",
        "resource_comments": "",
        "resource_title": "DP on Trees - Introduction | USACO Guide"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/79857",
        "resource_title": "Dynamic Programming on Trees  By kartik8800",
        "is_video_type": true,
        "resource_comments": ""
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=TXkDpqjDMHA",
        "is_starred": true,
        "is_video_type": true,
        "resource_comments": "",
        "resource_title": "Shortest/Longest path on a Directed Acyclic Graph (DAG) | Graph Theory  WilliamFiset"
      }
    ],
    "topic_id": "dp_on_trees_and_dags",
    "created_at": {
      "seconds": 1714732133,
      "nanoseconds": 395000000
    },
    "template_codes": [],
    "is_data_complete": true,
    "completion_count": 18
  },
  "dp_optimization_using_data_structures": {
    "problem_order": [
      "cses_1145",
      "cses_1140",
      "atcoder_dp_q",
      "codeforces_597c",
      "codeforces_474e",
      "codeforces_629d",
      "codeforces_960f",
      "codeforces_675e",
      "cses_1731",
      "atcoder_dp_w",
      "codeforces_115e"
    ],
    "created_at": {
      "seconds": 1714719798,
      "nanoseconds": 864000000
    },
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/101210",
        "is_starred": true,
        "resource_title": "[Tutorial]Using Segment Trees to solve Dynamic Programming problems  By AlexLuchianov"
      }
    ],
    "completion_count": 8,
    "topic_id": "dp_optimization_using_data_structures",
    "template_codes": [],
    "is_data_complete": true
  },
  "dp_over_divisors": {
    "problem_order": [
      "codeforces_1900d",
      "codeforces_1973f",
      "atcoder_abc335_g"
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Dynamic%20Programming%20Optimizations/DP%20Over%20Divisors.cpp"
    ],
    "is_data_complete": true,
    "completion_count": 5,
    "created_at": {
      "seconds": 1714733229,
      "nanoseconds": 110000000
    },
    "resources": [
      {
        "resource_title": "[Tutorial] Zeta, Mobius Transform to AND, OR, GCD Convolution  By jinhan814",
        "resource_comments": "check  Divisor Zeta and Multiple Zeta",
        "resource_url": "https://codeforces.com/blog/entry/119082"
      }
    ],
    "topic_id": "dp_over_divisors"
  },
  "dsu": {
    "is_data_complete": true,
    "problem_order": [
      "yosupo_unionfind",
      "cses_1676",
      "cf_edu_289391b",
      "cf_edu_289390d",
      "spoj_consec",
      "timus_1671",
      "codechef_abroads",
      "cf_edu_289391d",
      "codeforces_25d",
      "cf_edu_289390c",
      "codeforces_150b",
      "codeforces_1559d1",
      "toph_unbelievable_array",
      "cf_edu_289391i",
      "codeforces_468b",
      "usaco_992",
      "usaco_669",
      "csacademy_mountain_time",
      "cf_edu_289391c",
      "codeforces_1213g",
      "codeforces_1468j",
      "codeforces_1624g",
      "atcoder_abc335_e",
      "usaco_1259"
    ],
    "resources": [
      {
        "resource_comments": "check until \"Offline RMQ\"",
        "is_starred": true,
        "resource_url": "https://cp-algorithms.com/data_structures/disjoint_set_union.html",
        "resource_title": "Disjoint Set Union | CP Algorithms"
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=0jNmHPfA_yE",
        "resource_comments": "",
        "resource_title": "Union Find - Union and Find Operations  WilliamFiset",
        "is_starred": true,
        "is_video_type": true
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://csacademy.com/lesson/disjoint_data_sets",
        "resource_title": "Disjoint-set Data Structures | CS Academy"
      },
      {
        "resource_url": "https://codeforces.com/edu/course/2/lesson/7",
        "resource_comments": "check step 1 only",
        "resource_title": "Disjoint Sets Union | CF EDU",
        "is_starred": true,
        "is_video_type": true
      },
      {
        "resource_comments": "",
        "resource_title": "G-46. Disjoint Set | Union by Rank | Union by Size | Path Compression | striver",
        "is_video_type": true,
        "resource_url": "https://www.youtube.com/watch?v=aBxjDBC4M1U"
      },
      {
        "resource_comments": "",
        "resource_title": "DISJOINT-SET DATA STRUCTURES | Topcoder",
        "resource_url": "https://www.topcoder.com/thrive/articles/Disjoint-set%20Data%20Structures"
      },
      {
        "resource_comments": "",
        "resource_title": "Introduction to Disjoint Set Data Structure | DSU by kartik8800",
        "resource_url": "https://codeforces.com/blog/entry/120381"
      },
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/98275",
        "resource_title": "[Tutorial] Proving the inverse Ackermann complexity of Union-Find  By -is-this-fft-"
      },
      {
        "resource_comments": "Not needed to check this out, if you want to learn more about DSU, then you can check",
        "resource_title": "DSU Extensions with Auxillary Nodes : Move and Erase",
        "resource_url": "https://codeforces.com/blog/entry/130521"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/DSU.cpp"
    ],
    "completion_count": 61,
    "created_at": {
      "seconds": 1713313083,
      "nanoseconds": 721000000
    },
    "topic_id": "dsu"
  },
  "dsu_on_tree": {
    "completion_count": 23,
    "is_data_complete": true,
    "created_at": {
      "seconds": 1713329224,
      "nanoseconds": 225000000
    },
    "resources": [
      {
        "is_starred": true,
        "resource_title": "DSU on Tree | Small to Large merging | Advanced Idea | Part 4",
        "resource_url": "https://www.youtube.com/watch?v=92unAh2APJ0",
        "resource_comments": "",
        "is_video_type": true
      },
      {
        "resource_comments": "",
        "resource_title": "18.4 - Merging Data Structures | Competitive Programming Handbook",
        "resource_url": "https://usaco.guide/CPH.pdf#page=180"
      },
      {
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/67696",
        "resource_comments": "",
        "resource_title": "[Explanation] dsu on trees (small to large) | qmk"
      },
      {
        "resource_title": "[Tutorial] Sack (dsu on tree) | Arpa",
        "resource_url": "https://codeforces.com/blog/entry/44351",
        "resource_comments": ""
      },
      {
        "resource_title": "Small-To-Large Merging | Usaco Guide",
        "resource_comments": "",
        "resource_url": "https://usaco.guide/plat/merging?lang=cpp"
      }
    ],
    "topic_id": "dsu_on_tree",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/DSU%20on%20Tree.cpp"
    ],
    "problem_order": [
      "cses_1139",
      "codeforces_600e",
      "usaco_696",
      "codeforces_570d",
      "sgu_507",
      "hackerearth_the_grass_type",
      "codeforces_246e",
      "codeforces_1009f",
      "codeforces_375d",
      "kattis_speedlimit2",
      "joi20_joitter2",
      "codeforces_741d",
      "codeforces_914e",
      "atcoder_abc337_g",
      "codeforces_965e",
      "joi16_selling_rna"
    ]
  },
  "dsu_with_rollbacks": {
    "created_at": {
      "seconds": 1713322234,
      "nanoseconds": 426000000
    },
    "completion_count": 24,
    "topic_id": "dsu_with_rollbacks",
    "resources": [
      {
        "resource_url": "https://usaco.guide/adv/offline-del?lang=cpp#dsu-with-rollback",
        "resource_comments": "check until \"Dynamic Connectivity\"",
        "resource_title": "DSU With Rollback | Usaco Guide"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/DSU%20with%20Rollbacks.cpp"
    ],
    "is_data_complete": true
  },
  "duality_in_linear_programming": {
    "topic_id": "duality_in_linear_programming",
    "is_data_complete": true,
    "resources": [
      {
        "resource_title": "Duality in linear programming. Part 1 — definition and construction  By adamant",
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/105049"
      },
      {
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/105789",
        "resource_title": "Duality in linear programming. Part 2 — in competitive programming  By adamant",
        "resource_comments": ""
      },
      {
        "resource_url": "https://laurentlessard.com/teaching/cs524/slides/7%20-%20dual%20flows%20and%20algorithms.pdf",
        "resource_title": "Dual flows and algorithms | Laurent Lessard",
        "resource_comments": ""
      }
    ],
    "template_codes": [],
    "created_at": {
      "seconds": 1714509437,
      "nanoseconds": 142000000
    }
  },
  "dynamic_aho_corasick": {
    "topic_id": "dynamic_aho_corasick",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Strings/Aho%20Corasick%20Dynamic.cpp"
    ],
    "is_data_complete": true,
    "resources": [
      {
        "resource_comments": "comment by dc.",
        "resource_url": "https://codeforces.com/blog/entry/10725?#comment-160742",
        "is_starred": true,
        "resource_title": "Aho-Corasick with additions "
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/48417",
        "resource_title": "Idea 4 of General ideas  By adamant",
        "resource_comments": ""
      }
    ],
    "completion_count": 1,
    "created_at": {
      "seconds": 1714642265,
      "nanoseconds": 839000000
    }
  },
  "dynamic_bitsets": {
    "is_data_complete": true,
    "topic_id": "dynamic_bitsets",
    "template_codes": [],
    "created_at": {
      "seconds": 1715818448,
      "nanoseconds": 42000000
    },
    "resources": [
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/129454",
        "resource_title": "Dynamic Bitsets in GCC  By bitset"
      }
    ],
    "completion_count": 1
  },
  "dynamic_connectivity_problem": {
    "topic_id": "dynamic_connectivity_problem",
    "problem_order": [
      "cf_gym_100551a",
      "cses_2133",
      "codeforces_981e",
      "codeforces_1140f",
      "cf_gym_100551e",
      "yosupo_dynamic_graph_vertex_add_component_sum",
      "codeforces_1386c",
      "timus_1846",
      "codeforces_601e"
    ],
    "is_data_complete": true,
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://cp-algorithms.com/data_structures/deleting_in_log_n.html",
        "resource_title": "Deleting from a data structure in  O(T(n)logn) | CP Algorithms",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_title": "Dynamic Connectivity for Competitive Programming | DSU Rollback on Segment Tree | Vivek",
        "is_video_type": true,
        "resource_url": "https://www.youtube.com/watch?v=7gqFcunrFH0"
      },
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/15296",
        "resource_title": "Dynamic connectivity problem | adamant"
      }
    ],
    "created_at": {
      "seconds": 1713326328,
      "nanoseconds": 705000000
    },
    "completion_count": 11,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Dynamic%20Connectivity%20Problem.cpp"
    ]
  },
  "dynamic_convex_hull": {
    "created_at": {
      "seconds": 1714819054,
      "nanoseconds": 90000000
    },
    "completion_count": 1,
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "Tiny Dynamic Convex Hull Implementation  By brunomont",
        "resource_url": "https://codeforces.com/blog/entry/112458",
        "is_starred": true
      }
    ],
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Geometry/Convex%20Hull%20Dynamic.cpp"
    ],
    "topic_id": "dynamic_convex_hull"
  },
  "dynamic_dag_reachability": {
    "topic_id": "dynamic_dag_reachability",
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/DAG%20Reachability%20Dynamic.cpp"
    ],
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "Amortized efficiency of a path retrieval data structure | Paper by G.F. Italiano",
        "resource_url": "https://www.sciencedirect.com/science/article/pii/0304397586900988"
      }
    ],
    "created_at": {
      "seconds": 1714117717,
      "nanoseconds": 187000000
    }
  },
  "dynamic_diameter_online": {
    "is_data_complete": true,
    "completion_count": 2,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Dynamic%20Diameter%20Online.cpp"
    ],
    "resources": [
      {
        "resource_title": "Dynamic Diameter | hocky",
        "resource_url": "https://github.com/hockyy/cf/blob/main/DynamicDiameter.md",
        "is_starred": true,
        "resource_comments": ""
      }
    ],
    "topic_id": "dynamic_diameter_online",
    "created_at": {
      "seconds": 1714150559,
      "nanoseconds": 487000000
    }
  },
  "dynamic_half_plane_intersection": {
    "resources": [],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Geometry/Half%20Plane%20Intersection%20Dynamic.cpp"
    ],
    "is_data_complete": true,
    "topic_id": "dynamic_half_plane_intersection",
    "created_at": {
      "seconds": 1714818656,
      "nanoseconds": 103000000
    }
  },
  "dynamic_k_connectivity": {
    "topic_id": "dynamic_k_connectivity",
    "is_data_complete": true,
    "resources": [
      {
        "resource_url": "https://arxiv.org/abs/2007.07862",
        "resource_title": "Vertex Sparsification for Edge Connectivity",
        "resource_comments": ""
      }
    ],
    "completion_count": 1,
    "created_at": {
      "seconds": 1714030647,
      "nanoseconds": 586000000
    },
    "template_codes": []
  },
  "dynamic_mst": {
    "created_at": {
      "seconds": 1714038325,
      "nanoseconds": 237000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Dynamic%20MST%20Offline.cpp",
      "https://atcoder.jp/contests/abc355/submissions/53863533"
    ],
    "topic_id": "dynamic_mst",
    "problem_order": [
      "dmoj_ccoprep4p3",
      "acmsguru_99999529"
    ],
    "is_data_complete": true,
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/105192",
        "resource_title": "Offline Dynamic MST [Tutorial]  By jeroenodb",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_title": "Offline Algorithms for Dynamic Minimum Spanning Tree Problems By David Eppstein",
        "resource_url": "https://ics.uci.edu/~eppstein/pubs/Epp-TR-92-04.pdf"
      },
      {
        "resource_comments": "check the 2nd template code for an example implementation",
        "resource_url": "https://codeforces.com/blog/entry/59908?#comment-436081",
        "resource_title": "Online Dynamic MST | ivan100sic",
        "is_starred": true
      }
    ]
  },
  "dynamic_segment_tree": {
    "completion_count": 22,
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "Dynamic Segment Tree | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/data_structures/segment_tree.html#dynamic-segment-tree",
        "is_starred": true
      },
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://usaco.guide/plat/sparse-segtree?lang=cpp",
        "resource_title": "Sparse Segment Trees | USACO Guide"
      },
      {
        "resource_comments": "",
        "resource_url": "https://www.geeksforgeeks.org/dynamic-segment-trees-online-queries-for-range-sum-with-point-updates/",
        "resource_title": "Dynamic Segment Trees : Online Queries for Range Sum with Point Updates | Geeks for Geeks"
      }
    ],
    "is_data_complete": true,
    "topic_id": "dynamic_segment_tree",
    "template_codes": [],
    "created_at": {
      "seconds": 1712671656,
      "nanoseconds": 414000000
    }
  },
  "dynamic_submask_count": {
    "is_data_complete": true,
    "template_codes": [
      "https://codeforces.com/blog/entry/127469"
    ],
    "topic_id": "dynamic_submask_count",
    "problem_order": [
      "hackerrank_subset",
      "dmoj_utso18p6",
      "izho17_subsequence"
    ],
    "completion_count": 1,
    "created_at": {
      "seconds": 1714375919,
      "nanoseconds": 286000000
    },
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/103799",
        "resource_comments": "",
        "resource_title": "Submask range queries  By adamant",
        "is_starred": true
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/127469",
        "resource_title": "Dynamic sum-over-subset dp with element addition and extraction in O(2^(k/2)) time  By Peter-007",
        "resource_comments": ""
      }
    ]
  },
  "dynamic_suffix_array": {
    "topic_id": "dynamic_suffix_array",
    "is_data_complete": true,
    "template_codes": [
      "https://pastebin.com/3SHz0M29"
    ],
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/93042",
        "resource_title": "[Tutorial] Dynamic Suffix Arrays  By brunomont",
        "resource_comments": ""
      }
    ],
    "created_at": {
      "seconds": 1714646768,
      "nanoseconds": 144000000
    }
  },
  "ear_decomposition": {
    "resources": [
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Ear decomposition tutorial By ramchandra",
        "resource_url": "https://codeforces.com/blog/entry/80932"
      }
    ],
    "topic_id": "ear_decomposition",
    "created_at": {
      "seconds": 1714030713,
      "nanoseconds": 281000000
    },
    "template_codes": [],
    "completion_count": 1,
    "is_data_complete": true
  },
  "edge_coloring_of_bipartite_graph": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Edge%20Coloring%20Bipartite%20Graph.cpp",
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Edge%20Coloring%20Bipartite%20Graph%20Faster.cpp"
    ],
    "problem_order": [
      "codeforces_600f",
      "codeforces_212a",
      "codeforces_1240f",
      "yandex_17756g",
      "coci18_teoreticar",
      "acmsguru_99999286",
      "yosupo_bipartite_edge_coloring",
      "atcoder_agc037_d"
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714106991,
      "nanoseconds": 616000000
    },
    "topic_id": "edge_coloring_of_bipartite_graph",
    "resources": [
      {
        "resource_title": "Story about edge coloring of graph  By ko_osaga,",
        "resource_url": "https://codeforces.com/blog/entry/75431",
        "is_starred": true,
        "resource_comments": ""
      }
    ],
    "completion_count": 1
  },
  "edge_coloring_of_simple_graph": {
    "created_at": {
      "seconds": 1714106874,
      "nanoseconds": 445000000
    },
    "is_data_complete": true,
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/75431",
        "resource_title": "Story about edge coloring of graph  By ko_osaga",
        "resource_comments": "check until \"Bipartite Graphs\""
      },
      {
        "resource_comments": "",
        "resource_title": "Vizing's theorem | Wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Vizing%27s_theorem"
      }
    ],
    "topic_id": "edge_coloring_of_simple_graph",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Edge%20Coloring%20Simple%20Graph.cpp"
    ]
  },
  "edit_distance": {
    "created_at": {
      "seconds": 1714730480,
      "nanoseconds": 989000000
    },
    "is_data_complete": true,
    "resources": [
      {
        "resource_url": "https://www.geeksforgeeks.org/edit-distance-dp-5/",
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Edit Distance | Geeks for Geeks"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/8076",
        "resource_comments": "",
        "resource_title": "Printing path in Edit Distance "
      }
    ],
    "template_codes": [],
    "topic_id": "edit_distance",
    "completion_count": 20
  },
  "educational_counting_problems": {
    "template_codes": [],
    "topic_id": "educational_counting_problems",
    "resources": [],
    "completion_count": 1,
    "created_at": {
      "seconds": 1713662045,
      "nanoseconds": 846000000
    }
  },
  "eppsteins_algorithm": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Eppsteins%20Algorithm.cpp"
    ],
    "problem_order": [
      "yosupo_k_shortest_walk",
      "acmsguru_99999314",
      "baekjoon_19133",
      "baekjoon_14166",
      "baekjoon_19616",
      "cf_gym_102979l"
    ],
    "is_data_complete": true,
    "topic_id": "eppsteins_algorithm",
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/102085",
        "resource_title": "[Tutorial] k shortest paths and Eppstein's algorithm  By meooow",
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "resource_url": "https://qiita.com/hotman78/items/42534a01c4bd05ed5e1e",
        "is_starred": false,
        "resource_comments": "",
        "resource_title": "K-最短路をO((V+E)logV+KlogK)で！？Eppstein's Algorithmのわかりやすい解説！！！【C++実装つき】By hotman78"
      }
    ],
    "created_at": {
      "seconds": 1714047509,
      "nanoseconds": 652000000
    }
  },
  "erdos_gallai_theorem": {
    "created_at": {
      "seconds": 1714112012,
      "nanoseconds": 800000000
    },
    "template_codes": [],
    "topic_id": "erdos_gallai_theorem",
    "resources": [
      {
        "resource_url": "https://en.wikipedia.org/wiki/Erd%C5%91s%E2%80%93Gallai_theorem",
        "resource_title": "Erdős–Gallai theorem | Wiki",
        "resource_comments": ""
      }
    ]
  },
  "ett": {
    "completion_count": 1,
    "topic_id": "ett",
    "created_at": {
      "seconds": 1713764185,
      "nanoseconds": 647000000
    },
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "On Euler tour trees by ifsmirnov",
        "resource_url": "https://codeforces.com/blog/entry/18369"
      },
      {
        "resource_title": "A Basic Exploration of Dynamic Trees | Zhiao Huang and Kirito Feng",
        "is_starred": true,
        "resource_comments": "Check DFS Tour and Euler Tour Trees",
        "resource_url": "https://www.overleaf.com/project/5cd4ea03d299a86710788575"
      },
      {
        "resource_url": "https://arxiv.org/pdf/1502.05292.pdf",
        "resource_title": "Dynamic subtree queries revisited: the Depth First Tour Tree | Paper by Gabriele Farina and Luigi Laura",
        "resource_comments": ""
      }
    ],
    "template_codes": [],
    "is_data_complete": true
  },
  "euclidean_algorithm": {
    "completion_count": 40,
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714211661,
      "nanoseconds": 264000000
    },
    "topic_id": "euclidean_algorithm",
    "resources": [
      {
        "resource_title": "Euclidean algorithm for computing the greatest common divisor | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/algebra/euclid-algorithm.html",
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/48481",
        "resource_comments": "",
        "resource_title": "Euclid's Algorithm  By ebanner"
      }
    ],
    "template_codes": [
      "https://cp-algorithms.com/algebra/euclid-algorithm.html#implementation"
    ]
  },
  "euclidean_geometry": {
    "completion_count": 12,
    "template_codes": [],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714827499,
      "nanoseconds": 579000000
    },
    "problem_order": [
      "uva_11854",
      "uva_11936",
      "uva_12578",
      "lightoj_1022",
      "uva_11455",
      "uva_10221",
      "uva_476",
      "uva_477",
      "uva_11909",
      "uva_11579",
      "lightoj_1043",
      "lightoj_1062",
      "spoj_circle_e",
      "uva_1388",
      "uva_11479",
      "uva_10347",
      "lightoj_1178",
      "uva_10195",
      "lightoj_how_cow",
      "lightoj_1305",
      "lightoj_juice_in_the_glass",
      "spoj_unir",
      "lightoj_calm_down",
      "lightoj_olympics",
      "gym_102267h",
      "uva_10991",
      "uva_10283",
      "uva_10432",
      "lightoj_1331",
      "lightoj_1433",
      "uva_10466",
      "uva_10287",
      "toph_weird_cake",
      "toph_i_scream_you_scream",
      "toph_hexagonal_packing",
      "lightoj_parallelogram_counting",
      "lightoj_expanding_rods",
      "lightoj_intersection_of_cubes",
      "lightoj_kingdom_division",
      "lightoj_overtake",
      "uva_10574",
      "lightoj_pair_of_touching_circles",
      "lightoj_trapezium_drawing"
    ],
    "topic_id": "euclidean_geometry",
    "resources": []
  },
  "euclidean_mst": {
    "topic_id": "euclidean_mst",
    "completion_count": 1,
    "created_at": {
      "seconds": 1714037368,
      "nanoseconds": 649000000
    },
    "is_data_complete": true,
    "template_codes": [],
    "resources": [
      {
        "resource_title": "[Tutorial] Voronoi Diagram and Delaunay Triangulation in O(n log n) with Fortune's Algorithm | Monogon",
        "resource_url": "https://codeforces.com/blog/entry/85638",
        "resource_comments": "Note that The Euclidean minimum spanning tree is a subset of Delaunay edges. Read the whole blog to understand better."
      },
      {
        "resource_title": "Euclidean minimum spanning tree | Wiki",
        "resource_comments": "",
        "resource_url": "https://en.wikipedia.org/wiki/Euclidean_minimum_spanning_tree"
      }
    ]
  },
  "euler_tour_technique": {
    "problem_order": [
      "cses_1137",
      "cf_gym_102694e",
      "codeforces_781c",
      "cf_gym_102694f",
      "codeforces_620e",
      "coci20_klasika",
      "codeforces_208e"
    ],
    "completion_count": 54,
    "created_at": {
      "seconds": 1713951672,
      "nanoseconds": 81000000
    },
    "topic_id": "euler_tour_technique",
    "resources": [
      {
        "resource_url": "https://usaco.guide/gold/tree-euler?lang=cpp",
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Euler Tour Technique | USACO Guide"
      },
      {
        "resource_comments": "check starting from 25:00",
        "is_starred": true,
        "resource_url": "https://youtu.be/MOy4UDjN8DM?t=1504&si=HhXhEzFVoJO9t7KV",
        "is_video_type": true,
        "resource_title": "AlgorithmsThread 8: Tree Basics"
      },
      {
        "resource_comments": "",
        "resource_url": "https://usaco.guide/CPH.pdf#page=174",
        "is_starred": true,
        "resource_title": "18.2 - Subtrees & Paths | CPH"
      },
      {
        "is_video_type": true,
        "resource_title": "L01 : Euler Tour Technique or Tree Flattening | Queries On Tree | CodeNCode",
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/watch?v=AsXUVGh6WKI"
      },
      {
        "resource_comments": "",
        "resource_url": "https://www.geeksforgeeks.org/euler-tour-tree/",
        "resource_title": "Euler Tour of Tree | Geeks For Geeks"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/48417",
        "resource_title": "12. Euler tour magic, General ideas | adamant",
        "is_starred": true,
        "resource_comments": ""
      }
    ],
    "is_data_complete": true,
    "template_codes": []
  },
  "eulerian_path_and_cycle": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Euler%20Path%20Directed.cpp",
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Euler%20Path%20Undirected.cpp"
    ],
    "resources": [
      {
        "resource_url": "https://usaco.guide/adv/eulerian-tours?lang=cpp",
        "is_starred": true,
        "resource_title": "Eulerian Tours | USACO Guide",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_title": "19.1 Eulerian paths | CPH",
        "is_starred": true,
        "resource_url": "https://usaco.guide/CPH.pdf#page=183"
      },
      {
        "is_starred": true,
        "resource_url": "https://www.youtube.com/watch?v=8MpoO2zA2l4",
        "resource_title": "Eulerian Path/Circuit algorithm (Hierholzer's algorithm) | Graph Theory | WilliamFiset",
        "is_video_type": true,
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_comments": "check until \"Counting Eulerian circuits\"",
        "resource_title": "Eulerian path | wikiwand",
        "resource_url": "https://www.wikiwand.com/en/Eulerian_path#/Hierholzer.27s_algorithm"
      }
    ],
    "completion_count": 16,
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714099281,
      "nanoseconds": 230000000
    },
    "topic_id": "eulerian_path_and_cycle",
    "problem_order": [
      "yosupo_eulerian_trail_directed",
      "yosupo_eulerian_trail_undirected",
      "cses_1693",
      "codeforces_508d",
      "cses_1691",
      "codeforces_723e",
      "boi14_postmen",
      "spoj_words1",
      "codeforces_21d",
      "csacademy_matching_substrings",
      "codeforces_1361c",
      "codeforces_1981d",
      "baekjoon_13973",
      "codeforces_788b",
      "toph_red_blue_graph",
      "codeforces_528c"
    ]
  },
  "eulers_totient_function": {
    "topic_id": "eulers_totient_function",
    "resources": [
      {
        "resource_url": "https://cp-algorithms.com/algebra/phi-function.html",
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Euler's totient function | CP Algorithms"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/106851",
        "resource_comments": "ignore \"Chinese Remainder Theorem\"",
        "resource_title": "[Tutorial] Euler's phi function, its properties, and how to compute it  By kamilszymczak1"
      }
    ],
    "completion_count": 33,
    "created_at": {
      "seconds": 1714197678,
      "nanoseconds": 614000000
    },
    "problem_order": [
      "spoj_etf",
      "lightoj_mathematically_hard",
      "uva_3856",
      "spoj_tip1",
      "uva_1931",
      "uva_1120",
      "kattis_farey",
      "uva_1240",
      "spoj_dcepca03",
      "spoj_najpwg",
      "codeforces_1514c",
      "kattis_coprimeintegers",
      "cses_2417",
      "poj_2478",
      "codechef_smplsum",
      "spoj_gcdex",
      "spoj_lcmsum",
      "lightoj_lcm_extreme",
      "uva_4878",
      "codechef_cozie",
      "spoj_dcepc12g",
      "leetcode_super_pow",
      "codeforces_776e",
      "codeforces_1717e",
      "codeforces_645f",
      "timus_1673",
      "spoj_invphi",
      "codeforces_1797e",
      "codeforces_1114f",
      "codeforces_594d"
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Phi%20Function.cpp"
    ],
    "is_data_complete": true
  },
  "exchange_arguments": {
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/63533",
        "is_starred": true,
        "resource_comments": "",
        "is_video_type": true,
        "resource_title": "Lecture #3 — Exchange arguments (sorting with dp)  By Errichto"
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=Oq1seKJvfQU",
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Episode 14 - Exchange Arguments  Algorithms Live!",
        "is_video_type": true
      }
    ],
    "created_at": {
      "seconds": 1715260390,
      "nanoseconds": 975000000
    },
    "is_data_complete": true,
    "template_codes": [],
    "completion_count": 10,
    "problem_order": [
      "codeforces_632c",
      "cf_gym_101149b",
      "kattis_piecesofparentheses",
      "cf_gym_100113k",
      "cf_gym_100026j",
      "kattis_altruisticamphibians",
      "cf_gym_100971i",
      "toph_fuel_finance"
    ],
    "topic_id": "exchange_arguments"
  },
  "expected_occurrence_time_as_substring": {
    "topic_id": "expected_occurrence_time_as_substring",
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/98808",
        "resource_title": "[Tutorial] Expected number of coin flips required to achieve a given string  By gabrielwu",
        "resource_comments": ""
      },
      {
        "resource_title": "Editorial of Problem R2 06: Monkey at the Keyboard (ID: 1677)",
        "resource_url": "https://bubblecup.org/Content/Media/Booklet2011.pdf",
        "resource_comments": "check page 78-80",
        "is_starred": true
      },
      {
        "resource_title": "Disucussion by aid",
        "resource_url": "https://codeforces.com/blog/entry/49331#comment-336565",
        "resource_comments": ""
      }
    ],
    "created_at": {
      "seconds": 1714364456,
      "nanoseconds": 464000000
    },
    "template_codes": [],
    "is_data_complete": true
  },
  "expected_value_powers_technique": {
    "created_at": {
      "seconds": 1714503102,
      "nanoseconds": 739000000
    },
    "is_data_complete": true,
    "resources": [
      {
        "resource_title": "Sums and Expected Value — part 2  By Errichto",
        "resource_comments": "",
        "is_video_type": true,
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/62792"
      }
    ],
    "completion_count": 5,
    "topic_id": "expected_value_powers_technique",
    "template_codes": []
  },
  "expression_parsing": {
    "completion_count": 4,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Miscellaneous/Expression%20Parsing.cpp"
    ],
    "resources": [
      {
        "resource_url": "https://cp-algorithms.com/string/expression_parsing.html",
        "resource_comments": "",
        "resource_title": "Expression parsing | CP Algorithms"
      }
    ],
    "topic_id": "expression_parsing",
    "created_at": {
      "seconds": 1714651289,
      "nanoseconds": 864000000
    },
    "is_data_complete": true
  },
  "extended_euclid": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Extended%20Euclid.cpp"
    ],
    "is_data_complete": true,
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://cp-algorithms.com/algebra/extended-euclid-algorithm.html",
        "resource_title": "Extended Euclidean Algorithm | CP Algorithms",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/79167",
        "is_starred": true,
        "resource_title": "Extended Euclidean Algorithm | ax + by + cz = gcd(a, b, c)"
      },
      {
        "resource_title": "Extended Euclidean Algorithm | USACO Guide",
        "resource_url": "https://usaco.guide/adv/extend-euclid?lang=cpp",
        "resource_comments": "check until \"Application - Chinese Remainder Theorem\"",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "resource_url": "https://www.cut-the-knot.org/blue/LamesTheorem.shtml",
        "resource_title": "Lamé's Theorem | Cut The Knot"
      },
      {
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/algebra/module-inverse.html",
        "resource_title": "Modular Multiplicative Inverse | CP Algorithms"
      }
    ],
    "created_at": {
      "seconds": 1714211839,
      "nanoseconds": 260000000
    },
    "topic_id": "extended_euclid",
    "completion_count": 30
  },
  "extended_li_chao_tree": {
    "created_at": {
      "seconds": 1714685561,
      "nanoseconds": 435000000
    },
    "template_codes": [
      "https://codeforces.com/blog/entry/86731"
    ],
    "topic_id": "extended_li_chao_tree",
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/86731",
        "is_starred": true,
        "resource_title": "[Tutorial] Li Chao Tree Extended  By rama_pang"
      }
    ],
    "problem_order": [
      "tlx_troc_13_div_1d",
      "noi20_progression",
      "atcoder_abc177_f",
      "training_statement"
    ],
    "is_data_complete": true
  },
  "extreme_vertex_2d": {
    "topic_id": "extreme_vertex_2d",
    "resources": [
      {
        "resource_title": "5. Extreme points",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/48868",
        "is_starred": true
      }
    ],
    "created_at": {
      "seconds": 1714762082,
      "nanoseconds": 107000000
    },
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L715-L740"
    ]
  },
  "factoradic_number_system": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Factoradic%20Number%20System.cpp"
    ],
    "is_data_complete": true,
    "resources": [
      {
        "resource_url": "https://en.wikipedia.org/wiki/Factorial_number_system",
        "resource_title": "Factorial number system | Wiki",
        "resource_comments": ""
      }
    ],
    "topic_id": "factoradic_number_system",
    "created_at": {
      "seconds": 1714315072,
      "nanoseconds": 958000000
    },
    "completion_count": 1
  },
  "fast_input_output": {
    "created_at": {
      "seconds": 1715080344,
      "nanoseconds": 913000000
    },
    "resources": [
      {
        "is_video_type": true,
        "resource_comments": "",
        "resource_title": "Fast Input/Output | G&G",
        "resource_url": "https://www.youtube.com/watch?v=DhPMRStOU7o",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "resource_url": "https://youtu.be/aNF4DEluWnI?si=hzmaGxIlAl1Pb3ue",
        "is_video_type": true,
        "resource_title": "Fast input output "
      },
      {
        "resource_title": "Fast Input & Output | USACO Guide",
        "resource_url": "https://usaco.guide/general/fast-io?lang=cpp",
        "resource_comments": "",
        "is_starred": true
      }
    ],
    "template_codes": [],
    "topic_id": "fast_input_output",
    "is_data_complete": true,
    "completion_count": 443
  },
  "faulhabers_formula": {
    "topic_id": "faulhabers_formula",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Faulhaber%20Formula%20Fastest.cpp"
    ],
    "completion_count": 1,
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714478445,
      "nanoseconds": 563000000
    },
    "resources": [
      {
        "resource_url": "https://en.wikipedia.org/wiki/Faulhaber%27s_formula",
        "resource_comments": "",
        "resource_title": "Faulhaber's formula | Wiki",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "resource_url": "https://en.wikipedia.org/wiki/Bernoulli_number",
        "resource_title": "Bernoulli number | Wiki"
      }
    ],
    "problem_order": [
      "hackerrank_demidenko_black_hole",
      "codechef_sersum",
      "hackerrank_coprime_power_sum"
    ]
  },
  "fermats_little_theorem": {
    "resources": [
      {
        "resource_title": "Fermat's little theorem | Wiki",
        "resource_comments": "check the definiton",
        "resource_url": "https://en.wikipedia.org/wiki/Fermat's_little_theorem"
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://t5k.org/notes/proofs/FermatsLittleTheorem.html",
        "resource_title": "Proof of Fermat's Little Theorem By Chris Caldwell"
      },
      {
        "resource_url": "https://forthright48.com/modular-multiplicative-inverse/",
        "resource_title": "Modular Multiplicative Inverse | forthright48",
        "is_starred": true,
        "resource_comments": "check until \"Using Euler’s Theorem\""
      }
    ],
    "problem_order": [
      "eolymp_9606",
      "cses_1712"
    ],
    "template_codes": [],
    "created_at": {
      "seconds": 1715168242,
      "nanoseconds": 756000000
    },
    "topic_id": "fermats_little_theorem",
    "is_data_complete": true,
    "completion_count": 83
  },
  "fft": {
    "created_at": {
      "seconds": 1714326946,
      "nanoseconds": 684000000
    },
    "topic_id": "fft",
    "completion_count": 16,
    "is_data_complete": true,
    "resources": [
      {
        "resource_title": "Multiplying polynomials | Fast Fourier Transform (FFT)",
        "is_starred": true,
        "resource_url": "https://www.cs.cmu.edu/afs/cs/academic/class/15451-s10/www/lectures/lect0423.txt",
        "resource_comments": ""
      },
      {
        "resource_url": "https://cp-algorithms.com/algebra/fft.html",
        "resource_comments": "check until \"Number theoretic transform\"",
        "resource_title": "Fast Fourier transform | CP Algorithms",
        "is_starred": true
      },
      {
        "resource_title": "Tutorial on FFT/NTT — The tough made simple. ( Part 1 )  By sidhant",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/43499",
        "is_starred": true
      },
      {
        "resource_title": "[Tutorial] FFT  By -is-this-fft-,",
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/111371"
      },
      {
        "resource_url": "https://drive.google.com/file/d/1B9BIfATnI_qL6rYiE5hY9bh20SMVmHZ7/view",
        "resource_title": "Fast Fourier Transform and Polynomials Moscow International Workshop ACM ICPC 2017 | Oleksandr Kulkov",
        "resource_comments": ""
      },
      {
        "resource_title": "The Remarkable Story Behind The Most Important Algorithm Of All Time | Veritasium",
        "resource_url": "https://www.youtube.com/watch?v=nmgFG7PUHfo",
        "is_starred": true,
        "is_video_type": true,
        "resource_comments": "history of this algo, very interesting"
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "But what is the Fourier Transform? A visual introduction | 3Blue1Brown",
        "is_video_type": true,
        "resource_url": "https://www.youtube.com/watch?v=spUNpyF58BY&t=395s"
      },
      {
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/watch?v=h7apO7q16V0",
        "is_starred": true,
        "resource_title": "The Fast Fourier Transform (FFT): Most Ingenious Algorithm Ever? | Reducible",
        "is_video_type": true
      }
    ],
    "problem_order": [
      "cses_2111",
      "spoj_polymul",
      "kattis_aplusb",
      "codeforces_632e",
      "spoj_adamatch",
      "kattis_kinversions",
      "spoj_maxmatch",
      "codechef_notd",
      "spoj_vfmul",
      "spoj_tsum",
      "codeforces_993e",
      "atcoder_agc047_c",
      "codeforces_954i",
      "codeforces_958f3",
      "codeforces_1398g",
      "cf_gym_101821f",
      "codeforces_528d",
      "codeforces_827e",
      "yosupo_frequency_table_of_tree_distance",
      "cf_gym_101991a",
      "codeforces_1845f",
      "codeforces_1334g",
      "codeforces_472g",
      "yosupo_convolution_mod_2_64",
      "kattis_tiles",
      "codeforces_1054h"
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/FFT.cpp"
    ]
  },
  "fibonacci_numbers": {
    "topic_id": "fibonacci_numbers",
    "resources": [
      {
        "resource_comments": "it would be better if you know Matrix Exponentiation",
        "resource_title": "Fibonacci Numbers | CP Algorithms",
        "is_starred": true,
        "resource_url": "https://cp-algorithms.com/algebra/fibonacci-numbers.html"
      },
      {
        "resource_title": "Fibonacci sequence | Wiki",
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://en.wikipedia.org/wiki/Fibonacci_sequence"
      },
      {
        "resource_url": "https://www.cut-the-knot.org/blue/LamesTheorem.shtml",
        "resource_title": "Lamé's Theorem | Cut The Knot",
        "resource_comments": ""
      },
      {
        "resource_title": "How to check if a given number is Fibonacci number? | Geeks for Geeks",
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://www.geeksforgeeks.org/check-number-fibonacci-number/"
      },
      {
        "resource_title": "An amazing way to calculate 10^18-th fibonacci number using 25 lines of code.  By kien_coi_1997",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/14516",
        "is_starred": true
      }
    ],
    "completion_count": 19,
    "problem_order": [
      "spoj_fibez",
      "hackerrank_is_fibo",
      "cses_1722",
      "lightoj_number_sequence",
      "spoj_fibosum",
      "hackerrank_euler002",
      "spoj_main74",
      "dmoj_fibonacci2"
    ],
    "created_at": {
      "seconds": 1714311012,
      "nanoseconds": 613000000
    },
    "template_codes": [],
    "is_data_complete": true
  },
  "finite_field_arithmetic_binary": {
    "created_at": {
      "seconds": 1714479911,
      "nanoseconds": 10000000
    },
    "resources": [
      {
        "resource_url": "https://en.wikipedia.org/wiki/Finite_field_arithmetic",
        "resource_comments": "",
        "resource_title": "Finite field arithmetic | Wiki"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Finite%20Field%20Arithmetic%20Binary.cpp"
    ],
    "is_data_complete": true,
    "topic_id": "finite_field_arithmetic_binary"
  },
  "floor_sum_of_arithmetic_progression": {
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Floor%20Sum%20of%20%20Arithmetic%20Progressions.cpp"
    ],
    "created_at": {
      "seconds": 1714310640,
      "nanoseconds": 966000000
    },
    "resources": [
      {
        "resource_title": "Floor Sum of Arithmetic Progression and Other Variants | Asif Jawad",
        "resource_comments": "check only Problem 1",
        "is_starred": true,
        "resource_url": "https://asfjwd.github.io/2020-04-24-floor-sum-ap/"
      },
      {
        "resource_title": "类欧几里德算法 | OI Wiki",
        "resource_comments": "",
        "resource_url": "https://oi-wiki.org/math/number-theory/euclidean/"
      }
    ],
    "topic_id": "floor_sum_of_arithmetic_progression",
    "completion_count": 2
  },
  "floyd_warshall": {
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714044511,
      "nanoseconds": 692000000
    },
    "completion_count": 53,
    "resources": [
      {
        "resource_url": "https://cp-algorithms.com/graph/all-pair-shortest-path-floyd-warshall.html",
        "resource_comments": "",
        "resource_title": "Floyd-Warshall Algorithm | CP Algorithms",
        "is_starred": true
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=4NQ3HnhyNfQ",
        "is_starred": true,
        "is_video_type": true,
        "resource_comments": "",
        "resource_title": "Floyd Warshall All Pairs Shortest Path Algorithm | Graph Theory | Dynamic Programming  WilliamFiset"
      },
      {
        "resource_comments": "",
        "resource_title": "13.3 Floyd–Warshall algorithm | CPH",
        "resource_url": "https://usaco.guide/CPH.pdf#page=139"
      },
      {
        "resource_url": "https://usaco.guide/CP2.pdf#page=112",
        "is_starred": true,
        "resource_title": "4.5 - All-Pairs Shortest Paths | CP2",
        "resource_comments": ""
      }
    ],
    "problem_order": [
      "cses_1672",
      "codeforces_295b",
      "codeforces_25c",
      "spoj_socialne",
      "spoj_chicago",
      "lightoj_travel_company",
      "codeforces_33b",
      "spoj_arbitrag",
      "uva_10724",
      "codeforces_21d",
      "cf_gym_101223c",
      "lightoj_jogging_trails",
      "spoj_ingred",
      "atcoder_agc022_c"
    ],
    "topic_id": "floyd_warshall",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Floyd%20Warshall.cpp"
    ]
  },
  "ford_fulkerson_and_edmonds_karp_algorithm": {
    "topic_id": "ford_fulkerson_and_edmonds_karp_algorithm",
    "resources": [
      {
        "resource_url": "https://cp-algorithms.com/graph/edmonds_karp.html",
        "resource_comments": "",
        "resource_title": "Maximum flow - Ford-Fulkerson and Edmonds-Karp | CP Algorithms",
        "is_starred": true
      }
    ],
    "template_codes": [],
    "created_at": {
      "seconds": 1714127628,
      "nanoseconds": 669000000
    }
  },
  "four_edge_connectivity": {
    "template_codes": [],
    "created_at": {
      "seconds": 1714030621,
      "nanoseconds": 904000000
    },
    "is_data_complete": true,
    "topic_id": "four_edge_connectivity",
    "completion_count": 1,
    "resources": [
      {
        "resource_title": "Determining 4-edge-connected components in linear time | Paper by Wojciech Nadara, Mateusz Radecki, Marcin Smulewicz, Marek Sokołowski",
        "resource_comments": "",
        "resource_url": "https://arxiv.org/abs/2105.01699"
      }
    ]
  },
  "fraction_binary_search": {
    "resources": [
      {
        "resource_url": "https://cp-algorithms.com/others/stern_brocot_tree_farey_sequences.html#fraction-search-algorithm",
        "resource_title": "Fraction Search Algorithm | CP Algorithm",
        "resource_comments": "similar ideas"
      },
      {
        "resource_url": "https://codeforces.com/gym/102354/submission/69260720",
        "resource_title": "Solution by Xylofo",
        "resource_comments": ""
      },
      {
        "resource_url": "https://stackoverflow.com/questions/5440688/the-guess-the-number-game-for-arbitrary-rational-numbers",
        "resource_comments": "",
        "resource_title": "The \"guess the number\" game for arbitrary rational numbers?"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/4190",
        "resource_title": "Integer binary search and Farey series  By ifsmirnov",
        "resource_comments": ""
      }
    ],
    "created_at": {
      "seconds": 1714314094,
      "nanoseconds": 840000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Miscellaneous/Fraction%20Binary%20Search.cpp"
    ],
    "topic_id": "fraction_binary_search",
    "is_data_complete": true
  },
  "fractional_knapsack_problem": {
    "topic_id": "fractional_knapsack_problem",
    "template_codes": [],
    "completion_count": 9,
    "resources": [
      {
        "resource_url": "https://www.geeksforgeeks.org/fractional-knapsack-problem/",
        "resource_title": "Fractional Knapsack Problem | Geeks for Geeks",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_url": "https://leetcode.com/discuss/interview-question/1066692/fractional-knapsack",
        "resource_comments": "",
        "resource_title": " Fractional Knapsack | avneetsng"
      }
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714833532,
      "nanoseconds": 253000000
    }
  },
  "fracturing_search": {
    "resources": [
      {
        "resource_url": "https://usaco.guide/adv/fracturing-search?lang=cpp",
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Fracturing Search | USACO Guide"
      },
      {
        "is_starred": true,
        "is_video_type": true,
        "resource_title": "Episode 32 - Fracturing Search  Algorithms Live!",
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/watch?v=EG_HfFMM0lE"
      }
    ],
    "template_codes": [],
    "topic_id": "fracturing_search",
    "created_at": {
      "seconds": 1715203265,
      "nanoseconds": 884000000
    },
    "is_data_complete": true
  },
  "freivalds_algorithm": {
    "is_data_complete": true,
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://en.wikipedia.org/wiki/Freivalds%27_algorithm",
        "resource_comments": "",
        "resource_title": "Freivalds' algorithm | Wiki"
      },
      {
        "resource_title": "Freivalds’ algorithm for verifying Matrix Multiplication",
        "resource_url": "https://iq.opengenus.org/freivalds-algorithm/",
        "resource_comments": ""
      }
    ],
    "completion_count": 2,
    "topic_id": "freivalds_algorithm",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Freivalds%20Algorithm.cpp"
    ],
    "created_at": {
      "seconds": 1714466002,
      "nanoseconds": 548000000
    }
  },
  "frobenius_form_of_a_matrix": {
    "template_codes": [
      "https://judge.yosupo.jp/submission/183810"
    ],
    "topic_id": "frobenius_form_of_a_matrix",
    "created_at": {
      "seconds": 1714461081,
      "nanoseconds": 495000000
    },
    "is_data_complete": true,
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "A (Somehow) Simple (Randomized) Algorithm for Frobenius Form of a Matrix  By MyBotDear",
        "resource_url": "https://codeforces.com/blog/entry/124815"
      }
    ]
  },
  "functional_graphs": {
    "template_codes": [],
    "problem_order": [
      "cses_1750",
      "cses_1160",
      "cses_1751",
      "atcoder_abc357_e",
      "codeforces_1530d",
      "codeforces_1020b",
      "usaco_764",
      "codeforces_1137d",
      "usaco_1230",
      "usaco_284",
      "codeforces_702e",
      "toph_infinite_tree",
      "kattis_hobsonstrains"
    ],
    "completion_count": 12,
    "created_at": {
      "seconds": 1713945074,
      "nanoseconds": 693000000
    },
    "resources": [
      {
        "resource_url": "https://usaco.guide/silver/func-graphs?lang=cpp",
        "resource_title": "Introduction to Functional Graphs | USACO Guide",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_url": "https://usaco.guide/CPH.pdf#page=164",
        "resource_title": "16.3 Successor paths | CPH",
        "resource_comments": "also check \"Floyd’s algorithm\"  under 16.4 Cycle Detection"
      },
      {
        "resource_comments": "",
        "resource_title": "The Tortoise and the Hare (Floyd’s Algorithm) | Tu Vo",
        "resource_url": "https://medium.com/@tuvo1106/the-tortoise-and-the-hare-floyds-algorithm-87badf5f7d41"
      }
    ],
    "is_data_complete": true,
    "topic_id": "functional_graphs"
  },
  "functions": {
    "completion_count": 779,
    "problem_order": [
      "cf_group_223205a",
      "gym_287306g",
      "cf_group_223205e",
      "gym_287309l",
      "cf_group_223205c",
      "gym_287309j",
      "gym_287309m",
      "gym_287309u",
      "cf_group_223205f",
      "gym_287306y"
    ],
    "is_data_complete": true,
    "topic_id": "functions",
    "template_codes": [],
    "created_at": {
      "seconds": 1713661311,
      "nanoseconds": 919000000
    },
    "resources": [
      {
        "resource_title": "Functions | Tech With Tim",
        "resource_url": "https://www.youtube.com/watch?v=C83tPpvxIJA&list=PLzMcBGfZo4-lmGC8VW0iu6qfMHjy7gLQ3&index=20",
        "is_starred": true,
        "is_video_type": true,
        "resource_comments": ""
      },
      {
        "resource_url": "https://www.programiz.com/cpp-programming/function",
        "is_starred": true,
        "resource_title": "C++ Functions | Programiz",
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_url": "https://www.programiz.com/cpp-programming/user-defined-function-types",
        "resource_comments": "",
        "resource_title": "C++ User-defined Function Types | Programiz"
      },
      {
        "resource_title": "C++ Programming Default Arguments (Parameters) | Programiz",
        "resource_url": "https://www.programiz.com/cpp-programming/default-argument",
        "resource_comments": ""
      },
      {
        "resource_title": "C++ Function Overloading | Programiz",
        "resource_url": "https://www.programiz.com/cpp-programming/function-overloading",
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://www.geeksforgeeks.org/top-10-most-used-inbuilt-c-functions-for-competitive-programming/",
        "resource_title": "Top 10 Most Used Inbuilt C++ functions for Competitive Programming | Geeks for Geeks"
      }
    ]
  },
  "fwht": {
    "problem_order": [
      "csacademy_maxor",
      "csacademy_and_closure",
      "uva_13277",
      "csacademy_random_nim_generator",
      "csacademy_token_grid",
      "codeforces_1218d",
      "codeforces_914g",
      "cf_gym_102978g",
      "cf_gym_103202m",
      "codeforces_1906k",
      "uoj_310",
      "codechef_mdswin",
      "codechef_xortreeh"
    ],
    "completion_count": 8,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/FWHT.cpp",
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/FWHT%20in%20Ternary%20Base.cpp",
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/FWHT%20in%20Any%20Base.cpp"
    ],
    "created_at": {
      "seconds": 1714329516,
      "nanoseconds": 943000000
    },
    "resources": [
      {
        "resource_url": "https://danglingpointer.fun/2020/08/07/FWHT/",
        "resource_title": "Fast Walsh-Hadamard Transform in Competitive Programming | Chengyuan Ma's Blog",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/71899",
        "resource_title": "Fast Walsh Hadamard Transforms and it's inner workings  By upobir",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "resource_title": "Fast Fourier Transform and variations of it | by atatomir",
        "resource_url": "https://csacademy.com/blog/fast-fourier-transform-and-variations-of-it"
      },
      {
        "resource_comments": "",
        "resource_title": "15. xor-, and-, or-convolutions | General ideas  By adamant",
        "resource_url": "https://codeforces.com/blog/entry/48417"
      },
      {
        "resource_title": "logical_convolutions.pdf | ivanzuki",
        "resource_url": "https://github.com/IvanAli/logical-convolutions/blob/main/logical_convolutions.pdf",
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "resource_comments": "intuitive approach",
        "resource_url": "https://codeforces.com/blog/entry/115438",
        "is_starred": true,
        "resource_title": "OR Convolution for Common People  By ko_osaga"
      },
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/115438?#comment-1025876",
        "is_starred": true,
        "resource_title": "Intuitive Meaning of All Convolutions | Comment by pajenegod"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/96003",
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Generalized FWHT: How I realized I did not understand FWHT  By errorgorn"
      },
      {
        "resource_comments": "check the editorial and all comments ",
        "resource_url": "https://discuss.codechef.com/t/mdswin-editorial/44120",
        "resource_title": "Ternary FWHT"
      },
      {
        "resource_comments": "check the editorial",
        "resource_url": "https://discuss.codechef.com/t/xortreeh-editorial/17019",
        "resource_title": "FWHT in Any Base"
      }
    ],
    "is_data_complete": true,
    "topic_id": "fwht"
  },
  "gamblers_ruin": {
    "template_codes": [],
    "problem_order": [
      "topcoder_1849",
      "topcoder_13643"
    ],
    "created_at": {
      "seconds": 1714507937,
      "nanoseconds": 927000000
    },
    "completion_count": 1,
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://en.wikipedia.org/wiki/Gambler%27s_ruin",
        "resource_title": "Gambler's ruin | Wiki",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "resource_url": "https://www.columbia.edu/~ks20/FE-Notes/4700-07-Notes-GR.pdf",
        "resource_title": "Gambler’s Ruin Problem | columbia.edu"
      },
      {
        "resource_url": "https://web.mit.edu/neboat/Public/6.042/randomwalks.pdf",
        "resource_title": "Random Walks | MIT",
        "resource_comments": ""
      }
    ],
    "topic_id": "gamblers_ruin",
    "is_data_complete": true
  },
  "games_on_arbitrary_graphs": {
    "template_codes": [],
    "resources": [
      {
        "resource_title": "Games on arbitrary graphs | CP Algorithms",
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/game_theory/games_on_graphs.html",
        "is_starred": true
      }
    ],
    "completion_count": 2,
    "topic_id": "games_on_arbitrary_graphs",
    "created_at": {
      "seconds": 1714740207,
      "nanoseconds": 854000000
    },
    "is_data_complete": true
  },
  "gaussian_elimination": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Gaussian%20Elimination.cpp",
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Gaussian%20Elimination%20Modular.cpp"
    ],
    "is_data_complete": true,
    "resources": [
      {
        "resource_comments": "check all Week 1 lectures",
        "resource_title": "Math 2331 - 17040: Linear Algebra | Dr. Jiwen He",
        "is_starred": true,
        "resource_url": "https://www.math.uh.edu/~jiwenhe/math2331/index.htm"
      },
      {
        "is_starred": true,
        "resource_url": "https://cp-algorithms.com/linear_algebra/linear-system-gauss.html",
        "resource_title": "Gauss method for solving system of linear equations | CP Algorithms",
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_url": "https://cp-algorithms.com/linear_algebra/rank-matrix.html",
        "resource_title": "Finding the rank of a matrix | CP Algorithms",
        "resource_comments": ""
      },
      {
        "resource_title": "2 Special cases of Gaussian [Tutorial]  By MazzForces",
        "resource_url": "https://codeforces.com/blog/entry/60003",
        "resource_comments": "check until problem 2"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/65787",
        "resource_comments": "",
        "resource_title": "The Fear of Gaussian Elimination  By godmar"
      }
    ],
    "completion_count": 9,
    "created_at": {
      "seconds": 1714466817,
      "nanoseconds": 90000000
    },
    "topic_id": "gaussian_elimination",
    "problem_order": [
      "yosupo_system_of_linear_equations",
      "lightoj_graph_coloring",
      "spoj_gs",
      "codechef_knghtmov",
      "timus_1042",
      "uva_4775",
      "timus_1766",
      "timus_1266",
      "yosupo_matrix_rank",
      "timus_1041",
      "codeforces_1411g",
      "kattis_costofliving",
      "cf_gym_102129d",
      "codechef_cheflst",
      "codeforces_963e"
    ]
  },
  "gaussian_elimination_modulo_2": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Gaussian%20Elimination%20Modulo%202.cpp"
    ],
    "is_data_complete": true,
    "completion_count": 6,
    "problem_order": [
      "lightoj_subsets_forming_perfect_squar",
      "yosupo_matrix_rank_mod_2",
      "cf_gym_101908m"
    ],
    "created_at": {
      "seconds": 1714467371,
      "nanoseconds": 915000000
    },
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/123081",
        "resource_title": "Gaussian elimination over GF(2)",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Solving modular SLAE | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/linear_algebra/linear-system-gauss.html#solving-modular-slae"
      }
    ],
    "topic_id": "gaussian_elimination_modulo_2"
  },
  "gausss_eureka_theorem": {
    "resources": [
      {
        "resource_url": "https://proofwiki.org/wiki/Integer_is_Sum_of_Three_Triangular_Numbers",
        "resource_comments": "",
        "resource_title": "Integer is Sum of Three Triangular Numbers | Wiki"
      }
    ],
    "created_at": {
      "seconds": 1714477948,
      "nanoseconds": 478000000
    },
    "topic_id": "gausss_eureka_theorem",
    "is_data_complete": true,
    "completion_count": 3,
    "template_codes": []
  },
  "gcd_and_lcm": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Basics/GCD%20and%20LCM.cpp"
    ],
    "problem_order": [
      "csacademy_gcd",
      "hackerrank_si_lcm_and_hcf",
      "codeforces_1203c",
      "codeforces_1765m",
      "codeforces_1285c",
      "codeforces_1536c"
    ],
    "is_data_complete": true,
    "topic_id": "gcd_and_lcm",
    "created_at": {
      "seconds": 1715080644,
      "nanoseconds": 927000000
    },
    "completion_count": 289,
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "GCD of Two Numbers in C++ | Geeks for Geeks",
        "resource_url": "https://www.geeksforgeeks.org/gcd-in-cpp/"
      },
      {
        "resource_url": "https://www.programiz.com/cpp-programming/examples/lcm",
        "resource_comments": "",
        "resource_title": "C++ Program to Find LCM | Programiz",
        "is_starred": true
      }
    ]
  },
  "gcd_convolution": {
    "created_at": {
      "seconds": 1714380585,
      "nanoseconds": 688000000
    },
    "template_codes": [
      "https://judge.yosupo.jp/submission/153821"
    ],
    "completion_count": 4,
    "is_data_complete": true,
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/112346",
        "resource_comments": "",
        "resource_title": "[Tutorial] GCD Convolution  By szaranczuk"
      },
      {
        "resource_comments": "",
        "resource_title": "[Tutorial] Zeta, Mobius Transform to AND, OR, GCD Convolution  By jinhan814",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/119082"
      }
    ],
    "topic_id": "gcd_convolution"
  },
  "gcd_determinant": {
    "is_data_complete": true,
    "created_at": {
      "seconds": 1715255887,
      "nanoseconds": 241000000
    },
    "resources": [
      {
        "resource_url": "https://core.ac.uk/download/pdf/82649337.pdf",
        "resource_comments": "",
        "resource_title": "The Determinants of GCD Matrices | Zhongshan Li ",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "resource_url": "https://www.sciencedirect.com/science/article/pii/S0024379596001929",
        "resource_title": "On Smith's determinant"
      }
    ],
    "topic_id": "gcd_determinant",
    "template_codes": []
  },
  "generalized_floor_sum_of_arithmetic_progression": {
    "topic_id": "generalized_floor_sum_of_arithmetic_progression",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Generalized%20Floor%20Sum%20of%20Arithmetic%20Progressions.cpp"
    ],
    "created_at": {
      "seconds": 1714310741,
      "nanoseconds": 851000000
    },
    "is_data_complete": true,
    "resources": [
      {
        "is_starred": true,
        "resource_title": "Floor Sum of Arithmetic Progression and Other Variants | Asif Jawad",
        "resource_url": "https://asfjwd.github.io/2020-04-24-floor-sum-ap/",
        "resource_comments": "check starting from Problem 2"
      }
    ]
  },
  "generating_function_of_a_linear_recurrence": {
    "problem_order": [
      "codedrills_perfect_strings",
      "cf_gym_102268e"
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Generating%20Function%20of%20a%20Linear%20Recurrence.cpp"
    ],
    "is_data_complete": true,
    "completion_count": 1,
    "created_at": {
      "seconds": 1714461690,
      "nanoseconds": 357000000
    },
    "resources": [
      {
        "is_starred": true,
        "resource_title": "GENERATING FUNCTIONS AND RECURRENCE RELATIONS",
        "resource_comments": "",
        "resource_url": "https://www.math.cmu.edu/~af1p/Teaching/Combinatorics/Slides/Generating-Functions.pdf"
      },
      {
        "resource_title": "Linear Recurrences and Rational Generating Functions",
        "resource_url": "https://websites.umich.edu/~speyer/LinearRecurrences.pdf",
        "resource_comments": ""
      }
    ],
    "topic_id": "generating_function_of_a_linear_recurrence"
  },
  "generating_functions": {
    "topic_id": "generating_functions",
    "created_at": {
      "seconds": 1714362803,
      "nanoseconds": 233000000
    },
    "is_data_complete": true,
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/77468",
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "[Tutorial] Generating Functions in Competitive Programming (Part 1)  By zscoder"
      },
      {
        "resource_url": "https://cp-algorithms.com/algebra/polynomial.html",
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Operations on polynomials and series | CP Algorithms"
      },
      {
        "resource_comments": "check until \"Lagrange Inversion Formula\"",
        "resource_url": "https://codeforces.com/blog/entry/77551",
        "resource_title": "[Tutorial] Generating Functions in Competitive Programming (Part 2)  By zscoder",
        "is_starred": true
      },
      {
        "resource_title": "A problem collection of ODE and differential technique  By jqdai0815",
        "resource_url": "https://codeforces.com/blog/entry/76447",
        "resource_comments": "hard!"
      },
      {
        "resource_title": "Exponential formula | Wiki",
        "resource_comments": "",
        "resource_url": "https://en.wikipedia.org/wiki/Exponential_formula"
      },
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/117237",
        "is_starred": true,
        "resource_title": "Useful substitutions with generating functions  By adamant"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/112550",
        "resource_title": "Solution to ARC154F Dice Game -- Generating functions and polynomials  By Bring",
        "resource_comments": ""
      }
    ],
    "problem_order": [
      "hackerrank_k_inversion_permutations",
      "atcoder_agc005_f",
      "codechef_perfsqrs",
      "codechef_weirdmul",
      "codeforces_623e",
      "codechef_rnbwroad",
      "atcoder_arc154_f",
      "codeforces_438e",
      "uoj_50",
      "loj_6703",
      "cf_gym_280379a",
      "cf_group_446227i",
      "codeforces_392c",
      "atcoder_s8pc_3_g",
      "codechef_qpolysum",
      "codeforces_1349f2",
      "cf_gym_280379b",
      "loj_6696",
      "uoj_514",
      "loj_3120"
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Polynomial.cpp"
    ],
    "completion_count": 3
  },
  "generating_points_without_collinear_triplets": {
    "created_at": {
      "seconds": 1714826312,
      "nanoseconds": 895000000
    },
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://cs.stackexchange.com/questions/95476/given-a-rxc-grid-how-to-generate-n-2d-points-randomly-such-that-no-3-points-are/95477#95477",
        "resource_title": "Given a RxC grid, how to generate N 2D points randomly such that no 3 points are collinear?"
      }
    ],
    "template_codes": [],
    "topic_id": "generating_points_without_collinear_triplets"
  },
  "geometric_median_2d": {
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L600-L632"
    ],
    "resources": [
      {
        "resource_title": "Geometric median | Wiki",
        "resource_comments": "",
        "resource_url": "https://en.wikipedia.org/wiki/Geometric_median"
      },
      {
        "resource_title": "On finding geometric median with ternary searches  By shortHorse",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/71906"
      }
    ],
    "created_at": {
      "seconds": 1714761905,
      "nanoseconds": 401000000
    },
    "topic_id": "geometric_median_2d",
    "completion_count": 1
  },
  "gomory_hu_tree": {
    "resources": [
      {
        "resource_url": "https://en.wikipedia.org/wiki/Gomory%E2%80%93Hu_tree",
        "resource_comments": "",
        "resource_title": "Gomory–Hu tree | Wiki"
      }
    ],
    "created_at": {
      "seconds": 1714132425,
      "nanoseconds": 686000000
    },
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Gomory%20Hu%20Tree.cpp"
    ],
    "topic_id": "gomory_hu_tree"
  },
  "gomory_hu_tree_of_a_planar_graph": {
    "is_data_complete": true,
    "topic_id": "gomory_hu_tree_of_a_planar_graph",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Gomory%20Hu%20Tree%20of%20Planar%20Graph.cpp"
    ],
    "resources": [],
    "created_at": {
      "seconds": 1714132644,
      "nanoseconds": 957000000
    }
  },
  "gp_hash_table": {
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/60737",
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "C++ STL: Order of magnitude faster hash tables with Policy Based Data Structures By Chilli"
      },
      {
        "resource_comments": "",
        "resource_title": "Hashmaps | USACO Guide",
        "resource_url": "https://usaco.guide/gold/hashmaps?lang=cpp",
        "is_starred": true
      }
    ],
    "problem_order": [
      "cses_1640",
      "codeforces_264c",
      "codeforces_505c"
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/GP%20Hash%20Table.cpp"
    ],
    "is_data_complete": true,
    "completion_count": 21,
    "created_at": {
      "seconds": 1713819082,
      "nanoseconds": 437000000
    },
    "topic_id": "gp_hash_table"
  },
  "graph_representations": {
    "is_data_complete": true,
    "topic_id": "graph_representations",
    "completion_count": 121,
    "resources": [
      {
        "resource_title": "A Gentle Introduction To Graph Theory | Vaidehi Joshi",
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://medium.com/basecs/a-gentle-introduction-to-graph-theory-77969829ead8"
      },
      {
        "resource_comments": "",
        "resource_title": "Introduction to Graph Theory: A Computer Science Perspective |  Reducible",
        "resource_url": "https://www.youtube.com/watch?v=LFKZLXVO-Dg",
        "is_video_type": true
      },
      {
        "resource_title": "Graph Theory Introduction  WilliamFiset",
        "resource_comments": "",
        "is_video_type": true,
        "resource_url": "https://www.youtube.com/watch?v=eQA-m22wjTQ",
        "is_starred": true
      },
      {
        "resource_title": "Chapter 11 Basics of graphs | CPH",
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://usaco.guide/CPH.pdf#page=119"
      },
      {
        "resource_title": "Introduction to graph theory | CSAcademy",
        "resource_comments": "",
        "resource_url": "https://csacademy.com/lesson/introduction_to_graphs"
      },
      {
        "resource_url": "https://csacademy.com/lesson/graph_representation",
        "resource_comments": "",
        "resource_title": "Graph representation | CSAcademy"
      },
      {
        "resource_comments": "",
        "resource_url": "https://www.hackerearth.com/practice/algorithms/graphs/graph-representation/tutorial/",
        "resource_title": "Graph Representation | HackerEarth"
      },
      {
        "resource_url": "https://www.shafaetsplanet.com/?p=143",
        "resource_comments": "",
        "resource_title": "গ্রাফ থিওরিতে হাতেখড়ি – ১ | শাফায়েতের ব্লগ",
        "is_starred": false
      },
      {
        "resource_url": "https://www.shafaetsplanet.com/?p=184",
        "resource_title": "গ্রাফ থিওরিতে হাতেখড়ি – ২ (ভ্যারিয়েবলে গ্রাফ স্টোর-১) | শাফায়েতের ব্লগ",
        "resource_comments": ""
      },
      {
        "resource_title": "গ্রাফ থিওরিতে হাতেখড়ি – ৩ (ভ্যারিয়েবলে গ্রাফ স্টোর-২) | শাফায়েতের ব্লগ",
        "resource_url": "https://www.shafaetsplanet.com/?p=211",
        "resource_comments": ""
      },
      {
        "resource_title": "Introduction to Graphs | USACO Guide",
        "resource_comments": "",
        "resource_url": "https://usaco.guide/bronze/intro-graphs?lang=cpp"
      }
    ],
    "template_codes": [],
    "created_at": {
      "seconds": 1713662312,
      "nanoseconds": 470000000
    }
  },
  "gray_code": {
    "topic_id": "gray_code",
    "completion_count": 2,
    "problem_order": [
      "cses_2205",
      "uva_2114",
      "cf_gym_100209d",
      "acmsguru_99999249"
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Miscellaneous/Gray%20Code.cpp"
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714909756,
      "nanoseconds": 445000000
    },
    "resources": [
      {
        "resource_title": "Gray code | CP Algorithms",
        "is_starred": true,
        "resource_url": "https://cp-algorithms.com/algebra/gray-code.html",
        "resource_comments": ""
      }
    ]
  },
  "greedy_algorithms": {
    "created_at": {
      "seconds": 1715078524,
      "nanoseconds": 725000000
    },
    "resources": [
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Introduction to Greedy Algorithms | USACO Guide",
        "resource_url": "https://usaco.guide/bronze/intro-greedy?lang=cpp"
      },
      {
        "resource_url": "https://usaco.guide/silver/greedy-sorting?lang=cpp",
        "resource_title": "Greedy Algorithms with Sorting | USACO Guide",
        "is_starred": true,
        "resource_comments": ""
      }
    ],
    "is_data_complete": true,
    "problem_order": [
      "gym_102951b",
      "cses_1094",
      "cses_1090",
      "cses_1630",
      "cses_1631",
      "cses_1092",
      "usaco_1012",
      "cses_1074",
      "cses_1073",
      "cses_1643",
      "codeforces_762b",
      "codeforces_1158a",
      "codeforces_1924a",
      "codeforces_1919c",
      "codeforces_1896c",
      "codeforces_1779c",
      "codeforces_1974g",
      "cses_2183"
    ],
    "template_codes": [],
    "completion_count": 97,
    "topic_id": "greedy_algorithms"
  },
  "green_hackenbush_on_trees_and_graphs": {
    "is_data_complete": true,
    "problem_order": [
      "hackerrank_deforestation",
      "atcoder_agc017_d",
      "spoj_pt07a",
      "codechef_amr16j"
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Game%20Theory/Green%20Hackenbush.cpp"
    ],
    "created_at": {
      "seconds": 1714739781,
      "nanoseconds": 221000000
    },
    "topic_id": "green_hackenbush_on_trees_and_graphs",
    "resources": [
      {
        "resource_url": "https://en.wikipedia.org/wiki/Hackenbush",
        "resource_comments": "",
        "resource_title": "Hackenbush | Wiki"
      },
      {
        "resource_title": "green-hackenbush-ww.pdf",
        "resource_url": "https://www.link.cs.cmu.edu/15859-s11/notes/green-hackenbush-ww.pdf",
        "resource_comments": ""
      },
      {
        "resource_comments": "check until \"3 Analysis of partisan games\"",
        "resource_url": "https://is.muni.cz/th/325040/fi_b/Combinatorial_games.pdf",
        "resource_title": "2.6 Analysis of Green Hackenbush"
      }
    ],
    "completion_count": 2
  },
  "grundy_number": {
    "template_codes": [],
    "problem_order": [
      "hackerrank_a_game_of_stones",
      "hackerrank_tower_breakers",
      "hackerrank_day_1_a_chessboard_game",
      "cses_1729",
      "hackerrank_day_2_nim_game",
      "cses_1730",
      "hackerrank_misere_nim",
      "cses_1098",
      "kattis_snim",
      "hackerrank_nimble",
      "hackerrank_day_2_poker_nim",
      "spoj_en",
      "codeforces_1965a",
      "hackerrank_tower_breakers_2",
      "hackerrank_tower_breakers_3",
      "hackerrank_a_chessboard_game",
      "hackerrank_digits_square_board",
      "hackerrank_fun_game",
      "hackerrank_powers_of_two_game",
      "hackerrank_final_tower_breakers",
      "cses_1099",
      "cses_2207",
      "codechef_fdivgame",
      "cses_2208",
      "uva_1482",
      "codeforces_305e",
      "atcoder_arc168_b",
      "kattis_cuboidslicinggame",
      "cf_gym_101908b",
      "spoj_matgame",
      "timus_1465",
      "cf_gym_100500e",
      "codeforces_812e",
      "codeforces_768e",
      "codeforces_850c",
      "atcoder_abc206_f",
      "codechef_astrgame",
      "atcoder_arc091_d",
      "codeforces_1312f",
      "codeforces_1451f",
      "codeforces_1149e"
    ],
    "completion_count": 17,
    "topic_id": "grundy_number",
    "is_data_complete": true,
    "resources": [
      {
        "resource_title": "Sprague-Grundy theorem. Nim | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/game_theory/sprague-grundy-nim.html",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "is_starred": true,
        "resource_title": "Sprague-Grundy theorem | e-maxx",
        "resource_comments": "this russian version contains more examples",
        "resource_url": "http://e-maxx.ru/algo/sprague_grundy"
      },
      {
        "resource_title": "The Intuition Behind NIM and Grundy Numbers in Combinatorial Game Theory  By Shisuko",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/66040",
        "resource_comments": ""
      },
      {
        "resource_url": "https://www.topcoder.com/community/competitive-programming/tutorials/algorithm-games/",
        "resource_comments": "",
        "resource_title": "ALGORITHM GAMES | Topcoder"
      },
      {
        "resource_url": "https://letuskode.blogspot.com/2014/08/grundy-numbers.html",
        "resource_comments": "",
        "resource_title": "Grundy numbers for competitive programming | Let us code"
      }
    ],
    "created_at": {
      "seconds": 1714738080,
      "nanoseconds": 3000000
    }
  },
  "hafnian_of_a_matrix": {
    "resources": [
      {
        "resource_url": "https://dl.acm.org/doi/abs/10.5555/2095116.2095189",
        "resource_title": "Counting perfect matchings as fast as Ryser",
        "resource_comments": ""
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Hafnian%20of%20a%20Matrix.cpp"
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714466472,
      "nanoseconds": 787000000
    },
    "topic_id": "hafnian_of_a_matrix"
  },
  "half_plane_intersection": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Geometry/Half%20Plane%20Intersection.cpp"
    ],
    "resources": [
      {
        "is_starred": true,
        "resource_title": "Half-plane intersection | CP Algorithms",
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/geometry/halfplane-intersection.html"
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/61710",
        "resource_title": "Blogewoosh #5 (with images from now)  By Radewoosh"
      }
    ],
    "problem_order": [
      "poj_1474",
      "cf_gym_100952j",
      "codechef_allpoly",
      "poj_2451",
      "codechef_chn02",
      "poj_3335",
      "poj_3130",
      "poj_1279",
      "uva_137",
      "kattis_domes",
      "poj_3525",
      "baekjoon_3903",
      "poj_3384",
      "poj_1755",
      "dmoj_ccoprep3p3",
      "poj_3968",
      "eolymp_11100"
    ],
    "created_at": {
      "seconds": 1714763278,
      "nanoseconds": 474000000
    },
    "is_data_complete": true,
    "topic_id": "half_plane_intersection",
    "completion_count": 1
  },
  "halls_theorem": {
    "topic_id": "halls_theorem",
    "completion_count": 3,
    "resources": [
      {
        "resource_title": "Hall's marriage theorem | Wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Hall%27s_marriage_theorem",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/105697",
        "resource_comments": "",
        "resource_title": "Hall's theorems through minimum cut in bipartite graphs  By adamant"
      },
      {
        "resource_comments": "",
        "resource_title": "TCO 2015 Round 1A DIV 1 Problem 1000 Points  By awaken",
        "resource_url": "https://codeforces.com/blog/entry/44061"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/58793?#comment-424348",
        "resource_title": "Discussion about a problem",
        "resource_comments": ""
      }
    ],
    "created_at": {
      "seconds": 1714135188,
      "nanoseconds": 699000000
    },
    "is_data_complete": true,
    "template_codes": []
  },
  "hamiltonian_path_and_cycle": {
    "topic_id": "hamiltonian_path_and_cycle",
    "resources": [
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "19.2 Hamiltonian paths | CPH",
        "resource_url": "https://usaco.guide/CPH.pdf#page=187"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/337",
        "is_starred": true,
        "resource_title": "A little bit of classics: dynamic programming over subsets and paths in graphs By Ripatti",
        "resource_comments": ""
      },
      {
        "resource_title": "Hamiltonian Paths and Cycles | Rahul Sethi",
        "is_starred": false,
        "resource_comments": "",
        "resource_url": "https://medium.com/stamatics-iit-kanpur/hamiltonian-paths-and-cycles-4f233bfbc53a"
      },
      {
        "resource_comments": "",
        "resource_url": "https://www.geeksforgeeks.org/hamiltonian-cycle/",
        "resource_title": "Hamiltonian Cycle | Geeks For Geeks"
      },
      {
        "resource_comments": "",
        "resource_title": "Nontrivial Hamiltonian Cycle on 2D grid  By Soul_Full_Of_Thunder",
        "resource_url": "https://codeforces.com/blog/entry/79788?locale=en"
      }
    ],
    "is_data_complete": true,
    "completion_count": 9,
    "created_at": {
      "seconds": 1714100527,
      "nanoseconds": 429000000
    },
    "template_codes": []
  },
  "hamiltonian_path_heuristic_algorithm": {
    "topic_id": "hamiltonian_path_heuristic_algorithm",
    "template_codes": [
      "https://codeforces.com/blog/entry/90513"
    ],
    "resources": [
      {
        "resource_title": "Heuristic algorithm for Hamiltonian path in directed graphs  By Rewinding",
        "resource_url": "https://codeforces.com/blog/entry/90513",
        "resource_comments": ""
      }
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714100249,
      "nanoseconds": 399000000
    }
  },
  "harmonic_series": {
    "is_data_complete": true,
    "created_at": {
      "seconds": 1715082308,
      "nanoseconds": 931000000
    },
    "problem_order": [
      "cses_1713",
      "spoj_divsum",
      "codeforces_1850f",
      "spoj_comdiv",
      "cf_gym_103373b"
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Basics/Harmonic%20Number%20Example.cpp"
    ],
    "topic_id": "harmonic_series",
    "resources": [
      {
        "resource_comments": "just check the definition",
        "resource_url": "https://en.wikipedia.org/wiki/Harmonic_number",
        "resource_title": "Harmonic number | Wiki"
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=4yyLfrsSXQQ",
        "resource_title": "Proof: harmonic series diverges | Series | AP Calculus BC | Khan Academy",
        "resource_comments": "understand the proof",
        "is_video_type": true
      },
      {
        "resource_title": "what is the complexity of harmonic series",
        "resource_url": "https://math.stackexchange.com/questions/2406498/what-is-the-complexity-of-harmonic-series",
        "resource_comments": "understand why the time complexity is O(n logn). Then check the template code below.",
        "is_starred": true
      }
    ],
    "completion_count": 235
  },
  "hill_climbing": {
    "created_at": {
      "seconds": 1714806614,
      "nanoseconds": 988000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%203D.cpp#L748-L766"
    ],
    "completion_count": 2,
    "topic_id": "hill_climbing",
    "is_data_complete": true,
    "resources": [
      {
        "resource_url": "https://en.wikipedia.org/wiki/Hill_climbing",
        "resource_comments": "",
        "resource_title": "Hill climbing | Wiki"
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=WGOSX6d17TU",
        "is_video_type": true,
        "resource_comments": "",
        "resource_title": "Simple approach of Smallest Circle problem: Hill Climbing  Tozan Southerpacks Redcoder",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/94437",
        "is_starred": true,
        "resource_title": "[Tutorial] Simulated Annealing in Competitive Programming  By PurpleCrayon"
      }
    ]
  },
  "hirschbergs_algorithm": {
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714731841,
      "nanoseconds": 825000000
    },
    "topic_id": "hirschbergs_algorithm",
    "template_codes": [
      "https://codeforces.com/blog/entry/57512"
    ],
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/57512",
        "resource_title": "Hirschberg's Algorithm  By KokiYmgch"
      }
    ]
  },
  "historic_information_on_segment_trees": {
    "is_data_complete": true,
    "topic_id": "historic_information_on_segment_trees",
    "completion_count": 5,
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://mzhang2021.github.io/cp-blog/historic-segtree/",
        "resource_comments": "",
        "resource_title": "Historic Information on Segment Trees | mzhang2021"
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/99895",
        "resource_title": "[Tutorial] A Bit of Math, Historic Sum, and Range Add Range Sum Binary Indexed Tree (Fenwick Tree)  By FHVirus"
      }
    ],
    "template_codes": [],
    "created_at": {
      "seconds": 1715256392,
      "nanoseconds": 18000000
    }
  },
  "hld": {
    "is_data_complete": true,
    "completion_count": 26,
    "created_at": {
      "seconds": 1713730983,
      "nanoseconds": 438000000
    },
    "topic_id": "hld",
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/graph/hld.html",
        "resource_title": "Heavy-light decomposition | CP Algorithms",
        "is_starred": true
      },
      {
        "is_video_type": true,
        "resource_title": "Hybrid Tutorial #-1: Heavy-Light Decomposition | galen_colin",
        "resource_url": "https://codeforces.com/blog/entry/81317",
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "is_video_type": true,
        "resource_title": "Easiest HLD with subtree queries | adamant",
        "resource_url": "https://codeforces.com/blog/entry/53170",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_comments": "has a cute manimation",
        "resource_url": "https://usaco.guide/plat/hld?lang=cpp",
        "resource_title": "Heavy-Light Decomposition | USACO Guide"
      },
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/113453",
        "resource_title": "[Idea] Using HLD to reduce memory  By maomao90"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/HLD.cpp"
    ],
    "problem_order": [
      "cses_1138",
      "spoj_qtree",
      "spoj_grasspla",
      "usaco_921",
      "spoj_en",
      "hackerrank_subtrees_and_paths",
      "yosupo_vertex_set_path_composite",
      "spoj_gss7",
      "codechef_query",
      "codechef_pshttr",
      "codechef_qryland",
      "codechef_blwhtree",
      "usaco_970",
      "codechef_monoploy",
      "usaco_576",
      "usaco_901",
      "tlx_troc_14h",
      "codeforces_1017g",
      "codechef_gpd",
      "codechef_fibtree"
    ]
  },
  "huffman_coding": {
    "completion_count": 2,
    "is_data_complete": true,
    "topic_id": "huffman_coding",
    "template_codes": [
      "https://www.programiz.com/dsa/huffman-coding"
    ],
    "created_at": {
      "seconds": 1714833978,
      "nanoseconds": 112000000
    },
    "resources": [
      {
        "is_starred": true,
        "resource_title": "Huffman Coding | Programiz",
        "resource_url": "https://www.programiz.com/dsa/huffman-coding",
        "resource_comments": ""
      },
      {
        "resource_title": "Huffman Coding | Geeks for Geeks",
        "resource_comments": "",
        "resource_url": "https://www.geeksforgeeks.org/huffman-coding-greedy-algo-3/"
      }
    ]
  },
  "hungarian_algorithm": {
    "completion_count": 5,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Hungarian%20Algorithm.cpp"
    ],
    "topic_id": "hungarian_algorithm",
    "created_at": {
      "seconds": 1714131013,
      "nanoseconds": 834000000
    },
    "is_data_complete": true,
    "resources": [
      {
        "resource_title": "ASSIGNMENT PROBLEM AND HUNGARIAN ALGORITHM | TopCoder",
        "is_starred": true,
        "resource_url": "https://www.topcoder.com/thrive/articles/Assignment%20Problem%20and%20Hungarian%20Algorithm",
        "resource_comments": ""
      },
      {
        "resource_title": "AlgorithmsThread 0: Hungarian for non Hungarians",
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/watch?v=cVBzMXYc4ss",
        "is_video_type": true
      },
      {
        "resource_comments": "",
        "resource_title": "Hungarian Maximum Matching Algorithm | Brilliant",
        "resource_url": "https://brilliant.org/wiki/hungarian-matching/"
      }
    ]
  },
  "implicit_prime_factorization": {
    "completion_count": 2,
    "created_at": {
      "seconds": 1715258876,
      "nanoseconds": 930000000
    },
    "topic_id": "implicit_prime_factorization",
    "template_codes": [
      "https://codeforces.com/contest/1656/submission/159590539"
    ],
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/108053",
        "resource_title": "Implicit Prime Factorisation  By Everule",
        "resource_comments": "",
        "is_starred": true
      }
    ],
    "is_data_complete": true
  },
  "implicit_treap": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Implicit%20Treap.cpp"
    ],
    "completion_count": 13,
    "created_at": {
      "seconds": 1713810524,
      "nanoseconds": 760000000
    },
    "is_data_complete": true,
    "topic_id": "implicit_treap",
    "resources": [
      {
        "resource_url": "https://cp-algorithms.com/data_structures/treap.html#implicit-treaps",
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Implicit Treaps | CP Algorithms"
      },
      {
        "is_starred": true,
        "resource_url": "https://usaco.guide/adv/treaps?lang=cpp#implicit-treaps",
        "resource_title": "Implicit Treaps | USACO Guide",
        "resource_comments": ""
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=6x0UlIBLRsc",
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "AlgorithmsThread 9: Treaps | SecondThread",
        "is_video_type": true
      }
    ],
    "problem_order": [
      "cf_gym_102787a",
      "cf_gym_102787z",
      "cses_2073",
      "cses_2074",
      "codeforces_863d",
      "spoj_allin1",
      "dmoj_noi05p2",
      "usaco_402",
      "csacademy_strings",
      "cf_gym_102787c",
      "codeforces_420d",
      "cf_gym_102787d",
      "spoj_gss6",
      "codeforces_702f",
      "codechef_palindr"
    ]
  },
  "inclusion_and_exclusion_on_multiples": {
    "resources": [
      {
        "resource_title": "[Tutorial] DP in Number Theory  By stoyan_malinin",
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/83757"
      }
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714197137,
      "nanoseconds": 571000000
    },
    "topic_id": "inclusion_and_exclusion_on_multiples",
    "completion_count": 13,
    "problem_order": [
      "cses_2417",
      "cses_1081",
      "spoj_najpwg",
      "codeforces_1900d",
      "kattis_coprimeintegers",
      "codechef_coprime3",
      "codeforces_803f",
      "codeforces_839d",
      "spoj_pstr",
      "spoj_gcdex",
      "atcoder_agc038_c",
      "codeforces_439e",
      "spoj_lcmsum",
      "lightoj_lcm_extreme",
      "hdu_1695",
      "atcoder_abc162_e",
      "hackerearth_yet_another_sum_problem",
      "codeforces_1043f",
      "codeforces_645f"
    ],
    "template_codes": []
  },
  "incremental_scc": {
    "completion_count": 1,
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/91608",
        "is_starred": true,
        "resource_title": "My own algorithm — offline incremental strongly connected components in O(m*log(m))  By Radewoosh",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_url": "https://arxiv.org/abs/0803.0792",
        "resource_title": "Incremental Topological Ordering and Strong Component Maintenance | Paper by Bernhard Haeupler, Siddhartha Sen, Robert E. Tarjan"
      }
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714027050,
      "nanoseconds": 126000000
    },
    "problem_order": [
      "yosupo_incremental_scc",
      "baekjoon_19028",
      "codeforces_1989f"
    ],
    "topic_id": "incremental_scc",
    "template_codes": []
  },
  "insertion_sort": {
    "completion_count": 148,
    "created_at": {
      "seconds": 1715159055,
      "nanoseconds": 454000000
    },
    "resources": [
      {
        "resource_url": "https://www.programiz.com/dsa/insertion-sort",
        "resource_title": "Insertion Sort Algorithm | Programiz",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "is_starred": true,
        "is_video_type": true,
        "resource_url": "https://www.youtube.com/watch?v=HzteMqc4Gjg",
        "resource_title": "Insertion Sort Explained using Animations |  bvdl․io",
        "resource_comments": ""
      },
      {
        "resource_comments": "select Insertion Sort",
        "resource_url": "https://visualgo.net/en/sorting",
        "is_starred": true,
        "resource_title": "Sorting Algorithm Visualizer | VisuAlgo"
      }
    ],
    "topic_id": "insertion_sort",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Basics/Insertion%20Sort.cpp"
    ],
    "is_data_complete": true
  },
  "integration": {
    "topic_id": "integration",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Integration%20(Simpsons).cpp",
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Integration%20(Romberg).cpp"
    ],
    "created_at": {
      "seconds": 1714478859,
      "nanoseconds": 655000000
    },
    "problem_order": [
      "gym_423724b",
      "gym_101807d",
      "uva_12997",
      "uva_3973",
      "uva_3838",
      "uva_3893",
      "timus_1562",
      "spoj_cerc07w",
      "uva_1116",
      "spoj_ciru",
      "codechef_mindist",
      "codechef_impo"
    ],
    "is_data_complete": true,
    "resources": [
      {
        "resource_title": "Differentiation | Brilliant",
        "resource_url": "https://brilliant.org/wiki/differentiation/",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_url": "https://www.mathsisfun.com/calculus/maxima-minima.html",
        "is_starred": true,
        "resource_title": "Finding Maxima and Minima using Derivatives | Math is Fun",
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Integration | Brilliant",
        "resource_url": "https://brilliant.org/wiki/integration/"
      },
      {
        "is_starred": true,
        "resource_title": "Simpson's rule | Wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Simpson%27s_rule",
        "resource_comments": ""
      },
      {
        "resource_url": "https://en.wikipedia.org/wiki/Romberg%27s_method",
        "is_starred": true,
        "resource_title": "Romberg's method | Wiki",
        "resource_comments": ""
      }
    ],
    "completion_count": 5
  },
  "interactive_problems": {
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/45307",
        "resource_title": "Interactive Problems: Guide for Participants  By MikeMirzayanov",
        "is_starred": true,
        "resource_comments": ""
      }
    ],
    "completion_count": 14,
    "topic_id": "interactive_problems",
    "template_codes": [],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714843609,
      "nanoseconds": 715000000
    },
    "problem_order": [
      "cf_gym_1010211",
      "codeforces_1807e",
      "csacademy_prime_factors",
      "codeforces_1486c1",
      "codeforces_679a",
      "codeforces_1621c",
      "codeforces_1207e",
      "codeforces_1583d",
      "codeforces_1780d",
      "codeforces_1534d",
      "codeforces_1282d",
      "toph_missing_string",
      "codeforces_1407c",
      "codeforces_1451e1",
      "codeforces_1364e",
      "codeforces_1779e",
      "codeforces_1355f",
      "codeforces_1061f",
      "codeforces_1839e"
    ]
  },
  "interactive_problems_on_centroids": {
    "topic_id": "interactive_problems_on_centroids",
    "resources": [
      {
        "resource_title": "Editorial of 1174F - Ehab and the Big Finale",
        "resource_comments": "check \"Centroid decomposition solution\"",
        "resource_url": "https://codeforces.com/blog/entry/67388",
        "is_starred": true
      }
    ],
    "is_data_complete": true,
    "completion_count": 1,
    "problem_order": [
      "codeforces_1174f?locale=en",
      "codechef_spcnode",
      "codeforces_1761g"
    ],
    "template_codes": [],
    "created_at": {
      "seconds": 1714844799,
      "nanoseconds": 634000000
    }
  },
  "interval_set": {
    "topic_id": "interval_set",
    "completion_count": 5,
    "created_at": {
      "seconds": 1713831146,
      "nanoseconds": 976000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Interval%20Set.cpp"
    ],
    "resources": [],
    "is_data_complete": true
  },
  "intro_to_cpp": {
    "completion_count": 1082,
    "resources": [
      {
        "resource_url": "https://www.w3schools.com/cpp/cpp_intro.asp",
        "resource_title": "C++ Introduction | W3 Schools",
        "resource_comments": "read just this page, nothing more"
      },
      {
        "is_video_type": true,
        "resource_url": "https://www.youtube.com/watch?v=zIhhO2DcW2s",
        "resource_title": "CodeBlocks IDE Installation on Windows 10/11 [2023 Update] MinGW GCC Compiler | C & C++ Programming  Geeky Script",
        "resource_comments": ""
      },
      {
        "is_video_type": true,
        "resource_title": "How to install CodeBlocks on Mac #1 CProgramming | CSBHASHA",
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/watch?v=5kgtA6vPJOs"
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=KTrQyyVmHDc",
        "is_video_type": true,
        "resource_comments": "",
        "resource_title": "Install and setup CodeBlocks C/C++ IDE on Linux |  LinuxH2O"
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=lPd13fsU-CQ&list=PLzMcBGfZo4-lmGC8VW0iu6qfMHjy7gLQ3&index=1",
        "is_video_type": true,
        "resource_title": "How to Compile and Run C++ Code | Tech With Tim",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_title": "Getting Started With C++ | Programiz",
        "is_starred": true,
        "resource_url": "https://www.programiz.com/cpp-programming/getting-started"
      },
      {
        "resource_url": "https://www.programiz.com/cpp-programming/first-program",
        "resource_title": "Your First C++ Program | Programiz",
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_comments": "you can run your code here without setting up any local environment! So if you want to code in your smartphone, you can do here! ",
        "resource_title": "Online IDE",
        "resource_url": "https://www.programiz.com/cpp-programming/online-compiler/"
      },
      {
        "resource_title": "C++ Tutorial for Beginners - Full Course |  freeCodeCamp.org",
        "is_video_type": true,
        "resource_url": "https://www.youtube.com/watch?v=vLnPwxZdW4Y",
        "is_starred": true,
        "resource_comments": "this contains everything about C++, you can complete it if you want but not necessary to do it now as we will cover all of them later."
      },
      {
        "is_starred": true,
        "resource_title": "Virtual Judge",
        "resource_comments": "Create an account here, we will practice some problems on this judge. You can submit your code and test if your code is right or wrong automatically.",
        "resource_url": "https://vjudge.net/"
      }
    ],
    "topic_id": "intro_to_cpp",
    "is_data_complete": true,
    "created_at": {
      "seconds": 1715026720,
      "nanoseconds": 433000000
    },
    "template_codes": []
  },
  "invariants_and_monovariants": {
    "problem_order": [
      "cses_1754",
      "codeforces_1973a",
      "codeforces_1591d",
      "atcoder_abc178_f",
      "codeforces_1775e",
      "codeforces_1983b",
      "leetcode_find_the_maximum_sum_of_node_values",
      "codeforces_1983d",
      "atcoder_abc296_f",
      "codeforces_1110e",
      "codeforces_1906b",
      "codechef_atbo",
      "codeforces_1630d",
      "codeforces_1365f"
    ],
    "resources": [
      {
        "resource_title": "[Tutorial] Invariants and Monovariants  By TooNewbie",
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/57216"
      },
      {
        "is_starred": true,
        "resource_title": "Invariant List | Share Your Invariant Here!  By muhammadhasan01",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/130338"
      }
    ],
    "completion_count": 3,
    "created_at": {
      "seconds": 1714851640,
      "nanoseconds": 979000000
    },
    "is_data_complete": true,
    "template_codes": [],
    "topic_id": "invariants_and_monovariants"
  },
  "inverse_graph": {
    "completion_count": 14,
    "created_at": {
      "seconds": 1713953714,
      "nanoseconds": 530000000
    },
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/93652",
        "resource_title": "BFS Trick (Pie for a Pie trick) | By tdpencil"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/93801",
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Traversing the complement graph in linear/near-linear time in multiple ways | By nor"
      }
    ],
    "topic_id": "inverse_graph",
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Inverse%20Graph.cpp"
    ],
    "problem_order": [
      "yosupo_connected_components_of_complement_graph",
      "codeforces_920e",
      "codeforces_1242b",
      "codeforces_190e",
      "usaco_765",
      "codeforces_653e",
      "codeforces_1508c",
      "kattis_flightplans",
      "hackerrank_rust_murderer",
      "cf_gym_101102k",
      "codeforces_1477d"
    ]
  },
  "inverse_of_a_matrix": {
    "topic_id": "inverse_of_a_matrix",
    "completion_count": 1,
    "created_at": {
      "seconds": 1714470430,
      "nanoseconds": 295000000
    },
    "resources": [
      {
        "resource_title": "Math 2331 - 17040: Linear Algebra | Dr. Jiwen He",
        "is_starred": true,
        "resource_comments": "check lecture 6, 7 and 8",
        "resource_url": "https://www.math.uh.edu/~jiwenhe/math2331/index.htm"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Inverse%20of%20A%20Matrix.cpp"
    ],
    "is_data_complete": true
  },
  "inverse_of_a_matrix_modulo_2": {
    "topic_id": "inverse_of_a_matrix_modulo_2",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Inverse%20of%20A%20Matrix%20modulo%202.cpp"
    ],
    "resources": [],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714470648,
      "nanoseconds": 358000000
    }
  },
  "inversions": {
    "problem_order": [
      "spoj_invcnt",
      "hackerearth_move_minimization_8a9d3991",
      "codeforces_1918b",
      "hackerearth_make_them_equal_too_89585e71",
      "codeforces_1430e",
      "atcoder_arc120_c",
      "cf_gym_103148b",
      "atcoder_arc088_c",
      "atcoder_arc097_c",
      "ioi19_shoes",
      "codeforces_911d",
      "codeforces_1526d",
      "codeforces_513g1",
      "timus_1523",
      "codechef_iiti15",
      "atcoder_joi2021ho_c",
      "spoj_swaps"
    ],
    "topic_id": "inversions",
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/92130",
        "resource_comments": "",
        "resource_title": "[Tutorial] Problems about swapping adjacent elements  By TheScrasse"
      }
    ],
    "is_data_complete": true,
    "completion_count": 11,
    "created_at": {
      "seconds": 1714846188,
      "nanoseconds": 120000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Miscellaneous/Inversions.cpp"
    ]
  },
  "isomorphic_suffix_array": {
    "resources": [],
    "created_at": {
      "seconds": 1714646705,
      "nanoseconds": 419000000
    },
    "topic_id": "isomorphic_suffix_array",
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Strings/Suffix%20Array%20Isomorphic.cpp"
    ]
  },
  "iterative_segment_tree": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Segment%20Tree%20NonRecursive.cpp"
    ],
    "created_at": {
      "seconds": 1713060269,
      "nanoseconds": 545000000
    },
    "resources": [
      {
        "is_starred": true,
        "resource_title": "Efficient and easy segment trees",
        "resource_url": "https://codeforces.com/blog/entry/18051",
        "resource_comments": "contains Lazy propagation too. For practice problems, just take any segment tree problem and use this trick."
      },
      {
        "resource_title": "Sort before insert — A small extension to Merge sort tree By darkkcyan",
        "resource_url": "https://codeforces.com/blog/entry/85513",
        "resource_comments": ""
      }
    ],
    "topic_id": "iterative_segment_tree",
    "completion_count": 6,
    "is_data_complete": true
  },
  "johnsons_algorithm": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Johnson's%20Algorithm.cpp"
    ],
    "completion_count": 2,
    "topic_id": "johnsons_algorithm",
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714046552,
      "nanoseconds": 162000000
    },
    "resources": [
      {
        "resource_url": "https://brilliant.org/wiki/johnsons-algorithm/",
        "resource_title": "Johnson's Algorithm | Brilliant",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_title": "[Tutorial] Graph Potentials, Johnson's Algorithm | Monogon",
        "resource_url": "check until \"Min Cost Max Flow\""
      }
    ]
  },
  "josephus_problem": {
    "is_data_complete": true,
    "completion_count": 3,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Miscellaneous/Josephus%20Problem.cpp"
    ],
    "topic_id": "josephus_problem",
    "resources": [
      {
        "resource_title": "Josephus Problem | CP Algorithms",
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/others/josephus_problem.html",
        "is_starred": true
      },
      {
        "resource_title": "Multiple people Josephus problem  By ad_red",
        "resource_url": "https://codeforces.com/blog/entry/118764",
        "resource_comments": ""
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=uCsD3ZGzMgE",
        "is_video_type": true,
        "is_starred": true,
        "resource_title": "The Josephus Problem - Numberphile",
        "resource_comments": ""
      }
    ],
    "created_at": {
      "seconds": 1714909063,
      "nanoseconds": 574000000
    }
  },
  "k_divisors": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/K%20Divisors.cpp"
    ],
    "is_data_complete": true,
    "topic_id": "k_divisors",
    "resources": [
      {
        "resource_title": "Counting primes in O(n^(2/3)) By Maksim1744",
        "resource_url": "https://codeforces.com/blog/entry/91632",
        "resource_comments": "you can use ideas similar to this blog and backtracking to solve the problem"
      }
    ],
    "created_at": {
      "seconds": 1714205175,
      "nanoseconds": 671000000
    },
    "completion_count": 4
  },
  "kd_tree": {
    "resources": [
      {
        "resource_title": "kd-Trees | CMSC 420",
        "resource_comments": "",
        "resource_url": "https://www.cs.cmu.edu/~ckingsf/bioinfo-lectures/kdtrees.pdf",
        "is_starred": true
      },
      {
        "resource_url": "https://medium.com/smucs/a-look-into-k-dimensional-trees-290ec69dffe9",
        "resource_comments": "",
        "resource_title": "A look into K-Dimensional Trees Brandon Wheeless smucs By Brandon Wheeless"
      },
      {
        "resource_comments": "",
        "resource_url": "https://www.geeksforgeeks.org/search-and-insertion-in-k-dimensional-tree/",
        "resource_title": "Search and Insertion in K Dimensional tree | Geeks For Geeks"
      }
    ],
    "topic_id": "kd_tree",
    "problem_order": [
      "toph_remember_the_name",
      "spoj_gannhat"
    ],
    "is_data_complete": true,
    "completion_count": 1,
    "created_at": {
      "seconds": 1713824594,
      "nanoseconds": 784000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/KD%20Tree.cpp"
    ]
  },
  "kirchoffs_theorem_ft_number_of_msts": {
    "problem_order": [
      "yosupo_counting_spanning_tree_undirected",
      "lightoj_trux_it_up",
      "codechef_starroad",
      "codechef_cstree",
      "atcoder_abc253_h",
      "loj_6271"
    ],
    "topic_id": "kirchoffs_theorem_ft_number_of_msts",
    "is_data_complete": true,
    "resources": [
      {
        "resource_comments": "check the 7.1 Kirchoff’s Matrix-Tree Theorem section",
        "is_starred": true,
        "resource_title": "The Matrix-Tree Theorems",
        "resource_url": "https://personalpages.manchester.ac.uk/staff/mark.muldoon/Teaching/DiscreteMaths/LectureNotes/IntroToMatrixTree.pdf"
      },
      {
        "is_starred": true,
        "resource_url": "https://cp-algorithms.com/graph/kirchhoff-theorem.html",
        "resource_comments": "",
        "resource_title": "Kirchhoff's theorem. Finding the number of spanning trees | CP Algorithms"
      },
      {
        "resource_url": "https://medium.com/@da.naqvi99/kirchhoffs-theorem-67ea182c1b45",
        "resource_comments": "",
        "resource_title": "Kirchhoff’s theorem | Danish Ali"
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/103329",
        "resource_title": "An intuition and simpler proof for Kirchoff's tree theorem  By Everule"
      }
    ],
    "completion_count": 3,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Kirchoffs%20Theorem.cpp"
    ],
    "created_at": {
      "seconds": 1714039010,
      "nanoseconds": 282000000
    }
  },
  "kmp": {
    "is_data_complete": true,
    "resources": [
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Prefix function. Knuth–Morris–Pratt algorithm | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/string/prefix-function.html"
      },
      {
        "is_starred": true,
        "resource_title": "(Tutorial) Prefix Function + Pattern Matching (supposedly, KMP) |  galencolin",
        "resource_comments": "",
        "resource_url": "https://discuss.codechef.com/t/tutorial-prefix-function-pattern-matching-supposedly-kmp/67531"
      },
      {
        "resource_comments": "",
        "resource_title": "KMP Algorithm (String Matching) Demystified | Girish Budhwani",
        "resource_url": "https://binary-baba.medium.com/string-matching-kmp-algorithm-27c182efa387"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/74280?f0a28=3&locale=en",
        "is_video_type": true,
        "resource_title": "Video tutorial on KMP algorithm  By vedhant",
        "resource_comments": ""
      }
    ],
    "created_at": {
      "seconds": 1714543270,
      "nanoseconds": 906000000
    },
    "completion_count": 29,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Strings/KMP.cpp",
      "https://github.com/ShahjalalShohag/code-library/blob/main/Strings/Prefix%20Automaton.cpp"
    ],
    "problem_order": [
      "cses_1753",
      "cses_1732",
      "cses_1733",
      "uva_396",
      "uva_1963",
      "uva_2447",
      "uva_4282",
      "spoj_najpf",
      "spoj_nhay",
      "uva_3911",
      "codeforces_471d",
      "codeforces_625b",
      "cses_2107",
      "codeforces_432d",
      "spoj_epalin",
      "uva_1239",
      "spoj_period",
      "codeforces_808g",
      "cses_1112",
      "codeforces_346b",
      "uva_1960",
      "codeforces_126b",
      "codeforces_535d",
      "codeforces_494b",
      "codeforces_631d",
      "codeforces_119d",
      "spoj_vpalin",
      "codeforces_1015f",
      "spoj_cpattern",
      "codeforces_291e",
      "lightoj_unlucky_strings"
    ],
    "topic_id": "kmp"
  },
  "knapsack": {
    "topic_id": "knapsack",
    "resources": [
      {
        "resource_title": "Introduction to Dynamic Programming | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/dynamic_programming/intro-to-dp.html",
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "resource_title": "Dynamic Programming lecture #1 - Fibonacci, iteration vs recursion | Errichto Algorithms",
        "is_starred": true,
        "resource_url": "https://www.youtube.com/watch?v=YBSt1jYwVfU",
        "resource_comments": ""
      },
      {
        "resource_title": "Dynamic Programming lecture #2 - Coin change, double counting | Errichto Algorithms",
        "resource_url": "https://www.youtube.com/watch?v=1mtvm2ubHCY",
        "is_video_type": true,
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "is_video_type": true,
        "resource_comments": "very good explanations",
        "resource_url": "https://www.youtube.com/watch?v=oBt53YbR9Kk",
        "resource_title": "Dynamic Programming - Learn to Solve Algorithmic Problems & Coding Challenges | freeCodeCamp.org",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://www.youtube.com/watch?v=cJ21moQpofY",
        "is_video_type": true,
        "resource_title": "0/1 Knapsack problem | Dynamic Programming  WilliamFiset"
      },
      {
        "resource_url": "https://www.geeksforgeeks.org/0-1-knapsack-problem-dp-10/",
        "resource_comments": "",
        "resource_title": "0/1 Knapsack Problem | Geeks for Geeks",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "resource_url": "https://usaco.guide/CPH.pdf#page=75",
        "resource_title": "7.1 Coin problem | CPH"
      },
      {
        "is_starred": true,
        "resource_url": "https://atcoder.jp/contests/abc321/editorial/7281",
        "resource_comments": "",
        "resource_title": "Removing Items in Subset Sum | Editorial"
      },
      {
        "is_video_type": true,
        "resource_title": "A Deep Understanding of Dynamic Programming [Intro / Overview] |  Colin Galen",
        "resource_url": "https://www.youtube.com/watch?v=Clp5c7HvLqs",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_url": "https://usaco.guide/gold/intro-dp?lang=cpp",
        "resource_title": "Introduction to DP | USACO Guide",
        "is_starred": false,
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_url": "https://usaco.guide/gold/knapsack?lang=cpp",
        "resource_title": "Knapsack DP | USACO Guide"
      },
      {
        "resource_comments": "",
        "resource_title": "AtCoder DP Editorial | Neo Wang",
        "resource_url": "https://nwatx.me/post/atcoderdp",
        "is_starred": true
      },
      {
        "resource_title": "Paths on Grids | USACO Guide",
        "resource_comments": "",
        "resource_url": "https://usaco.guide/gold/paths-grids"
      }
    ],
    "problem_order": [
      "cses_1633",
      "atcoder_dp_d",
      "cses_1635",
      "atcoder_dp_a",
      "atcoder_dp_b",
      "cses_1634",
      "cses_1637",
      "codeforces_687c",
      "cses_1638",
      "cses_1158",
      "cses_1746",
      "cses_2413",
      "cses_1745",
      "cses_1097",
      "cses_1093",
      "usaco_574",
      "atcoder_dp_c",
      "atcoder_dp_f",
      "atcoder_dp_h",
      "atcoder_dp_i",
      "cses_1636",
      "atcoder_abc321_f",
      "usaco_839",
      "codeforces_837d",
      "usaco_897",
      "usaco_1043",
      "szkopul_lgqks9uritmjtxhpdahqyoel",
      "atcoder_dp_e",
      "atcoder_dp_k",
      "atcoder_dp_l",
      "atcoder_dp_m",
      "atcoder_dp_n",
      "atcoder_dp_y",
      "ceoi18_clo"
    ],
    "completion_count": 64,
    "template_codes": [],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714673561,
      "nanoseconds": 334000000
    }
  },
  "knight_moves_in_infinity_grid": {
    "topic_id": "knight_moves_in_infinity_grid",
    "created_at": {
      "seconds": 1714849342,
      "nanoseconds": 865000000
    },
    "completion_count": 0,
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Miscellaneous/Knight%20Moves%20in%20Infinity%20Grid.cpp"
    ],
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://medium.com/@adematalay/knights-move-on-infinite-chess-board-with-constant-time-and-space-98c1c0748aa6",
        "is_starred": true,
        "resource_title": "Knight’s move on infinite chess board with constant time and space | Adem Atalay"
      }
    ]
  },
  "knights_tour_problem": {
    "template_codes": [],
    "topic_id": "knights_tour_problem",
    "resources": [
      {
        "resource_url": "https://usaco.guide/CPH.pdf#page=189",
        "is_starred": true,
        "resource_title": "19.4 Knight’s tours | CPH",
        "resource_comments": ""
      },
      {
        "resource_url": "https://www.geeksforgeeks.org/warnsdorffs-algorithm-knights-tour-problem/",
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Warnsdorff’s algorithm for Knight’s tour problem | Geeks for Geeks"
      },
      {
        "resource_title": "Knight's Tour Problem | Backtracking | Code Dope",
        "resource_comments": "",
        "resource_url": "https://www.codesdope.com/course/algorithms-knights-tour-problem/"
      }
    ],
    "completion_count": 3,
    "created_at": {
      "seconds": 1714101604,
      "nanoseconds": 572000000
    },
    "is_data_complete": true
  },
  "knuth_optimization": {
    "resources": [
      {
        "resource_url": "https://cp-algorithms.com/dynamic_programming/knuth-optimization.html",
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Knuth's Optimization | CP Algorithms"
      },
      {
        "resource_title": "What is Knuth's optimization in dynamic programming? | Quora",
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://www.quora.com/What-is-Knuths-optimization-in-dynamic-programming"
      },
      {
        "resource_title": "Knuth’s Optimization in Dynamic Programming | Geeks for Geeks",
        "resource_comments": "",
        "resource_url": "https://www.geeksforgeeks.org/knuths-optimization-in-dynamic-programming/"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Dynamic%20Programming%20Optimizations/Knuth%20Optimization.cpp"
    ],
    "topic_id": "knuth_optimization",
    "created_at": {
      "seconds": 1714681132,
      "nanoseconds": 9000000
    },
    "is_data_complete": true,
    "completion_count": 8
  },
  "kth_root_of_a_permutation": {
    "is_data_complete": true,
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://www.hackerrank.com/contests/infinitum14/challenges/sasha-and-swaps/editorial",
        "resource_title": "Editorial of Sasha and Swaps by adamant",
        "resource_comments": ""
      }
    ],
    "created_at": {
      "seconds": 1714847436,
      "nanoseconds": 20000000
    },
    "topic_id": "kth_root_of_a_permutation",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Miscellaneous/K-th%20Root%20of%20a%20Permutation.cpp"
    ],
    "completion_count": 1
  },
  "l_r_flow": {
    "resources": [
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Flows with demands | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/graph/flow_with_demands.html"
      },
      {
        "resource_title": "CMSC 451: Max-Flow Extensions | Slides By: Carl Kingsford",
        "resource_comments": "",
        "resource_url": "https://www.cs.cmu.edu/~ckingsf/bioinfo-lectures/flowext.pdf"
      },
      {
        "resource_title": "18 Extensions of Maximum Flow",
        "resource_comments": "",
        "resource_url": "https://web.archive.org/web/20180619120145/http://web.engr.illinois.edu/~jeffe/teaching/algorithms/2009/notes/18-maxflowext.pdf"
      }
    ],
    "topic_id": "l_r_flow",
    "is_data_complete": true,
    "completion_count": 2,
    "created_at": {
      "seconds": 1714131610,
      "nanoseconds": 19000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/L%20R%20Flow%20with%20Dinic.cpp",
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/L%20R%20Flow%20with%20MCMF.cpp"
    ],
    "problem_order": [
      "codeforces_704d",
      "codeforces_1288f"
    ]
  },
  "lagrange_interpolation": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Lagrange%20Interpolation.cpp",
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Lagrange%20Interpolation%20with%20Polynomial%20Extraction.cpp"
    ],
    "completion_count": 6,
    "resources": [
      {
        "resource_title": "[TUTORIAL] Basic Lagrange Interpolation  By grhkm",
        "resource_url": "https://codeforces.com/blog/entry/82953",
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "resource_title": "The Application of Lagrange Interpolation in Mathematics  By luosw",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/85814"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/98386",
        "resource_title": "Lagrange interpolation and partial fraction decomposition  By adamant",
        "resource_comments": ""
      }
    ],
    "topic_id": "lagrange_interpolation",
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714374248,
      "nanoseconds": 848000000
    },
    "problem_order": [
      "codeforces_622f",
      "spoj_asumhard",
      "codechef_countit",
      "spoj_somesums",
      "hdu_4059",
      "spoj_asumextr",
      "atcoder_arc033_4",
      "codeforces_995f",
      "codechef_gcdmask",
      "spoj_pwsumc",
      "codechef_xetf",
      "codechef_chefssm",
      "luogu_p4463"
    ]
  },
  "lagrange_inversion_theorem": {
    "resources": [
      {
        "resource_title": "Lagrange inversion theorem  By adamant",
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/104184"
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/77551",
        "resource_title": "Lagrange Inversion Formula | [Tutorial] Generating Functions in Competitive Programming (Part 2)  By zscoder"
      },
      {
        "resource_title": "Lagrange inversion theorem | wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Lagrange_inversion_theorem",
        "resource_comments": ""
      },
      {
        "resource_title": "Editorial of Problem H - Beautiful Binary Tree ",
        "resource_url": "https://atcoder.jp/contests/abc222/editorial/2765",
        "resource_comments": ""
      }
    ],
    "template_codes": [],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714111775,
      "nanoseconds": 304000000
    },
    "topic_id": "lagrange_inversion_theorem"
  },
  "lagrange_multiplier": {
    "completion_count": 1,
    "created_at": {
      "seconds": 1714508611,
      "nanoseconds": 552000000
    },
    "topic_id": "lagrange_multiplier",
    "resources": [
      {
        "resource_title": "Lagrange multiplier | Wiki",
        "is_starred": true,
        "resource_url": "https://en.wikipedia.org/wiki/Lagrange_multiplier",
        "resource_comments": ""
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/51783",
        "resource_comments": "",
        "resource_title": "Lagrange Multipliers for \"Core Training\" (Code Jam 2017, Round 1C)  By choice"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Lagrange%20Multiplier.cpp"
    ],
    "is_data_complete": true
  },
  "large_factorials": {
    "topic_id": "large_factorials",
    "is_data_complete": true,
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/72364",
        "is_starred": true,
        "resource_comments": "check editorial of problem G. Enormous Product",
        "resource_title": "[Editorial]Contest Based on SUST Intra University Programming Contest 2019  By YouKn0wWho"
      },
      {
        "is_starred": true,
        "resource_title": "Fastest way to get factorial modulo a prime ",
        "resource_url": "https://codeforces.com/blog/entry/63491",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/65178",
        "is_starred": true,
        "resource_title": "Binomial coefficients of large numbers modulo prime"
      }
    ],
    "template_codes": [],
    "created_at": {
      "seconds": 1714301493,
      "nanoseconds": 630000000
    },
    "completion_count": 2,
    "problem_order": [
      "yosupo_factorial",
      "toph_enormous_product",
      "spoj_factmodp"
    ]
  },
  "lattice_points_inside_a_non_lattice_polygon": {
    "created_at": {
      "seconds": 1714820218,
      "nanoseconds": 50000000
    },
    "resources": [
      {
        "is_starred": true,
        "resource_title": "Lattice points inside non-lattice polygon | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/geometry/lattice-points.html",
        "resource_comments": ""
      }
    ],
    "topic_id": "lattice_points_inside_a_non_lattice_polygon",
    "is_data_complete": true,
    "template_codes": []
  },
  "lca_in_o1": {
    "completion_count": 16,
    "resources": [
      {
        "resource_url": "https://www.topcoder.com/thrive/articles/Range%20Minimum%20Query%20and%20Lowest%20Common%20Ancestor",
        "resource_title": "RANGE MINIMUM QUERY AND LOWEST COMMON ANCESTOR | Topcoder",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/graph/lca.html",
        "resource_title": "Lowest Common Ancestor -   $O(\\sqrt{N})$  and   $O(\\log N)$  with   $O(N)$  preprocessing | CP Algorithms"
      },
      {
        "resource_url": "https://cp-algorithms.com/graph/lca_tarjan.html",
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Lowest Common Ancestor - Tarjan's off-line algorithm | CP Algorithms"
      },
      {
        "resource_comments": "",
        "resource_title": "Lowest Common Ancestor (LCA) Problem | Eulerian path method | WilliamFiset",
        "is_starred": false,
        "is_video_type": true,
        "resource_url": "https://www.youtube.com/watch?v=sD1IoalFomA"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/LCA%20in%20O(1).cpp"
    ],
    "created_at": {
      "seconds": 1714023084,
      "nanoseconds": 985000000
    },
    "topic_id": "lca_in_o1",
    "is_data_complete": true
  },
  "lcm_convolution": {
    "created_at": {
      "seconds": 1714380581,
      "nanoseconds": 419000000
    },
    "completion_count": 4,
    "topic_id": "lcm_convolution",
    "template_codes": [
      "https://judge.yosupo.jp/submission/153819"
    ],
    "resources": [
      {
        "resource_title": "[Tutorial] GCD Convolution  By szaranczuk",
        "resource_url": "https://codeforces.com/blog/entry/112346",
        "resource_comments": "similar"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/119082",
        "resource_comments": "",
        "resource_title": "[Tutorial] Zeta, Mobius Transform to AND, OR, GCD Convolution  By jinhan814",
        "is_starred": true
      }
    ],
    "is_data_complete": true
  },
  "lcm_of_fibonacci_numbers": {
    "resources": [
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Editorial of Fibonacci LCM by kevinsogo",
        "resource_url": "https://www.hackerrank.com/contests/infinitum10/challenges/fibonacci-lcm/editorial"
      }
    ],
    "completion_count": 1,
    "created_at": {
      "seconds": 1714312311,
      "nanoseconds": 399000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/LCM%20of%20Fibonacci%20Numbers.cpp"
    ],
    "is_data_complete": true,
    "topic_id": "lcm_of_fibonacci_numbers"
  },
  "lcm_or_technique": {
    "is_data_complete": true,
    "topic_id": "lcm_or_technique",
    "template_codes": [],
    "completion_count": 2,
    "created_at": {
      "seconds": 1714901556,
      "nanoseconds": 644000000
    },
    "resources": [
      {
        "is_starred": true,
        "resource_title": "F - Subsequence LCM Editorial",
        "resource_url": "https://atcoder.jp/contests/abc349/editorial/9878",
        "resource_comments": ""
      }
    ]
  },
  "lcs": {
    "topic_id": "lcs",
    "resources": [
      {
        "resource_url": "https://www.programiz.com/dsa/longest-common-subsequence",
        "resource_title": "Longest Common Subsequence | Programiz",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://www.geeksforgeeks.org/longest-common-subsequence-dp-4/",
        "resource_title": "Longest Common Subsequence (LCS) | Geeks for Geeks"
      },
      {
        "is_video_type": true,
        "resource_title": "Longest Common Subsequence (LCS) in DP Playlist  By Algorithms_with_Shayan",
        "resource_url": "https://codeforces.com/blog/entry/124670",
        "resource_comments": ""
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=Ua0GhsJSlWM",
        "is_video_type": true,
        "resource_comments": "",
        "resource_title": "Longest Common Subsequence - Dynamic Programming - Leetcode 1143"
      },
      {
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/99907",
        "resource_title": "how to find the LCS of two permutations per nlogn  By LinkCatList",
        "resource_comments": ""
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/8767?#comment-144922",
        "resource_comments": "",
        "resource_title": "Converting LCS to LIS | hriss95",
        "is_starred": true
      }
    ],
    "template_codes": [
      "https://codeforces.com/blog/entry/124670"
    ],
    "completion_count": 24,
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714649933,
      "nanoseconds": 51000000
    }
  },
  "lcs_on_rle_compressed_string": {
    "topic_id": "lcs_on_rle_compressed_string",
    "template_codes": [],
    "resources": [
      {
        "resource_title": "Matching for Run-Length Encoded Strings ",
        "resource_comments": "",
        "resource_url": "https://docs.lib.purdue.edu/cgi/viewcontent.cgi?article=2354&context=cstech"
      }
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714650681,
      "nanoseconds": 819000000
    }
  },
  "lct": {
    "topic_id": "lct",
    "created_at": {
      "seconds": 1713759410,
      "nanoseconds": 0
    },
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Link%20Cut%20Tree.cpp"
    ],
    "resources": [
      {
        "is_video_type": true,
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "MIT Lecture 6.851: Advanced Data Structures (Spring'21) | Prof. Erik Demaine",
        "resource_url": "https://courses.csail.mit.edu/6.851/spring21/lectures/L19.html?notes=1"
      },
      {
        "resource_url": "https://courses.csail.mit.edu/6.851/spring21/scribe/lec19.pdf",
        "resource_comments": "",
        "resource_title": "Dynamic Graphs Scribe Notes | Prof. Erik Demaine",
        "is_starred": true
      },
      {
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/67637",
        "resource_title": "Maintain subtree information using link/cut trees | ouaan",
        "resource_comments": ""
      },
      {
        "resource_url": "https://www.overleaf.com/project/5cd4ea03d299a86710788575",
        "resource_title": "A Basic Exploration of Dynamic Trees | Zhiao Huang and Kirito Feng",
        "is_starred": true,
        "resource_comments": "Check only the \"Link/Cut Trees\" section"
      },
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/80383",
        "resource_title": "Link-cut tree tutorial by ramchandra"
      }
    ],
    "problem_order": [
      "spoj_dynacon1",
      "yosupo_dynamic_tree_vertex_add_path_sum",
      "spoj_dynalca",
      "dmoj_ds5easy",
      "codechef_qtree6",
      "dmoj_wac4p7",
      "hackerrank_pwsh_tokens",
      "yosupo_dynamic_tree_vertex_set_path_composite",
      "yosupo_dynamic_tree_vertex_add_subtree_sum",
      "codeforces_1172e",
      "codeforces_117e",
      "codeforces_1344e",
      "codeforces_603e",
      "codechef_monoploy",
      "codeforces_1109f",
      "luogu_p4219",
      "uoj_207"
    ],
    "completion_count": 4
  },
  "learn_cpp": {
    "topic_id": "learn_cpp",
    "resources": [
      {
        "resource_title": "Function",
        "resource_url": "erre"
      },
      {
        "resource_title": "Pointer",
        "resource_url": "sdsd"
      }
    ],
    "created_at": {
      "seconds": 1712700054,
      "nanoseconds": 101000000
    },
    "template_codes": []
  },
  "legendres_formula": {
    "completion_count": 7,
    "created_at": {
      "seconds": 1714315735,
      "nanoseconds": 392000000
    },
    "resources": [
      {
        "resource_url": "https://cp-algorithms.com/algebra/factorial-divisors.html",
        "is_starred": true,
        "resource_title": "Finding Power of Factorial Divisor | CP Algorithm",
        "resource_comments": ""
      }
    ],
    "topic_id": "legendres_formula",
    "template_codes": [],
    "is_data_complete": true
  },
  "li_chao_tree": {
    "completion_count": 8,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Dynamic%20Programming%20Optimizations/Li%20Chao%20Tree.cpp"
    ],
    "is_data_complete": true,
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://robert1003.github.io/2020/02/06/li-chao-segment-tree.html",
        "resource_title": "A Simple Introduction to Li-Chao Segment Tree | A Simple Blog"
      },
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/geometry/convex_hull_trick.html#li-chao-tree",
        "resource_title": "Convex hull trick and Li Chao tree | CP Algorithms"
      },
      {
        "resource_comments": "",
        "resource_title": "A simpler way to understand Li-Chao tree  By ngk_manh",
        "resource_url": "https://codeforces.com/blog/entry/95494"
      },
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/130766",
        "is_starred": true,
        "resource_title": "[Tutorial] Li Chao Tree Extended 2  By tibinyte"
      }
    ],
    "created_at": {
      "seconds": 1714684905,
      "nanoseconds": 543000000
    },
    "topic_id": "li_chao_tree",
    "problem_order": [
      "yosupo_segment_add_get_min",
      "codeforces_319c",
      "codechef_poly"
    ]
  },
  "lindstrom_gessel_viennot_lemma": {
    "created_at": {
      "seconds": 1714832998,
      "nanoseconds": 78000000
    },
    "is_data_complete": true,
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/108395",
        "resource_title": "Lattice paths and Lindström–Gessel–Viennot lemma  By miaowtin",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Lindström–Gessel–Viennot lemma | Wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Lindstr%C3%B6m%E2%80%93Gessel%E2%80%93Viennot_lemma"
      }
    ],
    "topic_id": "lindstrom_gessel_viennot_lemma",
    "template_codes": []
  },
  "line_integral": {
    "template_codes": [],
    "resources": [
      {
        "resource_title": "Arc Length | Math is Fun",
        "resource_url": "https://www.mathsisfun.com/calculus/arc-length.html",
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "resource_title": "Line Integral | Brilliant",
        "resource_comments": "",
        "resource_url": "https://brilliant.org/wiki/line-integral/"
      }
    ],
    "created_at": {
      "seconds": 1714479261,
      "nanoseconds": 120000000
    },
    "topic_id": "line_integral",
    "is_data_complete": true,
    "completion_count": 1
  },
  "linear_combination_of_vectors": {
    "completion_count": 2,
    "topic_id": "linear_combination_of_vectors",
    "problem_order": [
      "codeforces_605c",
      "codeforces_1765f"
    ],
    "template_codes": [],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714824446,
      "nanoseconds": 826000000
    },
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/22019",
        "is_starred": true,
        "resource_title": "Editorial of 605C - Freelancer's Dreams"
      }
    ]
  },
  "linear_congruence_equation": {
    "created_at": {
      "seconds": 1714221529,
      "nanoseconds": 530000000
    },
    "resources": [
      {
        "resource_url": "https://cp-algorithms.com/algebra/linear_congruence_equation.html",
        "resource_title": "Linear Congruence Equation | CP Algorithms",
        "is_starred": true,
        "resource_comments": ""
      }
    ],
    "completion_count": 12,
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Linear%20Congruence%20Equation.cpp"
    ],
    "topic_id": "linear_congruence_equation"
  },
  "linear_diophantine_equation_with_two_variables": {
    "topic_id": "linear_diophantine_equation_with_two_variables",
    "resources": [
      {
        "resource_title": "Linear Diophantine Equation | CP Algorithms",
        "is_starred": true,
        "resource_url": "https://cp-algorithms.com/algebra/linear-diophantine-equation.html",
        "resource_comments": ""
      },
      {
        "resource_title": "Solving Linear Diophantine Equations and Linear Congruential Equations",
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://www.diva-portal.org/smash/get/diva2:530204/FULLTEXT01.pdf"
      },
      {
        "resource_comments": "",
        "resource_title": "Avoid overflow in linear diophantine equation By Jakube",
        "resource_url": "https://codeforces.com/blog/entry/59842"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Linear%20Diophantine%20Equation%20with%20Two%20Variables.cpp"
    ],
    "created_at": {
      "seconds": 1714212446,
      "nanoseconds": 100000000
    },
    "is_data_complete": true,
    "completion_count": 16
  },
  "linear_diophantine_with_n_unknowns_and_two_equations": {
    "topic_id": "linear_diophantine_with_n_unknowns_and_two_equations",
    "resources": [],
    "created_at": {
      "seconds": 1714308057,
      "nanoseconds": 21000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Linear%20Diophantine%20With%20N%20Unknowns%20and%20Two%20Equations.cpp"
    ],
    "is_data_complete": true,
    "completion_count": 0
  },
  "linear_recurrence_on_matrices": {
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "PANIC - Editorial | YouKn0wWho",
        "resource_url": "https://discuss.codechef.com/t/panic-editorial/80145",
        "is_starred": true
      }
    ],
    "template_codes": [],
    "topic_id": "linear_recurrence_on_matrices",
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714461629,
      "nanoseconds": 79000000
    }
  },
  "linear_recurrence_relations": {
    "created_at": {
      "seconds": 1714457030,
      "nanoseconds": 377000000
    },
    "template_codes": [],
    "resources": [
      {
        "is_starred": true,
        "resource_title": "Solving Linear Recurrence Relations",
        "resource_url": "https://www.eecs.yorku.ca/course_archive/2008-09/S/1019/Website_files/21-linear-recurrences.pdf",
        "resource_comments": ""
      },
      {
        "resource_url": "https://brilliant.org/wiki/linear-recurrence-relations/",
        "resource_comments": "",
        "resource_title": "Linear Recurrence Relations | Brilliant"
      },
      {
        "resource_title": "Linear recurrence with constant coefficients | Wiki",
        "resource_comments": "",
        "resource_url": "https://en.wikipedia.org/wiki/Linear_recurrence_with_constant_coefficients"
      }
    ],
    "topic_id": "linear_recurrence_relations",
    "is_data_complete": true,
    "completion_count": 4
  },
  "linear_recurrence_using_cayley_hamilton_theorem": {
    "created_at": {
      "seconds": 1714376727,
      "nanoseconds": 990000000
    },
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "Linear recurrence using Cayley-Hamilton theorem | djdolls",
        "is_starred": true,
        "resource_url": "https://discuss.codechef.com/t/linear-recurrence-using-cayley-hamilton-theorem/6776"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Linear%20Recurrence.cpp"
    ],
    "problem_order": [
      "yosupo_characteristic_polynomial",
      "cf_gym_316783c",
      "codeforces_506e",
      "hackerearth_costly_strings"
    ],
    "is_data_complete": true,
    "completion_count": 3,
    "topic_id": "linear_recurrence_using_cayley_hamilton_theorem"
  },
  "linear_recurrence_using_generating_functions": {
    "created_at": {
      "seconds": 1714376766,
      "nanoseconds": 464000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Linear%20Recurrence%20Fastest.cpp"
    ],
    "is_data_complete": true,
    "resources": [
      {
        "resource_title": "[Tutorial] Solving Linear Recurrences with various methods, Including O(N logN logK) using FFT  By demoralizer",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/97627",
        "is_starred": true
      },
      {
        "resource_title": "[Tutorial] Easy Introduction to Kitamasa Method  By Justice_Hui",
        "resource_url": "https://codeforces.com/blog/entry/88760",
        "resource_comments": "",
        "is_starred": false
      },
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "[tutorial] Bostan-Mori, an elegant algorithm to compute k-th term of linear recurrence in O(dlgdlgk)  By Misuki",
        "resource_url": "https://codeforces.com/blog/entry/111862"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/100158",
        "resource_title": "On linear recurrences and the math behind them  By adamant",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "resource_url": "https://discuss.codechef.com/t/rng-editorial/10068",
        "resource_title": "RNG - Editorial"
      }
    ],
    "topic_id": "linear_recurrence_using_generating_functions",
    "completion_count": 3
  },
  "linear_recurrence_with_polynomial_coefficients": {
    "resources": [
      {
        "resource_url": "https://min-25.hatenablog.com/entry/2018/05/10/212805",
        "resource_comments": "",
        "resource_title": "Blog by min_25"
      }
    ],
    "is_data_complete": true,
    "topic_id": "linear_recurrence_with_polynomial_coefficients",
    "created_at": {
      "seconds": 1714461343,
      "nanoseconds": 825000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Linear%20Recurrence%20With%20Polynomial%20Coefficients.cpp"
    ]
  },
  "linear_sieve": {
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/algebra/prime-sieve-linear.html",
        "resource_title": "Linear Sieve | CP Algorithms",
        "is_starred": true
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/54090",
        "resource_comments": "",
        "resource_title": "[Tutorial] Math note — linear sieve  By Nisiyama_Suzune"
      }
    ],
    "is_data_complete": true,
    "topic_id": "linear_sieve",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Sieve%20Linear.cpp"
    ],
    "created_at": {
      "seconds": 1714192708,
      "nanoseconds": 269000000
    },
    "completion_count": 37
  },
  "lines_3d": {
    "created_at": {
      "seconds": 1714761631,
      "nanoseconds": 244000000
    },
    "topic_id": "lines_3d",
    "resources": [
      {
        "resource_title": "Chapter 3.3 Lines | CP Geo",
        "is_starred": true,
        "resource_url": "https://victorlecomte.com/cp-geo.pdf",
        "resource_comments": ""
      },
      {
        "resource_title": "Chapter 3.4 Angles between planes and lines | CP Geo",
        "is_starred": true,
        "resource_url": "https://victorlecomte.com/cp-geo.pdf",
        "resource_comments": ""
      }
    ],
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%203D.cpp#L163-L258"
    ]
  },
  "lines_and_segments_2d": {
    "created_at": {
      "seconds": 1714759291,
      "nanoseconds": 110000000
    },
    "completion_count": 5,
    "topic_id": "lines_and_segments_2d",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L74-L269"
    ],
    "problem_order": [
      "gym_100168f",
      "gym_100168e",
      "gym_100168i",
      "gym_100168g",
      "gym_100168h",
      "gym_100168m",
      "gym_100168n",
      "gym_100168o",
      "gym_100168j",
      "gym_100168k",
      "gym_100168p",
      "gym_100168r",
      "gym_100168q",
      "gym_100168s",
      "cses_2190",
      "kattis_segmentintersection",
      "kattis_segmentdistance",
      "uva_12301",
      "uva_191",
      "uva_378",
      "uva_11343",
      "uva_10902",
      "uva_858",
      "spoj_anttt",
      "kattis_birthdaycake",
      "gym_100168t",
      "uva_10122",
      "spoj_litepipe",
      "ural_1710",
      "lightoj_1432",
      "codechef_mindist"
    ],
    "is_data_complete": true,
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://victorlecomte.com/cp-geo.pdf",
        "resource_title": "Chapter 2.4 Lines and 2.5 Segments | CP Geo",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/geometry/segment-to-line.html",
        "resource_title": "Finding the equation of a line for a segment | CP Algorithms"
      },
      {
        "is_starred": true,
        "resource_url": "https://cp-algorithms.com/geometry/lines-intersection.html",
        "resource_title": "Intersection Point of Lines | CP Algorithms",
        "resource_comments": ""
      },
      {
        "resource_url": "https://cp-algorithms.com/geometry/check-segments-intersection.html",
        "resource_comments": "",
        "resource_title": "Check if two segments intersect | CP Algorithms"
      },
      {
        "resource_url": "https://cp-algorithms.com/geometry/segments-intersection.html",
        "resource_title": "Finding intersection of two segments | CP Algorithms",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_comments": "check starting from \"Examples\"",
        "resource_url": "https://codeforces.com/blog/entry/48122",
        "resource_title": "Geometry: 2D points and lines [Tutorial]  By Al.Cash"
      },
      {
        "resource_title": "Geometry Russian Contest Problems Translation",
        "resource_url": "https://www.dropbox.com/s/7v0hvsdacw08xd4/Translated%20Geometry%20Set.pdf?e=1",
        "resource_comments": "some of these problems have been used in the practice section below"
      }
    ]
  },
  "link_cut_cactus": {
    "is_data_complete": true,
    "resources": [
      {
        "resource_title": "动态仙人掌 系列题解之四 - link-cut cactus | VFleaKing",
        "resource_comments": "",
        "resource_url": "https://blog.csdn.net/VFleaKing/article/details/80748052"
      }
    ],
    "created_at": {
      "seconds": 1713759242,
      "nanoseconds": 21000000
    },
    "template_codes": [
      "https://github.com/Crystalrem/Link-Cut-Cactus"
    ],
    "topic_id": "link_cut_cactus"
  },
  "lis": {
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/sequences/longest_increasing_subsequence.html",
        "resource_title": "Longest increasing subsequence | CP Algorithms",
        "is_starred": true
      }
    ],
    "is_data_complete": true,
    "problem_order": [
      "leetcode_longest_increasing_subsequence",
      "cses_1145",
      "atcoder_dp_q",
      "spoj_dosa",
      "spoj_hmlis",
      "spoj_onexlis",
      "uva_4600",
      "codeforces_1304d",
      "codeforces_1682c",
      "atcoder_abc237_f",
      "atcoder_arc091_c",
      "codeforces_10d",
      "codeforces_76f",
      "acmsguru_99999521",
      "spoj_supper",
      "uva_3153",
      "atcoder_arc149_b",
      "uva_3637",
      "codeforces_486e",
      "atcoder_abc165_f",
      "codeforces_101821b",
      "atcoder_arc175_d",
      "atcoder_agc059_f"
    ],
    "topic_id": "lis",
    "template_codes": [],
    "created_at": {
      "seconds": 1714727975,
      "nanoseconds": 545000000
    },
    "completion_count": 32
  },
  "lis_range_query": {
    "problem_order": [
      "codechef_seaincr",
      "yosupo_static_range_lis_query",
      "loj_184",
      "cf_gym_101237i",
      "baekjoon_26164"
    ],
    "completion_count": 0,
    "resources": [
      {
        "is_starred": true,
        "resource_title": "[Tutorial] On Range LIS Queries, Part 1  By ko_osaga",
        "resource_url": "https://codeforces.com/blog/entry/111625",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "[Tutorial] On Range LIS Queries, Part 2  By ko_osaga",
        "resource_url": "https://codeforces.com/blog/entry/111807"
      },
      {
        "resource_comments": "solution to a special version",
        "resource_url": "https://codeforces.com/blog/entry/52726",
        "resource_title": "Range query to find Longest Increasing Subsequence Please Help  By vivace1"
      }
    ],
    "template_codes": [],
    "created_at": {
      "seconds": 1714729155,
      "nanoseconds": 645000000
    },
    "is_data_complete": true,
    "topic_id": "lis_range_query"
  },
  "list": {
    "topic_id": "list",
    "template_codes": [],
    "created_at": {
      "seconds": 1715113263,
      "nanoseconds": 589000000
    },
    "problem_order": [
      "aizu_alds1_3_c",
      "aizu_itp2_1_d"
    ],
    "completion_count": 157,
    "resources": [
      {
        "is_video_type": true,
        "resource_title": "List | C++ STL (Standard Template Library) | std::list  Knowledge Center",
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/watch?v=je7zlYfJf7Q&list=PL1w8k37X_6L9NXrP1D31hDTKcdAPIL0cG&index=7",
        "is_starred": true
      },
      {
        "resource_title": "C++ List | Programiz",
        "resource_url": "https://www.programiz.com/cpp-programming/list",
        "resource_comments": ""
      },
      {
        "resource_title": "Complete C++ STL in 1 Video | Time Complexity and Notes |  take U forward",
        "resource_comments": "check list section",
        "resource_url": "https://www.youtube.com/watch?v=RRVYpIET_RU",
        "is_video_type": true
      },
      {
        "resource_comments": "",
        "resource_url": "https://www.geeksforgeeks.org/list-cpp-stl/",
        "resource_title": "List in C++ Standard Template Library (STL) | Geeks for Geeks"
      }
    ],
    "is_data_complete": true
  },
  "logarithmic_bruteforce": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Miscellaneous/Logarithmic%20Subarray%20Aggregator.cpp"
    ],
    "resources": [],
    "created_at": {
      "seconds": 1714902552,
      "nanoseconds": 571000000
    },
    "is_data_complete": true,
    "completion_count": 6,
    "topic_id": "logarithmic_bruteforce"
  },
  "long_path_decomposition": {
    "topic_id": "long_path_decomposition",
    "created_at": {
      "seconds": 1715258422,
      "nanoseconds": 978000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Long%20Path%20Decomposition.cpp"
    ],
    "resources": [],
    "is_data_complete": true,
    "completion_count": 1
  },
  "loops": {
    "created_at": {
      "seconds": 1713661258,
      "nanoseconds": 191000000
    },
    "template_codes": [],
    "is_data_complete": true,
    "completion_count": 825,
    "resources": [
      {
        "is_video_type": true,
        "resource_url": "https://www.youtube.com/watch?v=gVmTVsAn6EI&list=PLzMcBGfZo4-lmGC8VW0iu6qfMHjy7gLQ3&index=10",
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "For Loops  | Tech With Tim"
      },
      {
        "resource_title": "C++ for Loop | Programiz",
        "resource_comments": "",
        "resource_url": "https://www.programiz.com/cpp-programming/for-loop"
      },
      {
        "resource_title": "While, Do While Loops & Break/Continue | Tech With Tim",
        "is_video_type": true,
        "resource_url": "https://www.youtube.com/watch?v=aOskrzlcBRY&list=PLzMcBGfZo4-lmGC8VW0iu6qfMHjy7gLQ3&index=11",
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "resource_title": "C++ while and do...while Loop | Programiz",
        "resource_comments": "",
        "resource_url": "https://www.programiz.com/cpp-programming/do-while-loop"
      },
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "C++ break Statement | Programiz",
        "resource_url": "https://www.programiz.com/cpp-programming/break-statement"
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://www.programiz.com/cpp-programming/continue-statement",
        "resource_title": "C++ continue Statement | Programiz"
      }
    ],
    "topic_id": "loops"
  },
  "lower_bound_on_bit": {
    "topic_id": "lower_bound_on_bit",
    "created_at": {
      "seconds": 1713056056,
      "nanoseconds": 225000000
    },
    "problem_order": [
      "timus_1896",
      "codeforces_1354d"
    ],
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/61364",
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "[Tutorial] Searching Binary Indexed Tree in O(log(N)) using Binary Lifting"
      }
    ],
    "is_data_complete": true,
    "template_codes": [
      "https://codeforces.com/blog/entry/61364#:~:text=an%20intuitive%20proof.-,Implementation,-%3A"
    ],
    "completion_count": 23
  },
  "lte_lemma": {
    "created_at": {
      "seconds": 1714478262,
      "nanoseconds": 765000000
    },
    "is_data_complete": true,
    "topic_id": "lte_lemma",
    "resources": [
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Lifting-the-exponent lemma | Wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Lifting-the-exponent_lemma"
      },
      {
        "resource_title": "Lifting The Exponent Lemma (LTE) | Amir Hossein Parvardi",
        "resource_url": "https://services.artofproblemsolving.com/download.php?id=YXR0YWNobWVudHMvMC9mL2I3NWVmM2MyZDRiYTFlN2EzMzQxMTI2ZmM3NTNjMTcxODFmNmYw&rn=TGlmdGluZyBUaGUgRXhwb25lbnQgLSBWZXJzaW9uIDUucGRm",
        "resource_comments": ""
      }
    ],
    "template_codes": []
  },
  "lucas_theorem": {
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://forthright48.com/lucas-theorem-proof-and-applications/",
        "resource_title": "Lucas Theorem – Proof and Applications | forthright48",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_title": "Lucas's theorem | Wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Lucas%27s_theorem"
      }
    ],
    "topic_id": "lucas_theorem",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Lucas%20Theorem.cpp"
    ],
    "problem_order": [
      "codechef_chksel",
      "spoj_hlp_rams",
      "spoj_dcepc13d"
    ],
    "created_at": {
      "seconds": 1713662041,
      "nanoseconds": 895000000
    },
    "is_data_complete": true,
    "completion_count": 12
  },
  "lyndon_factorization": {
    "is_data_complete": true,
    "template_codes": [
      "https://cp-algorithms.com/string/lyndon_factorization.html"
    ],
    "topic_id": "lyndon_factorization",
    "problem_order": [
      "yosupo_lyndon_factorization",
      "cses_1110"
    ],
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://cp-algorithms.com/string/lyndon_factorization.html",
        "resource_title": "Lyndon factorization | CP Algorithms"
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/106725",
        "resource_title": "Random notes on Lyndon decomposition  By ko_osaga"
      },
      {
        "resource_comments": "",
        "resource_title": "Simple Linear and Effectively Duval Algorithm for Lyndon Factorization  By SPyofgame,",
        "resource_url": "https://codeforces.com/blog/entry/89629"
      }
    ],
    "created_at": {
      "seconds": 1714651651,
      "nanoseconds": 668000000
    }
  },
  "main_lorentz_algorithm": {
    "resources": [
      {
        "resource_url": "https://cp-algorithms.com/string/main_lorentz.html",
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Finding repetitions | CP Algorithms"
      }
    ],
    "is_data_complete": true,
    "template_codes": [
      "https://cp-algorithms.com/string/main_lorentz.html"
    ],
    "topic_id": "main_lorentz_algorithm",
    "created_at": {
      "seconds": 1714652125,
      "nanoseconds": 50000000
    },
    "completion_count": 1
  },
  "maintaining_log_n_dsu": {
    "is_data_complete": true,
    "template_codes": [],
    "completion_count": 4,
    "problem_order": [
      "yosupo_range_parallel_unionfind",
      "csacademy_substring_restrictions",
      "cf_gym_103388l",
      "codechef_cowsheds",
      "atcoder_abc349_g"
    ],
    "resources": [
      {
        "resource_title": "Editorial of Substring Restrictions Problem | CS Academy",
        "resource_url": "https://csacademy.com/contest/archive/task/substring-restrictions/solution/",
        "resource_comments": ""
      },
      {
        "resource_title": "A comment by aryanc403",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/128367?#comment-1140215"
      }
    ],
    "created_at": {
      "seconds": 1713329887,
      "nanoseconds": 960000000
    },
    "topic_id": "maintaining_log_n_dsu"
  },
  "manachers_algorithm": {
    "topic_id": "manachers_algorithm",
    "resources": [
      {
        "resource_url": "https://cp-algorithms.com/string/manacher.html",
        "is_starred": true,
        "resource_title": "Manacher's Algorithm | CP Algorithms",
        "resource_comments": ""
      },
      {
        "resource_title": "Manacher's algorithm and code readability  By adamant",
        "resource_url": "https://codeforces.com/blog/entry/12143",
        "resource_comments": ""
      }
    ],
    "created_at": {
      "seconds": 1714649360,
      "nanoseconds": 956000000
    },
    "completion_count": 6,
    "is_data_complete": true,
    "problem_order": [
      "yosupo_enumerate_palindromes",
      "hdu_3948",
      "cses_1111",
      "uva_2470",
      "codeforces_1326d2",
      "cf_gym_101806q",
      "kattis_palindromes"
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Strings/Manachers.cpp"
    ]
  },
  "manhattan_chebyshev": {
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714852662,
      "nanoseconds": 5000000
    },
    "template_codes": [],
    "completion_count": 4,
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "Manhattan distance | Wiki",
        "resource_url": "https://simple.wikipedia.org/wiki/Manhattan_distance"
      },
      {
        "resource_comments": "",
        "resource_url": "https://en.wikipedia.org/wiki/Chebyshev_distance",
        "resource_title": "Chebyshev distance | Wiki"
      },
      {
        "resource_title": "Manhattan distance trick in higher dimensions  By kaldiuo",
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/57534"
      }
    ],
    "topic_id": "manhattan_chebyshev"
  },
  "manhattan_mst": {
    "topic_id": "manhattan_mst",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Manhattan%20MST.cpp"
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714036880,
      "nanoseconds": 872000000
    },
    "resources": [
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "MANHATTAN MINIMUM SPANNING TREE | LINE SWEEP ALGORITHMS | Topcoder",
        "resource_url": "https://www.topcoder.com/thrive/articles/Line%20Sweep%20Algorithms#:~:text=MANHATTAN%20MINIMUM%20SPANNING%20TREE"
      }
    ]
  },
  "map": {
    "problem_order": [
      "hackerrank_cpp_maps",
      "spoj_acmceg2b",
      "gym_381668d",
      "uva_10295",
      "codeforces_855a",
      "codeforces_4c",
      "uva_484",
      "uva_10282",
      "cses_1640",
      "cses_1661",
      "cses_1662",
      "cses_1641",
      "codeforces_903c",
      "cses_1642",
      "cses_1619",
      "spoj_homo",
      "codechef_cvote"
    ],
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "is_video_type": true,
        "resource_url": "https://www.youtube.com/watch?v=7mwgA9XFIEQ&list=PLzMcBGfZo4-lmGC8VW0iu6qfMHjy7gLQ3&index=17",
        "resource_title": "Maps | Tech With Tim"
      },
      {
        "resource_comments": "",
        "resource_url": "https://www.programiz.com/cpp-programming/map",
        "resource_title": "C++ Map | Programiz"
      },
      {
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/watch?v=w1vDg3iBbLA&list=PL1w8k37X_6L9NXrP1D31hDTKcdAPIL0cG&index=16",
        "is_video_type": true,
        "resource_title": "Map | C++ STL (Standard Template Library) | std::map  Knowledge Center"
      },
      {
        "resource_comments": "",
        "resource_url": "https://www.geeksforgeeks.org/map-associative-containers-the-c-standard-template-library-stl/",
        "resource_title": "Map in C++ Standard Template Library (STL) | Geeks for Geeks"
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://www.programiz.com/cpp-programming/unordered-map",
        "resource_title": "C++ Unordered Map | Programiz"
      },
      {
        "resource_title": "unordered_map in C++ STL | Geeks for Geeks",
        "resource_comments": "",
        "resource_url": "https://www.geeksforgeeks.org/unordered_map-in-cpp-stl/"
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=RRVYpIET_RU",
        "resource_title": "Complete C++ STL in 1 Video | Time Complexity and Notes |  take U forward",
        "resource_comments": "check map and unordered map sections",
        "is_video_type": true
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/62393",
        "resource_comments": "basically use custom hashing when using unordered map",
        "is_starred": true,
        "resource_title": "Blowing up unordered_map, and how to stop getting hacked on it  By neal"
      }
    ],
    "created_at": {
      "seconds": 1715112610,
      "nanoseconds": 295000000
    },
    "template_codes": [],
    "is_data_complete": true,
    "completion_count": 213,
    "topic_id": "map"
  },
  "martingale": {
    "resources": [
      {
        "resource_title": "Martingale (probability theory) | Wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Martingale_(probability_theory)",
        "resource_comments": ""
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/110801",
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Probability 101, the intuition behind martingales and solving problems with them  By nor"
      }
    ],
    "is_data_complete": true,
    "topic_id": "martingale",
    "template_codes": [],
    "created_at": {
      "seconds": 1714507398,
      "nanoseconds": 304000000
    }
  },
  "matching_game_on_a_graph": {
    "created_at": {
      "seconds": 1714740544,
      "nanoseconds": 933000000
    },
    "resources": [
      {
        "resource_url": "https://discuss.codechef.com/t/hamilg-editorial/11310",
        "resource_title": "HAMILG - Editorial",
        "resource_comments": "",
        "is_starred": true
      }
    ],
    "topic_id": "matching_game_on_a_graph",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Game%20Theory/Matching%20Game%20On%20A%20Graph.cpp"
    ],
    "is_data_complete": true
  },
  "matching_using_determinants": {
    "resources": [
      {
        "resource_comments": "check idea 9",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/104466",
        "resource_title": "A bit more of general ideas  By adamant"
      },
      {
        "resource_title": "Editorial of Divisible Matching",
        "resource_comments": "",
        "resource_url": "https://csacademy.com/contest/round-67/task/divisible-matching/solution/",
        "is_starred": true
      }
    ],
    "template_codes": [],
    "completion_count": 0,
    "is_data_complete": true,
    "topic_id": "matching_using_determinants",
    "created_at": {
      "seconds": 1715255520,
      "nanoseconds": 580000000
    }
  },
  "matrix_exponentiation": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Matrix%20Exponentiation.cpp",
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Matrix%20Exponentiation%20With%20Polynomial%20Coefficients.cpp"
    ],
    "resources": [
      {
        "is_video_type": true,
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/80195",
        "resource_title": "Matrix Exponentiation tutorial + training contest  By Errichto",
        "resource_comments": ""
      },
      {
        "resource_title": "Matrix Exponentiation | I, ME AND MYSELF !!!",
        "is_starred": true,
        "resource_url": "https://zobayer.blogspot.com/2010/11/matrix-exponentiation.html",
        "resource_comments": ""
      },
      {
        "resource_title": "[Tutorial]A Complete Guide on Matrix Exponentiation  By lazyneuron",
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/67776"
      },
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Cool tricks using Matrix Exponential  By tweety",
        "resource_url": "https://codeforces.com/blog/entry/43225"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/19046",
        "resource_comments": "",
        "resource_title": "[Discussion] Recurrence using Matrix exponentiation  By allrounder"
      },
      {
        "resource_comments": "",
        "resource_title": "Min-plus matrix multiplication | Wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Min-plus_matrix_multiplication"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/108615",
        "resource_comments": "",
        "resource_title": "Matrix Exponentiation Guide  By bfs.07"
      },
      {
        "resource_title": "Matrix Power Applications ppt | Mostafa",
        "resource_comments": "",
        "resource_url": "https://github.com/mostafa-saad/ArabicCompetitiveProgramming/blob/master/04%20Math/Algorithms_Number_Theory_06_Matrix_Power_Applications.pptx"
      }
    ],
    "problem_order": [
      "yosupo_matrix_product",
      "yosupo_pow_of_matrix",
      "cses_1722",
      "uva_10229",
      "cf_gym_102644a",
      "uva_10870",
      "uva_10754",
      "uva_11551",
      "spoj_summul",
      "cf_gym_102644b",
      "cses_1723",
      "cses_1724",
      "spoj_tetrahrd",
      "spoj_seq",
      "codeforces_1106f",
      "spoj_fibpwsum",
      "spoj_itrix12e",
      "cf_gym_316783b",
      "cf_gym_316783c",
      "cf_gym_316783d",
      "cf_gym_316783e",
      "codechef_hlpmil",
      "codeforces_821e",
      "spoj_pboard",
      "cf_gym_100199e",
      "lightoj_tiles",
      "lightoj_unlucky_strings",
      "lightoj_kings_in_chessboard",
      "hackerearth_abcd_strings",
      "codeforces_147b",
      "cf_gym_102644e",
      "cf_gym_102644g",
      "cf_gym_102644h",
      "cf_gym_102644i",
      "spoj_flib",
      "cf_gym_105164b",
      "codeforces_691e",
      "codeforces_718c",
      "uva_11651",
      "atcoder_dp_r",
      "codeforces_392c",
      "codeforces_755g"
    ],
    "created_at": {
      "seconds": 1714459647,
      "nanoseconds": 914000000
    },
    "completion_count": 25,
    "is_data_complete": true,
    "topic_id": "matrix_exponentiation"
  },
  "matroid_intersection": {
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/69287",
        "resource_title": "[Tutorial] Matroid intersection in simple words  By ATSTNG",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_url": "https://en.wikipedia.org/wiki/Matroid",
        "resource_comments": "",
        "resource_title": "Matroid | Wiki"
      }
    ],
    "problem_order": [
      "cf_gym_102156d",
      "spoj_coin",
      "uri_2128",
      "codechef_servers",
      "codechef_cnnct2",
      "qoj_6402",
      "cf_gym_103373i",
      "kattis_rainbowgraph",
      "codeforces_1556h",
      "codeforces_1284g"
    ],
    "created_at": {
      "seconds": 1714848685,
      "nanoseconds": 781000000
    },
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Miscellaneous/Matroid%20Intersection%20Color%20Linear%20Matroid.cpp",
      "https://github.com/ShahjalalShohag/code-library/blob/main/Miscellaneous/Matroid%20Intersection%20Color%20Graphic%20Matroid.cpp",
      "https://github.com/AnikSarker/ACM-Library/blob/master/Matroid/graphicGraphicMatroid.cpp"
    ],
    "topic_id": "matroid_intersection"
  },
  "max_cut_in_a_planar_graph": {
    "topic_id": "max_cut_in_a_planar_graph",
    "resources": [],
    "created_at": {
      "seconds": 1714151359,
      "nanoseconds": 597000000
    },
    "template_codes": [],
    "is_data_complete": true
  },
  "max_flow": {
    "topic_id": "max_flow",
    "completion_count": 11,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Dinics%20Algorithm.cpp",
      "https://github.com/kth-competitive-programming/kactl/blob/main/content/graph/PushRelabel.h"
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714127855,
      "nanoseconds": 343000000
    },
    "resources": [
      {
        "resource_url": "https://cp-algorithms.com/graph/edmonds_karp.html",
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Maximum flow - Ford-Fulkerson and Edmonds-Karp | CP Algorithms"
      },
      {
        "resource_comments": "",
        "is_video_type": true,
        "resource_url": "https://www.youtube.com/watch?v=LdOnanfc5TM",
        "resource_title": "Max Flow Ford Fulkerson | Network Flow | Graph Theory | WilliamFiset"
      },
      {
        "is_starred": true,
        "resource_title": "Edmonds Karp Algorithm | Network Flow | Graph Theory  WilliamFiset",
        "is_video_type": true,
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/watch?v=RppuJYwlcI8"
      },
      {
        "is_starred": true,
        "resource_url": "https://cp-algorithms.com/graph/edmonds_karp.html#max-flow-min-cut-theorem",
        "resource_comments": "",
        "resource_title": "Max-flow min-cut theorem | CP Algorithms"
      },
      {
        "resource_title": "Maximum flow - Push-relabel algorithm | CP Algorithms",
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/graph/push-relabel.html"
      },
      {
        "resource_url": "https://cp-algorithms.com/graph/push-relabel-faster.html",
        "resource_comments": "",
        "resource_title": "Maximum flow - Push-relabel method improved | CP Algorithms"
      },
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Maximum flow - Dinic's algorithm | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/graph/dinic.html"
      },
      {
        "is_starred": true,
        "resource_url": "https://usaco.guide/adv/max-flow?lang=cpp",
        "resource_comments": "",
        "resource_title": "Maximum Flow | USACO Guide"
      },
      {
        "resource_comments": "",
        "resource_url": "https://usaco.guide/CPH.pdf#page=191",
        "is_starred": true,
        "resource_title": "Flows and cuts | CPH"
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=M6cm8UeeziI",
        "is_video_type": true,
        "resource_title": "Dinic's Algorithm | Network Flow | Graph Theory | WilliamFiset",
        "is_starred": false,
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "[Tutorial] My way of understanding Dinitz's (\"Dinic's\") algorithm  By -is-this-fft-",
        "resource_url": "https://codeforces.com/blog/entry/104960"
      },
      {
        "resource_title": "[Tutorial] Maximum Flow and Minimum Cost Maximum Flow (to prove greedy)  By maomao90",
        "resource_url": "https://codeforces.com/blog/entry/110328",
        "resource_comments": "check until Min Cost Max Flow"
      },
      {
        "resource_url": "https://en.wikipedia.org/wiki/Menger%27s_theorem",
        "resource_title": "Menger's theorem | Wiki",
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_title": "Unweighted Bipartite Matching | Network Flow | Graph Theory  WilliamFiset",
        "resource_url": "https://www.youtube.com/watch?v=GhjwOiJ4SqU",
        "is_video_type": true
      }
    ]
  },
  "maximum_area_of_a_polygon_using_given_lengths_in_ccw_order": {
    "resources": [
      {
        "resource_title": "Maximum area enclosure given side lengths",
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://math.stackexchange.com/questions/1930607/maximum-area-enclosure-given-side-lengths"
      }
    ],
    "topic_id": "maximum_area_of_a_polygon_using_given_lengths_in_ccw_order",
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L1290-L1384"
    ],
    "created_at": {
      "seconds": 1714762948,
      "nanoseconds": 705000000
    }
  },
  "maximum_area_of_a_triangle_from_given_lengths": {
    "resources": [],
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Geometry/Maximum%20Area%20of%20Triangle,%20Given%20are%20Lengths.cpp"
    ],
    "created_at": {
      "seconds": 1714826366,
      "nanoseconds": 888000000
    },
    "topic_id": "maximum_area_of_a_triangle_from_given_lengths"
  },
  "maximum_circle_cover_2d": {
    "is_data_complete": true,
    "topic_id": "maximum_circle_cover_2d",
    "created_at": {
      "seconds": 1714763142,
      "nanoseconds": 856000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L1178-L1218"
    ],
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "What is an algorithm for enclosing the maximum number of points in a 2-D plane with a fixed-radius circle? | Quora",
        "resource_url": "https://www.quora.com/What-is-an-algorithm-for-enclosing-the-maximum-number-of-points-in-a-2-D-plane-with-a-fixed-radius-circle"
      }
    ]
  },
  "maximum_clique": {
    "completion_count": 5,
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714101645,
      "nanoseconds": 273000000
    },
    "topic_id": "maximum_clique",
    "problem_order": [
      "codeforces_1105e",
      "codeforces_527d",
      "kattis_friends",
      "codeforces_566f",
      "codeforces_1529e"
    ],
    "resources": [
      {
        "resource_url": "https://en.wikipedia.org/wiki/Clique_(graph_theory)",
        "is_starred": false,
        "resource_title": "Clique (graph theory) | Wiki",
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_url": "https://en.wikipedia.org/wiki/Bron%E2%80%93Kerbosch_algorithm",
        "resource_comments": "",
        "resource_title": "Bron–Kerbosch algorithm | Wiki"
      },
      {
        "resource_title": "Editorial of Problem E",
        "resource_url": "https://codeforces.com/blog/entry/64664",
        "resource_comments": "it shows a different way to compute the clique",
        "is_starred": true
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Maximum%20Clique.cpp",
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Number%20of%20Different%20Cliques.cpp"
    ]
  },
  "maximum_closure_problem": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Maximum%20Closure%20Problem.cpp"
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714132013,
      "nanoseconds": 438000000
    },
    "problem_order": [
      "atcoder_arc085_c",
      "codeforces_1473f",
      "csacademy_fashion",
      "kattis_openpitmining",
      "codeforces_1082g",
      "codeforces_1146g"
    ],
    "completion_count": 2,
    "topic_id": "maximum_closure_problem",
    "resources": [
      {
        "resource_title": "Closure problem | Wiki",
        "resource_comments": "",
        "resource_url": "https://en.wikipedia.org/wiki/Closure_problem",
        "is_starred": true
      },
      {
        "resource_title": "[Tutorial, Flows] Project Selection Problem  By AlexLuchianov",
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/101354"
      }
    ]
  },
  "maximum_density_subgraph": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Maximum%20Density%20Subgraph.cpp"
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714133228,
      "nanoseconds": 165000000
    },
    "resources": [
      {
        "resource_url": "https://www2.eecs.berkeley.edu/Pubs/TechRpts/1984/CSD-84-171.pdf",
        "is_starred": true,
        "resource_title": "Finding a Maximum Density Subgraph | Goldberg",
        "resource_comments": ""
      }
    ],
    "topic_id": "maximum_density_subgraph"
  },
  "maximum_dist_from_polygon_to_polygon_2d": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L978-L997"
    ],
    "created_at": {
      "seconds": 1714762757,
      "nanoseconds": 3000000
    },
    "is_data_complete": true,
    "topic_id": "maximum_dist_from_polygon_to_polygon_2d",
    "resources": [
      {
        "resource_comments": "check Chapter 2.3 The maximum distance between two convex polygons",
        "resource_url": "https://www.nlc-bnc.ca/obj/s4/f2/dsk1/tape7/PQDD_0027/MQ50856.pdf?oclc_number=1006918422",
        "resource_title": "COMPUTATIONAL GEOMETRY WITH THE ROTATING CALIPERS by Hormoz Pirzadeh"
      }
    ]
  },
  "maximum_independent_set": {
    "completion_count": 4,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Maximum%20Clique.cpp",
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Maximum%20Clique%20and%20MIS%20Super%20Fast.cpp"
    ],
    "topic_id": "maximum_independent_set",
    "problem_order": [
      "yosupo_maximum_independent_set",
      "codeforces_1105e",
      "spoj_maxiset",
      "kattis_sensor",
      "codeforces_1198c"
    ],
    "resources": [
      {
        "resource_url": "https://en.wikipedia.org/wiki/Independent_set_(graph_theory)",
        "resource_title": "Independent set (graph theory) | Wiki",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_title": "Maximal independent set | Wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Maximal_independent_set"
      },
      {
        "resource_comments": "it shows a different way to compute the MIS",
        "resource_title": "Editorial of Problem E",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/64664"
      },
      {
        "resource_title": "Bron–Kerbosch algorithm",
        "resource_comments": "",
        "resource_url": "https://en.wikipedia.org/wiki/Bron%E2%80%93Kerbosch_algorithm"
      },
      {
        "resource_comments": "",
        "resource_title": "Maximum Independent Set in Trees (Linear Time Algorithm) | Easy Theory",
        "is_starred": true,
        "resource_url": "https://www.youtube.com/watch?v=-LN5-GvV-bQ"
      }
    ],
    "created_at": {
      "seconds": 1714102454,
      "nanoseconds": 875000000
    },
    "is_data_complete": true
  },
  "maximum_independent_set_in_bipartite_graphs": {
    "template_codes": [],
    "created_at": {
      "seconds": 1714103072,
      "nanoseconds": 713000000
    },
    "completion_count": 3,
    "resources": [
      {
        "resource_title": "Maximum Independent Set in Bipartite Graphs | Ali Ibrahim",
        "resource_url": "https://ali-ibrahim137.github.io/competitive/programming/2020/01/02/maximum-independent-set-in-bipartite-graphs.html",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_title": "Kőnig's theorems through minimum cut in bipartite graphs  By adamant",
        "resource_url": "https://codeforces.com/blog/entry/105697",
        "resource_comments": ""
      }
    ],
    "topic_id": "maximum_independent_set_in_bipartite_graphs",
    "is_data_complete": true
  },
  "maximum_inscribed_circle_2d": {
    "topic_id": "maximum_inscribed_circle_2d",
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L1219-L1243"
    ],
    "created_at": {
      "seconds": 1714763114,
      "nanoseconds": 783000000
    },
    "resources": []
  },
  "mcm": {
    "created_at": {
      "seconds": 1714729754,
      "nanoseconds": 59000000
    },
    "completion_count": 17,
    "template_codes": [],
    "topic_id": "mcm",
    "problem_order": [
      "aizu_alds1_10_b",
      "spoj_mixtures"
    ],
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://usaco.guide/gold/dp-ranges?lang=cpp",
        "resource_comments": "",
        "resource_title": "Range DP | USACO Guide"
      },
      {
        "resource_title": "Matrix Chain Multiplication | DP-8 | Geeks for Geeks",
        "resource_url": "https://www.geeksforgeeks.org/matrix-chain-multiplication-dp-8/",
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_title": "Some Interval DP Problems and State Reduction  By lelbaba",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/108850"
      }
    ],
    "is_data_complete": true
  },
  "meet_in_the_middle": {
    "is_data_complete": true,
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://www.youtube.com/watch?v=18sJ3mK173s",
        "resource_title": "Meet in the Middle | Tutorial & Problems | Errichto Hard Algorithms",
        "is_video_type": true
      },
      {
        "is_starred": true,
        "resource_url": "https://usaco.guide/CPH.pdf#page=64",
        "resource_comments": "",
        "resource_title": "5.5 Meet in the middle | CPH"
      },
      {
        "resource_comments": "",
        "resource_title": "Meet In The Middle | USACO Guide",
        "resource_url": "https://usaco.guide/gold/meet-in-the-middle?lang=cpp"
      }
    ],
    "template_codes": [
      "https://usaco.guide/gold/meet-in-the-middle?lang=cpp#meet-in-the-middle-solution"
    ],
    "created_at": {
      "seconds": 1714850914,
      "nanoseconds": 788000000
    },
    "problem_order": [
      "cses_1628",
      "spoj_subsums",
      "codeforces_1006f",
      "cf_group_307527j",
      "yosupo_maximum_independent_set"
    ],
    "completion_count": 15,
    "topic_id": "meet_in_the_middle"
  },
  "merge_sort": {
    "problem_order": [
      "gym_324997d",
      "aizu_alds1_5_b",
      "spoj_invcnt",
      "spoj_bubblesort"
    ],
    "created_at": {
      "seconds": 1715159071,
      "nanoseconds": 773000000
    },
    "completion_count": 140,
    "is_data_complete": true,
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Merge Sort Algorithm | Programiz",
        "resource_url": "https://www.programiz.com/dsa/merge-sort"
      },
      {
        "is_video_type": true,
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/watch?v=-3u1C1URNZY",
        "is_starred": true,
        "resource_title": "Understanding Mergesort: Sorting Made Simple | Recursion Series  | WilliamFiset"
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=5Z9dn2WTg9o",
        "resource_comments": "",
        "is_video_type": true,
        "is_starred": true,
        "resource_title": "Merge Sort | Manim Animation [4K] | CuriousWalk"
      },
      {
        "is_video_type": true,
        "resource_title": "MERGE SORT ALGORITHM | Sorting Algorithm | DSA | GeeksforGeeks",
        "resource_url": "https://www.youtube.com/watch?v=JSceec-wEyw",
        "resource_comments": ""
      },
      {
        "resource_comments": "select Merge Sort",
        "resource_title": "Sorting Algorithm Visualizer | VisuAlgo",
        "resource_url": "https://visualgo.net/en/sorting",
        "is_starred": true
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Basics/Merge%20Sort.cpp"
    ],
    "topic_id": "merge_sort"
  },
  "merge_sort_tree": {
    "completion_count": 44,
    "is_data_complete": true,
    "resources": [
      {
        "resource_url": "https://discuss.codechef.com/t/merge-sort-tree-tutorial/14277/1",
        "resource_title": "Merge Sort Tree - Tutorial | arunnsit",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/122263",
        "resource_comments": "",
        "resource_title": "Merge Sort Tree (and similar stuff) | By Abito"
      },
      {
        "resource_title": "Point Updates in Merge Sort Trees By suvro_coder",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/75304"
      }
    ],
    "problem_order": [
      "spoj_kquery",
      "codeforces_369e",
      "cses_1144"
    ],
    "created_at": {
      "seconds": 1713821726,
      "nanoseconds": 733000000
    },
    "template_codes": [
      "https://codeforces.com/blog/entry/122263"
    ],
    "topic_id": "merge_sort_tree"
  },
  "mex_of_all_subarrays": {
    "topic_id": "mex_of_all_subarrays",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Miscellaneous/MEX%20of%20all%20Subarrays.cpp"
    ],
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/67366",
        "is_starred": true,
        "resource_title": "Editorial of 1148H - Holy Diver",
        "resource_comments": "it proposes a solution similar to the template code below."
      },
      {
        "resource_title": "Editorial of F | YouKn0wWho",
        "resource_url": "https://toph.co/p/f/editorial",
        "resource_comments": "it proposes a  Segment Tree Beats solution.",
        "is_starred": true
      },
      {
        "resource_title": "Offline Range MEX queries in O(log n)  By one_autum_leaf",
        "resource_url": "https://codeforces.com/blog/entry/117688",
        "resource_comments": ""
      }
    ],
    "created_at": {
      "seconds": 1714910880,
      "nanoseconds": 649000000
    },
    "completion_count": 1,
    "is_data_complete": true
  },
  "miller_rabin_primality_test": {
    "completion_count": 19,
    "created_at": {
      "seconds": 1714202872,
      "nanoseconds": 628000000
    },
    "problem_order": [
      "yosupo_primality_test",
      "spoj_pon"
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Miller%20Rabin.cpp"
    ],
    "topic_id": "miller_rabin_primality_test",
    "is_data_complete": true,
    "resources": [
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Primality tests | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/algebra/primality_tests.html"
      },
      {
        "resource_title": "Miller–Rabin primality test | Wiki",
        "resource_comments": "",
        "resource_url": "https://en.wikipedia.org/wiki/Miller%E2%80%93Rabin_primality_test"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/122130",
        "resource_title": "About Miller Rabbin  By Abel51",
        "resource_comments": ""
      },
      {
        "resource_title": "A proof of error bound of Miller-Rabin prime test  By randop",
        "resource_url": "https://codeforces.com/blog/entry/98102",
        "resource_comments": ""
      }
    ]
  },
  "min_25_sieve": {
    "created_at": {
      "seconds": 1714202408,
      "nanoseconds": 301000000
    },
    "problem_order": [
      "yosupo_sum_of_totient_function",
      "luogu_p4213",
      "luogu_p5325",
      "spoj_assieve",
      "loj_6053"
    ],
    "is_data_complete": true,
    "topic_id": "min_25_sieve",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Min_25%20Sieve.cpp"
    ],
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/92703",
        "is_starred": true,
        "resource_title": "On the Min25 sieve and extensions / SPOJ ASSIEVE  By box",
        "resource_comments": ""
      },
      {
        "resource_url": "https://oi-wiki.org/math/number-theory/min-25/",
        "is_starred": true,
        "resource_title": "Min_25 sieve | OI Wiki",
        "resource_comments": ""
      },
      {
        "resource_url": "https://zhuanlan.zhihu.com/p/60378354",
        "is_starred": true,
        "resource_title": "新版min25筛（O(n^(2/3))）详解 | dengtesla",
        "resource_comments": ""
      },
      {
        "resource_title": "The prefix-sum of multiplicative function: the black algorithm | baihacker",
        "resource_url": "https://baihacker.github.io/main/2020/The_prefix-sum_of_multiplicative_function_the_black_algorithm.html",
        "resource_comments": ""
      }
    ]
  },
  "min_cost_max_flow": {
    "created_at": {
      "seconds": 1714046880,
      "nanoseconds": 770000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Min%20Cost%20Max%20Flow.cpp"
    ],
    "completion_count": 9,
    "is_data_complete": true,
    "resources": [
      {
        "resource_title": "Minimum-cost flow - Successive shortest path algorithm | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/graph/min_cost_flow.html",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "resource_title": "[Tutorial] Minimum cost (maximum) flow  By -is-this-fft-",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/105330"
      },
      {
        "resource_title": "[Tutorial] More about minimum cost flows: potentials and Dinitz  By -is-this-fft-",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/105658",
        "is_starred": true
      },
      {
        "resource_comments": "MCMF with potentials",
        "resource_url": "https://codeforces.com/blog/entry/95823",
        "is_starred": true,
        "resource_title": "[Tutorial] Graph Potentials, Johnson's Algorithm, and Min Cost Max Flow | Monogon"
      },
      {
        "resource_url": "https://cp-algorithms.com/graph/Assignment-problem-min-flow.html",
        "resource_title": "Solving assignment problem using min-cost-flow | CP Algorithms",
        "resource_comments": "",
        "is_starred": false
      },
      {
        "resource_comments": "",
        "resource_url": "https://usaco.guide/adv/min-cost-flow?lang=cpp",
        "resource_title": "Minimum Cost Flow | USACO Guide"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/110328",
        "resource_title": "[Tutorial] Maximum Flow and Minimum Cost Maximum Flow (to prove greedy)  By maomao90",
        "resource_comments": ""
      },
      {
        "resource_url": "https://www.topcoder.com/thrive/articles/Minimum%20Cost%20Flow%20Part%20Two:%20Algorithms",
        "resource_title": "MINIMUM COST FLOW PART TWO: ALGORITHMS | Topcoder",
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_title": "[Tutorial] Simulating Cost Flow  By smax",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/118391"
      }
    ],
    "problem_order": [
      "cses_2121",
      "yosupo_min_cost_b_flow",
      "cses_2129",
      "cf_gym_101398a",
      "cses_2131",
      "codeforces_818g",
      "cses_2130",
      "codeforces_1288f",
      "atcoder_abc247_g",
      "lightoj_component_placement",
      "codeforces_884f",
      "lightoj_space_shuttle_experiments",
      "codeforces_1510b",
      "codeforces_1107f",
      "codeforces_1082g",
      "codeforces_802c"
    ],
    "topic_id": "min_cost_max_flow"
  },
  "min_cost_max_flow_with_negative_cycles": {
    "resources": [
      {
        "resource_title": "A comment by dacin21",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/57018?#comment-406848"
      }
    ],
    "created_at": {
      "seconds": 1714131435,
      "nanoseconds": 740000000
    },
    "is_data_complete": true,
    "topic_id": "min_cost_max_flow_with_negative_cycles",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Min%20Cost%20Max%20Flow%20with%20Negative%20Cycles.cpp"
    ]
  },
  "min_cut_in_a_planar_graph": {
    "created_at": {
      "seconds": 1714133336,
      "nanoseconds": 129000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Min%20Cut%20in%20a%20Planar%20Graph.cpp"
    ],
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "Min st-Cut of a Planar Graph in O(n log log n) Time | Christian Wulff-Nilsen ",
        "resource_url": "https://arxiv.org/pdf/1007.3609"
      }
    ],
    "topic_id": "min_cut_in_a_planar_graph",
    "is_data_complete": true,
    "completion_count": 1
  },
  "min_of_mod_of_arithmetic_progression": {
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://maspypy.com/library-checker-min-of-mod-of-linear",
        "resource_title": "[Library Checker] Min of Mod of Linear | maspy"
      }
    ],
    "template_codes": [
      "https://judge.yosupo.jp/submission/190642"
    ],
    "topic_id": "min_of_mod_of_arithmetic_progression",
    "created_at": {
      "seconds": 1714378655,
      "nanoseconds": 313000000
    },
    "is_data_complete": true
  },
  "min_plus_convolution_convex_and_arbitrary": {
    "created_at": {
      "seconds": 1714381542,
      "nanoseconds": 296000000
    },
    "resources": [
      {
        "resource_url": "https://web.cs.unlv.edu/larmore/Courses/CSC477/monge.pdf",
        "resource_title": "The SMAWK Algorithm",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/110844",
        "resource_title": "SMAWK algorithm as an alternative for D&C optimization  By ko_osaga, "
      },
      {
        "is_starred": true,
        "resource_title": "[Tutorial] Knapsack, Subset Sum and the (max,+) Convolution  By errorgorn",
        "resource_url": "https://codeforces.com/blog/entry/98663",
        "resource_comments": "check (max,+) convolution "
      }
    ],
    "topic_id": "min_plus_convolution_convex_and_arbitrary",
    "template_codes": [
      "https://judge.yosupo.jp/submission/185910"
    ],
    "is_data_complete": true
  },
  "min_plus_convolution_convex_and_convex": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Miscellaneous/Min%20Plus%20Convolution%20(Convex%20and%20Convex).cpp"
    ],
    "is_data_complete": true,
    "completion_count": 1,
    "topic_id": "min_plus_convolution_convex_and_convex",
    "created_at": {
      "seconds": 1714381523,
      "nanoseconds": 292000000
    },
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/98663",
        "resource_comments": "check (max,+) convolution when both arrays are concave",
        "is_starred": true,
        "resource_title": "[Tutorial] Knapsack, Subset Sum and the (max,+) Convolution  By errorgorn"
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "A comment by square1001",
        "resource_url": "https://codeforces.com/blog/entry/75925?#comment-602354"
      }
    ]
  },
  "minimum_diameter_spanning_tree": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Minimum%20Diameter%20Spanning%20Tree.cpp"
    ],
    "is_data_complete": true,
    "resources": [
      {
        "resource_url": "https://web.archive.org/web/20160309101249/https://adn.botao.hu/adn-backup/blog/attachments/month_0705/32007531153238.pdf",
        "resource_comments": "",
        "resource_title": "Explanation of Problem C The GbAaY Kingdom"
      }
    ],
    "problem_order": [
      "spoj_pt07c",
      "spoj_mdst",
      "codeforces_266d"
    ],
    "topic_id": "minimum_diameter_spanning_tree",
    "created_at": {
      "seconds": 1714036414,
      "nanoseconds": 689000000
    }
  },
  "minimum_enclosing_circle_2d": {
    "is_data_complete": true,
    "topic_id": "minimum_enclosing_circle_2d",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L795-L818"
    ],
    "created_at": {
      "seconds": 1714762257,
      "nanoseconds": 15000000
    },
    "completion_count": 2,
    "resources": [
      {
        "resource_title": "Smallest-circle problem | Wiki",
        "resource_comments": "",
        "resource_url": "https://en.wikipedia.org/wiki/Smallest-circle_problem",
        "is_starred": true
      },
      {
        "resource_title": "Minimum enclosing circle using Welzl’s algorithm | Geeks for Geeks",
        "is_starred": true,
        "resource_url": "https://www.geeksforgeeks.org/minimum-enclosing-circle-using-welzls-algorithm/",
        "resource_comments": ""
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/112245?#comment-1000097",
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Commented out code about Welzl's Algorithm"
      },
      {
        "resource_comments": "",
        "resource_url": "http://www.cs.cmu.edu/~15451-s22/lectures/lec21-SEC-beamer.pdf",
        "resource_title": "Smallest Enclosing Circle Slides",
        "is_starred": true
      },
      {
        "resource_title": "How to find the minimum enclosing circle of a set of points  ZeroKelvinTutorials",
        "resource_url": "https://www.youtube.com/watch?v=j5t2tYsM2mM",
        "resource_comments": "",
        "is_video_type": true
      },
      {
        "resource_title": "Simple approach of Smallest Circle problem: Hill Climbing  Tozan Southerpacks Redcoder",
        "is_starred": true,
        "resource_url": "https://www.youtube.com/watch?v=WGOSX6d17TU",
        "resource_comments": "",
        "is_video_type": true
      }
    ],
    "problem_order": [
      "atcoder_abc151_f",
      "spoj_qcj4",
      "spoj_aliens",
      "gym_102006i",
      "kattis_weirdflecksbutok"
    ]
  },
  "minimum_enclosing_rectangle_2d": {
    "resources": [],
    "topic_id": "minimum_enclosing_rectangle_2d",
    "created_at": {
      "seconds": 1714762205,
      "nanoseconds": 689000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L772-L794"
    ]
  },
  "minimum_enclosing_sphere_3d": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%203D.cpp#L748-L766"
    ],
    "topic_id": "minimum_enclosing_sphere_3d",
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://www.youtube.com/watch?v=WGOSX6d17TU",
        "is_video_type": true,
        "resource_title": "Simple approach of Smallest Circle problem: Hill Climbing  Tozan Southerpacks Redcoder"
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Smallest Enclosing Circle/Sphere Problem  By hongjun-7",
        "resource_url": "https://codeforces.com/blog/entry/23554"
      }
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714807056,
      "nanoseconds": 380000000
    }
  },
  "minimum_mean_weight_cycle": {
    "created_at": {
      "seconds": 1714048648,
      "nanoseconds": 808000000
    },
    "topic_id": "minimum_mean_weight_cycle",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Minimum%20Mean%20Weight%20Cycle.cpp"
    ],
    "is_data_complete": true,
    "resources": [
      {
        "resource_comments": "there is a solution with better complexity, check the template code to understand better",
        "resource_url": "https://www.geeksforgeeks.org/karps-minimum-mean-average-weight-cycle-algorithm/",
        "resource_title": "Karp’s minimum mean (or average) weight cycle algorithm | Geeks For Geeks"
      }
    ]
  },
  "minimum_palindrome_factorization": {
    "created_at": {
      "seconds": 1714648994,
      "nanoseconds": 878000000
    },
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "A Subquadratic Algorithm for Minimum Palindromic Factorization",
        "resource_url": "https://arxiv.org/abs/1403.2431"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Strings/Minimum%20Palindrome%20Factorization.cpp"
    ],
    "is_data_complete": true,
    "topic_id": "minimum_palindrome_factorization"
  },
  "minimum_weight_cycle_for_each_edge": {
    "topic_id": "minimum_weight_cycle_for_each_edge",
    "completion_count": 4,
    "resources": [],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714048560,
      "nanoseconds": 759000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Minimum%20Weight%20Cycle%20For%20Each%20Edge.cpp"
    ]
  },
  "minimum_weight_cycle_for_each_vertex": {
    "completion_count": 4,
    "resources": [],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Minimum%20Weight%20Cycle%20For%20Each%20Vertex.cpp"
    ],
    "topic_id": "minimum_weight_cycle_for_each_vertex",
    "created_at": {
      "seconds": 1714048508,
      "nanoseconds": 211000000
    },
    "is_data_complete": true
  },
  "minkowski_sum": {
    "problem_order": [
      "codeforces_87e",
      "codeforces_1195f",
      "openj_bailian_3851",
      "timus_1894",
      "toph_consephull",
      "toph_rotation_dilemma",
      "codeforces_497d"
    ],
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Minkowski sum of convex polygons | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/geometry/minkowski.html"
      },
      {
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/103477",
        "resource_title": "[Tutorial] Distance of two convex polygon  By FHVirus",
        "resource_comments": ""
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/90738",
        "resource_title": "[Solved] A problem related to: minkowski sum of two simple polygon  By steinum",
        "resource_comments": ""
      }
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714764119,
      "nanoseconds": 630000000
    },
    "completion_count": 1,
    "topic_id": "minkowski_sum",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L1103-L1129"
    ]
  },
  "minkwoski_sum": {
    "topic_id": "minkwoski_sum",
    "resources": [],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L1103-L1129"
    ],
    "created_at": {
      "seconds": 1714763256,
      "nanoseconds": 976000000
    }
  },
  "mobius_function": {
    "created_at": {
      "seconds": 1714207817,
      "nanoseconds": 65000000
    },
    "topic_id": "mobius_function",
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://brilliant.org/wiki/mobius-function/",
        "resource_title": "Möbius Function | Brilliant"
      },
      {
        "resource_title": "[Tutorial] Math note — Möbius inversion  By Nisiyama_Suzune",
        "resource_url": "https://codeforces.com/blog/entry/53925",
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "is_starred": false,
        "resource_url": "https://discuss.codechef.com/t/a-dance-with-mobius-function/11315",
        "resource_title": "A Dance with Mobius Function | adurysk",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_url": "https://nafis277.github.io/Notes/NTFunctions.pdf",
        "resource_title": "Number Theoretic Functions | Nafis",
        "is_starred": true
      },
      {
        "resource_comments": "check idea 6",
        "resource_url": "https://codeforces.com/blog/entry/104466",
        "resource_title": "A bit more of general ideas  By adamant"
      }
    ],
    "problem_order": [
      "spoj_gcdex",
      "cses_2417",
      "kattis_coprimeintegers",
      "codechef_coprime3",
      "codeforces_547c",
      "codeforces_803f",
      "codeforces_839d",
      "atcoder_agc038_c",
      "spoj_pstr",
      "codeforces_439e",
      "codeforces_915g",
      "codechef_smplsum",
      "hdu_1695",
      "hackerrank_gcd_product",
      "codeforces_1436f",
      "atcoder_abc162_e",
      "codeforces_920g",
      "spoj_sqfree",
      "cf_gym_102354b"
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Mobius%20Function.cpp"
    ],
    "is_data_complete": true,
    "completion_count": 9
  },
  "mobius_inversion": {
    "created_at": {
      "seconds": 1714208814,
      "nanoseconds": 899000000
    },
    "template_codes": [],
    "topic_id": "mobius_inversion",
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/53925",
        "resource_comments": "",
        "resource_title": "[Tutorial] Math note — Möbius inversion  By Nisiyama_Suzune"
      }
    ]
  },
  "monotonic_deque": {
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/122003",
        "resource_title": "[Tutorial] Minimum Deque By k1r1t0",
        "resource_comments": ""
      }
    ],
    "created_at": {
      "seconds": 1713831064,
      "nanoseconds": 770000000
    },
    "topic_id": "monotonic_deque",
    "is_data_complete": true,
    "completion_count": 6,
    "template_codes": [
      "https://codeforces.com/blog/entry/122003"
    ]
  },
  "monotonous_queue": {
    "resources": [
      {
        "resource_title": "Monotonic Queue Explained with LeetCode Problems Li Yin Algorithms and Coding Interviews By Li Yin",
        "resource_url": "https://medium.com/algorithms-and-leetcode/monotonic-queue-explained-with-leetcode-problems-7db7c530c1d6",
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_url": "https://www.geeksforgeeks.org/introduction-to-monotonic-queues/",
        "resource_title": "Introduction to Monotonic Queues | Geeks For Geeks"
      }
    ],
    "created_at": {
      "seconds": 1713829088,
      "nanoseconds": 806000000
    },
    "is_data_complete": true,
    "problem_order": [
      "leetcode_next_greater_element_i",
      "cses_3221",
      "leetcode_largest_rectangle_in_histogram",
      "codeforces_488d"
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Monotonous%20Queue.cpp"
    ],
    "completion_count": 21,
    "topic_id": "monotonous_queue"
  },
  "monotonous_queue_2d": {
    "topic_id": "monotonous_queue_2d",
    "created_at": {
      "seconds": 1713830816,
      "nanoseconds": 486000000
    },
    "is_data_complete": true,
    "template_codes": [
      "https://codeforces.com/blog/entry/53810?#comment-871637"
    ],
    "problem_order": [
      "codechef_chsqarr",
      "codeforces_846d",
      "codeforces_15d",
      "wcipeg_ioi0612",
      "atcoder_abc228_f"
    ],
    "completion_count": 7,
    "resources": [
      {
        "resource_title": "Monotonic Queue | Ali Ibrahim",
        "resource_url": "https://ali-ibrahim137.github.io/competitive/programming/2019/12/08/Monotonic-Queue.html",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/53810",
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Minima/maxima over all fixed-size arrays (multi-dimensional) | By bicsi"
      }
    ]
  },
  "mos_algorithm": {
    "resources": [
      {
        "resource_title": " Mo's algorithm | Mike Koltsov",
        "resource_comments": "",
        "resource_url": "https://www.hackerearth.com/practice/notes/mos-algorithm/",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Mo's algorithm | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/data_structures/sqrt_decomposition.html#mos-algorithm"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/83248",
        "resource_title": "[Tutorial] Square root decomposition and applications | box",
        "resource_comments": "check until \"Sweepline MO\""
      },
      {
        "is_starred": true,
        "resource_title": "Mo's Algorithm | Errichto",
        "resource_comments": "check from 18:13 to 31:28",
        "is_video_type": true,
        "resource_url": "https://www.youtube.com/watch?v=BJhzd_VG61k"
      },
      {
        "is_video_type": true,
        "resource_comments": "check from 7:25 to 13:16",
        "resource_url": "https://www.youtube.com/watch?v=Uqyn-3w7yIU",
        "resource_title": "Square root decomposition topic summary | Competitive Programming | Vivek Gupta | Advanced"
      }
    ],
    "completion_count": 37,
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/MOs%20Algorithm.cpp"
    ],
    "created_at": {
      "seconds": 1713376865,
      "nanoseconds": 928000000
    },
    "problem_order": [
      "codeforces_86d",
      "codeforces_617e",
      "cses_1734",
      "yosupo_static_range_inversions_query",
      "codeforces_375d",
      "codeforces_351d",
      "codechef_decopair",
      "codeforces_840d",
      "codeforces_877f",
      "codeforces_577e",
      "codechef_stdprgs"
    ],
    "topic_id": "mos_algorithm"
  },
  "mos_on_tree": {
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "Mo's Algorithm on Trees [Tutorial] by animeshf",
        "resource_url": "https://codeforces.com/blog/entry/43230",
        "is_starred": true
      }
    ],
    "created_at": {
      "seconds": 1713383288,
      "nanoseconds": 392000000
    },
    "is_data_complete": true,
    "topic_id": "mos_on_tree",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/MOs%20on%20tree.cpp"
    ],
    "problem_order": [
      "spoj_cot2",
      "cf_gym_100962f",
      "codechef_fctre",
      "codechef_closefar",
      "codechef_vlb"
    ],
    "completion_count": 12
  },
  "mos_online": {
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "All comments from this blog",
        "resource_url": "https://codeforces.com/blog/entry/44711?"
      }
    ],
    "topic_id": "mos_online",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/MOs%20Online.cpp"
    ],
    "completion_count": 2,
    "created_at": {
      "seconds": 1713378498,
      "nanoseconds": 292000000
    },
    "is_data_complete": true
  },
  "mos_with_dsu": {
    "created_at": {
      "seconds": 1713315430,
      "nanoseconds": 772000000
    },
    "is_data_complete": true,
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://codeforces.com/edu/course/2/lesson/7/3",
        "resource_comments": "",
        "resource_title": "Mo's algorithm and DSU | CF Edu"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/7383?#comment-161520",
        "resource_title": "A comment by niklasb",
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/69394",
        "resource_title": "How To Solve This Magical Problem?",
        "resource_comments": "Check Um_nik's comment"
      }
    ],
    "problem_order": [
      "codechef_gerald07",
      "codechef_qchef",
      "spoj_zquery"
    ],
    "completion_count": 6,
    "topic_id": "mos_with_dsu",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/MOs%20with%20DSU.cpp"
    ]
  },
  "mos_with_update": {
    "created_at": {
      "seconds": 1713389632,
      "nanoseconds": 147000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/MOs%20with%20Update.cpp"
    ],
    "completion_count": 7,
    "topic_id": "mos_with_update",
    "resources": [
      {
        "resource_url": "https://www.youtube.com/watch?v=gUpfwVRXhNY",
        "resource_title": "Mo's Algorithm With Updates by Gaurav Sen",
        "resource_comments": "",
        "is_video_type": true
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/72690",
        "resource_title": "Mo's Algorithm (with update and without update, now you can understand both) by Fype",
        "resource_comments": ""
      }
    ],
    "is_data_complete": true,
    "problem_order": [
      "spoj_xxxxxxxx",
      "toph_distinct_dishting",
      "codeforces_940f"
    ]
  },
  "mst": {
    "topic_id": "mst",
    "problem_order": [
      "cf_edu_289391e",
      "cses_1675",
      "cf_edu_289391f",
      "codechef_icl16a",
      "codechef_chefelec",
      "codeforces_32c",
      "codeforces_598d",
      "spoj_iitkwpcg",
      "spoj_ec_mode",
      "uva_11747",
      "codeforces_472d",
      "usaco_531",
      "usaco_623",
      "codeforces_744a",
      "codeforces_1213g",
      "codeforces_1624g",
      "cf_edu_289391h",
      "codeforces_609e",
      "codeforces_160d",
      "codeforces_891c",
      "spoj_koicost",
      "spoj_marybmw",
      "hackerrank_johnland",
      "uva_12176",
      "codeforces_1513d",
      "atcoder_abc282_e",
      "hackerrank_spanning_tree_fraction",
      "uva_10600",
      "usaco_946",
      "usaco_1211",
      "codeforces_125e",
      "codeforces_76a",
      "usaco_1138",
      "codeforces_1707c"
    ],
    "resources": [
      {
        "resource_url": "https://cp-algorithms.com/graph/mst_prim.html",
        "resource_title": "Minimum spanning tree - Prim's algorithm | CP Algorithms",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_title": "Minimum spanning tree - Kruskal's algorithm | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/graph/mst_kruskal.html",
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_title": "Minimum spanning tree - Kruskal with Disjoint Set Union | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/graph/mst_kruskal_with_dsu.html",
        "resource_comments": ""
      },
      {
        "resource_title": "Second Best Minimum Spanning Tree | CP Algorithms",
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/graph/second_best_mst.html"
      },
      {
        "resource_comments": "",
        "resource_url": "https://www.hackerearth.com/practice/algorithms/graphs/minimum-spanning-tree/tutorial/",
        "resource_title": "Minimum Spanning Tree | HackerEarth"
      },
      {
        "resource_title": "Prim's Minimum Spanning Tree Algorithm | Graph Theory | WilliamFiset",
        "resource_url": "https://www.youtube.com/watch?v=jsmMtJpPnhU",
        "is_video_type": true,
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "is_video_type": true,
        "resource_title": "Union Find Kruskal's Algorithm | WilliamFiset",
        "resource_url": "https://www.youtube.com/watch?v=JZBQLXgSGfs"
      },
      {
        "resource_comments": "",
        "resource_title": "15.3 Prim’s algorithm | CPH",
        "resource_url": "https://usaco.guide/CPH.pdf#page=157"
      },
      {
        "resource_comments": "",
        "resource_url": "https://usaco.guide/CPH.pdf#page=152",
        "resource_title": "15.1 - Kruskal's | CPH"
      },
      {
        "resource_url": "https://alexyd88.github.io/Kruskal-Visualizer/",
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Kruskal Visualizer"
      },
      {
        "resource_url": "https://usaco.guide/gold/mst?lang=cpp",
        "resource_comments": "",
        "resource_title": "Minimum Spanning Trees | USACO Guide"
      }
    ],
    "created_at": {
      "seconds": 1714033606,
      "nanoseconds": 648000000
    },
    "is_data_complete": true,
    "completion_count": 48,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Prim's%20MST.cpp",
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Krushkal's%20MST.cpp"
    ]
  },
  "multiplicative_order": {
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714252180,
      "nanoseconds": 156000000
    },
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "Multiplicative order | Wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Multiplicative_order"
      },
      {
        "resource_url": "https://en.wikipedia.org/wiki/Carmichael_function",
        "resource_comments": "",
        "resource_title": "Carmichael function | Wiki"
      },
      {
        "resource_url": "https://codeforces.com/blog/Mi_Sawa?locale=en",
        "resource_title": "JAG summer 2015 Day4 (= OpenCup GP of Japan) D Identity Function  By Mi_Sawa",
        "resource_comments": ""
      }
    ],
    "completion_count": 2,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Multiplicative%20Order.cpp"
    ],
    "topic_id": "multiplicative_order"
  },
  "multipoint_evaluation": {
    "created_at": {
      "seconds": 1714365824,
      "nanoseconds": 758000000
    },
    "completion_count": 1,
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "Multi-point Evaluation | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/algebra/polynomial.html#multi-point-evaluation"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/118018",
        "resource_title": "Evaluation and interpolation on geometric progression  By adamant",
        "resource_comments": ""
      }
    ],
    "is_data_complete": true,
    "problem_order": [
      "yosupo_multipoint_evaluation",
      "codechef_polyeval",
      "codechef_rnbwroad"
    ],
    "topic_id": "multipoint_evaluation",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Polynomial.cpp"
    ]
  },
  "multiset_hashing": {
    "topic_id": "multiset_hashing",
    "template_codes": [],
    "is_data_complete": true,
    "resources": [
      {
        "resource_url": "https://rng-58.blogspot.com/2017/02/hashing-and-probability-of-collision.html",
        "resource_comments": "check problem 3. Another way of doing this: sum of (p^a[i]) modulo a prime where the base p is also a prime.",
        "resource_title": "Hashing and Probability of Collision | rng_58"
      }
    ],
    "problem_order": [
      "dmoj_ccc20s3",
      "cf_gym_101808b",
      "codechef_qryland",
      "codechef_cloneme",
      "codeforces_1957f2"
    ],
    "created_at": {
      "seconds": 1714641565,
      "nanoseconds": 208000000
    },
    "completion_count": 5
  },
  "multivariable_linear_diophantine_equation_with_nonnegative_solutions": {
    "created_at": {
      "seconds": 1714307639,
      "nanoseconds": 172000000
    },
    "problem_order": [
      "codemarshal_duet_2019F",
      "codedrills_strange_keyboard"
    ],
    "is_data_complete": true,
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/71617",
        "resource_comments": "",
        "resource_title": "Congruence Shortest Path Problem  By YouKn0wWho"
      },
      {
        "resource_title": "Comment by sys.",
        "resource_url": "https://codeforces.com/blog/entry/71230?#comment-556761",
        "resource_comments": ""
      }
    ],
    "completion_count": 1,
    "topic_id": "multivariable_linear_diophantine_equation_with_nonnegative_solutions",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Linear%20Diophantine%20Equation%20with%20Nonnegative%20Solutions.cpp"
    ]
  },
  "ncr_modulo_any_mod": {
    "is_data_complete": true,
    "resources": [
      {
        "resource_title": "Binomial Coefficients | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/combinatorics/binomial-coefficients.html",
        "is_starred": true,
        "resource_comments": "check the whole blog"
      },
      {
        "resource_url": "https://discuss.codechef.com/t/best-known-algos-for-calculating-ncr-m/896",
        "resource_comments": "",
        "resource_title": "Best known algos for calculating nCr % M"
      },
      {
        "resource_title": "Computing n! modulo pᵏ for small p  By adamant",
        "is_starred": true,
        "resource_comments": "Hard",
        "resource_url": "https://codeforces.com/blog/entry/116681"
      },
      {
        "resource_url": "https://blog.prabowodjonatan.id/posts/binomial-mod-pe/",
        "is_starred": true,
        "resource_comments": "Hard",
        "resource_title": "Binomial Modulo Prime Power | prabowo"
      }
    ],
    "completion_count": 8,
    "topic_id": "ncr_modulo_any_mod",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/nCr%20Modulo%20Any%20Mod.cpp"
    ],
    "created_at": {
      "seconds": 1713662042,
      "nanoseconds": 569000000
    },
    "problem_order": [
      "hackerrank_ncr",
      "codechef_sandwich",
      "lightoj_strange_game",
      "baekjoon_19124",
      "yosupo_binomial_coefficient_prime_mod"
    ]
  },
  "nimber": {
    "completion_count": 6,
    "created_at": {
      "seconds": 1714740776,
      "nanoseconds": 870000000
    },
    "template_codes": [],
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/103785",
        "resource_title": "Nimbers and Sprague-Grundy theorem  By adamant",
        "is_starred": true,
        "resource_comments": ""
      }
    ],
    "topic_id": "nimber",
    "is_data_complete": true
  },
  "ntt": {
    "problem_order": [
      "yosupo_convolution_mod",
      "yosupo_convolution_mod_1000000007",
      "codeforces_1096g",
      "yosupo_product_of_polynomial_sequence",
      "toph_play_the_lottery",
      "codechef_sumxor2",
      "spoj_ovicumsum",
      "codeforces_1218e",
      "codeforces_1257g",
      "spoj_countdio",
      "codechef_lucasth",
      "codeforces_1613f",
      "codechef_addbyperm",
      "atcoder_abc303_h",
      "codechef_psum",
      "csacademy_permutations",
      "codeforces_623e",
      "codeforces_755g"
    ],
    "created_at": {
      "seconds": 1714328202,
      "nanoseconds": 435000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/NTT.cpp",
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/NTT%20With%20Any%20Prime%20MOD.cpp"
    ],
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://cp-algorithms.com/algebra/fft.html#number-theoretic-transform",
        "resource_comments": "",
        "resource_title": "Number theoretic transform | CP Algorithms"
      },
      {
        "resource_title": "Tutorial on FFT/NTT — The tough made simple. ( Part 2 )  By sidhant",
        "resource_url": "https://codeforces.com/blog/entry/43499",
        "resource_comments": ""
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/45298",
        "resource_title": "Fast convolution for 64-bit integers  By quasisphere",
        "resource_comments": "not necessary to check"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/129600",
        "resource_comments": "",
        "resource_title": "NTT with modular arithmetic reductions | performance comparasion with FFT"
      }
    ],
    "completion_count": 13,
    "is_data_complete": true,
    "topic_id": "ntt"
  },
  "number_of_3_and_4_length_cycles": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/3%20CYCLE%20and%204%20CYCLE.cpp"
    ],
    "resources": [],
    "completion_count": 3,
    "topic_id": "number_of_3_and_4_length_cycles",
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714049126,
      "nanoseconds": 219000000
    }
  },
  "number_of_arborescences_with_n_nodes": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Number%20of%20Arborescence.cpp"
    ],
    "topic_id": "number_of_arborescences_with_n_nodes",
    "resources": [
      {
        "resource_url": "https://en.wikipedia.org/wiki/Arborescence_(graph_theory)",
        "resource_comments": "",
        "resource_title": "Arborescence (graph theory) | Wiki"
      }
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714110909,
      "nanoseconds": 886000000
    }
  },
  "number_of_ax_mod_p_in_a_range": {
    "topic_id": "number_of_ax_mod_p_in_a_range",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Number%20of%20ax%25p%20in%20a%20Range.cpp"
    ],
    "resources": [],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714313538,
      "nanoseconds": 9000000
    },
    "completion_count": 1
  },
  "number_of_different_cliques": {
    "created_at": {
      "seconds": 1714102084,
      "nanoseconds": 645000000
    },
    "resources": [],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Number%20of%20Different%20Cliques.cpp"
    ],
    "is_data_complete": true,
    "topic_id": "number_of_different_cliques"
  },
  "number_of_distinct_kth_powers_modulo_n": {
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "Discussion in Math Stack Exchange",
        "is_starred": true,
        "resource_url": "https://math.stackexchange.com/questions/3796985/is-there-a-known-formula-for-the-number-of-k-textth-power-residues-modulo"
      },
      {
        "resource_title": "Counting general power residues | Samer Seraj",
        "resource_url": "https://nntdm.net/papers/nntdm-28/NNTDM-28-4-730-743.pdf",
        "resource_comments": ""
      }
    ],
    "completion_count": 0,
    "topic_id": "number_of_distinct_kth_powers_modulo_n",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Number%20of%20Distinct%20Kth%20Powers%20Modulo%20n.cpp"
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714285678,
      "nanoseconds": 956000000
    }
  },
  "number_of_integer_solutions_to_1_x_1_y_1_k": {
    "completion_count": 2,
    "template_codes": [],
    "resources": [
      {
        "resource_title": "Number of positive integral solutions of equation 1/x+1/y=1/n!  By Vivek.p",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/76836?f0a28=1&locale=en"
      }
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714316652,
      "nanoseconds": 581000000
    },
    "topic_id": "number_of_integer_solutions_to_1_x_1_y_1_k"
  },
  "number_of_nonnegative_integer_solutions_to_ax_by_c": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Number%20of%20Nonnegative%20Integer%20Solutions%20to%20ax+by%20%3C=%20c.cpp"
    ],
    "is_data_complete": true,
    "resources": [],
    "topic_id": "number_of_nonnegative_integer_solutions_to_ax_by_c",
    "created_at": {
      "seconds": 1714309789,
      "nanoseconds": 778000000
    },
    "completion_count": 4
  },
  "number_of_palindromes_in_range": {
    "completion_count": 1,
    "created_at": {
      "seconds": 1714648764,
      "nanoseconds": 813000000
    },
    "resources": [
      {
        "is_starred": true,
        "resource_title": "A comment by Noam527",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/63105?#comment-470339"
      }
    ],
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Strings/Number%20of%20Palindromes%20in%20Range.cpp"
    ],
    "topic_id": "number_of_palindromes_in_range"
  },
  "number_of_paths_of_each_length_in_a_tree": {
    "created_at": {
      "seconds": 1714150933,
      "nanoseconds": 249000000
    },
    "resources": [],
    "completion_count": 3,
    "problem_order": [
      "yosupo_frequency_table_of_tree_distance",
      "cf_gym_101991a"
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Number%20of%20Paths%20of%20Each%20Length%20in%20a%20Tree.cpp"
    ],
    "topic_id": "number_of_paths_of_each_length_in_a_tree",
    "is_data_complete": true
  },
  "number_of_solutions_to_a_basic_linear_algebraic_equation": {
    "topic_id": "number_of_solutions_to_a_basic_linear_algebraic_equation",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Number%20of%20Solutions%20to%20a%20Basic%20Linear%20Algebraic%20Equation.cpp"
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714308698,
      "nanoseconds": 593000000
    },
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "Number of Solutions to a Linear Algebraic Equation  By J-C",
        "resource_url": "https://codeforces.com/blog/entry/54111"
      }
    ],
    "completion_count": 6
  },
  "number_of_solutions_to_a_basic_linear_algebraic_equation_with_variable_upper_bound_constraints": {
    "template_codes": [
      "Number of Solutions to a Basic Linear Algebraic Equation with Variable Upper Bound Constraints"
    ],
    "created_at": {
      "seconds": 1714308915,
      "nanoseconds": 50000000
    },
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "Editorial of 102114F - Fireflies",
        "resource_url": "https://codeforces.com/blog/entry/67734"
      }
    ],
    "is_data_complete": true,
    "completion_count": 1,
    "topic_id": "number_of_solutions_to_a_basic_linear_algebraic_equation_with_variable_upper_bound_constraints"
  },
  "number_of_solutions_to_x_2_1_mod_m": {
    "is_data_complete": true,
    "completion_count": 0,
    "topic_id": "number_of_solutions_to_x_2_1_mod_m",
    "resources": [
      {
        "resource_title": "Discussion in Math Stack Exchange 1",
        "resource_comments": "",
        "resource_url": "https://math.stackexchange.com/questions/345668/solutions-of-the-congruence-x2-equiv-1-pmodm"
      },
      {
        "resource_title": "Discussion in Math Stack Exchange 2",
        "resource_url": "https://math.stackexchange.com/questions/104961/number-of-solutions-of-x2-1-in-mathbbz-n-mathbbz",
        "resource_comments": ""
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Number%20of%20Solutions%20to%20x%5E2%20=%201%20mod%20m.cpp"
    ],
    "created_at": {
      "seconds": 1714286031,
      "nanoseconds": 72000000
    }
  },
  "number_of_subsequences_having_product_at_least_k": {
    "completion_count": 2,
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Dynamic%20Programming%20Optimizations/Number%20of%20Subsequences%20Having%20Product%20at%20least%20K.cpp"
    ],
    "topic_id": "number_of_subsequences_having_product_at_least_k",
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "A comment by neutron-byte",
        "resource_url": "https://codeforces.com/blog/entry/55054?#comment-455887"
      }
    ],
    "created_at": {
      "seconds": 1714731920,
      "nanoseconds": 674000000
    }
  },
  "offline_queries": {
    "problem_order": [
      "spoj_kquery",
      "spoj_crayon",
      "timus_1671",
      "cf_edu_289390d",
      "cses_1734",
      "codeforces_19d",
      "yaroslav and divisors",
      "codeforces_522d",
      "codechef_pshttr",
      "coci20_klasika",
      "codeforces_1416d",
      "codeforces_1114f",
      "cf_gym_105009l",
      "codechef_minxorseg",
      "toph_prime_divisor_on_tree_path",
      "codeforces_594d"
    ],
    "created_at": {
      "seconds": 1713833524,
      "nanoseconds": 878000000
    },
    "resources": [
      {
        "resource_title": "What are Online and Offline query-based questions in Competitive Programming | Geeks for Geeks",
        "resource_comments": "",
        "resource_url": "https://www.geeksforgeeks.org/what-are-online-and-offline-query-based-questions-in-competitive-programming/"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/19771",
        "resource_title": "What is an offline solution?",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://usaco.guide/plat/range-sweep?lang=cpp",
        "resource_title": "Range Queries with Sweep Line | USACO Guide"
      }
    ],
    "topic_id": "offline_queries",
    "is_data_complete": true,
    "completion_count": 9,
    "template_codes": []
  },
  "onion_decomposition": {
    "topic_id": "onion_decomposition",
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714819265,
      "nanoseconds": 950000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Geometry/Onion%20Decomposition.cpp"
    ],
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/75929",
        "resource_title": "Dynamic convex hull implementation  By dragonslayerintraining"
      }
    ]
  },
  "online_articulation_bridges": {
    "completion_count": 2,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Online%20Articulation%20Bridges.cpp"
    ],
    "resources": [
      {
        "resource_url": "https://cp-algorithms.com/graph/bridge-searching-online.html",
        "resource_title": "Finding Bridges Online | CP Algorithms",
        "resource_comments": ""
      }
    ],
    "topic_id": "online_articulation_bridges",
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714029992,
      "nanoseconds": 463000000
    }
  },
  "online_dynamic_connectivity_problem": {
    "is_data_complete": true,
    "template_codes": [],
    "created_at": {
      "seconds": 1713315546,
      "nanoseconds": 10000000
    },
    "problem_order": [
      "codeforces_1217f",
      "yosupo_dynamic_graph_vertex_add_component_sum"
    ],
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/128556",
        "resource_title": "Online Dynamic Connectivity | ko_osaga",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://courses.csail.mit.edu/6.851/spring12/scribe/L20.pdf",
        "resource_title": "Dynamic Connectivity | MIT CSAIL"
      }
    ],
    "topic_id": "online_dynamic_connectivity_problem"
  },
  "online_ntt": {
    "is_data_complete": true,
    "problem_order": [
      "csacademy_colored_forests",
      "csacademy_jetpack",
      "codechef_mmnn01",
      "codeforces_1792f2",
      "atcoder_abc315_h",
      "codeforces_553e"
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/NTT%20Online%20(D%26C).cpp",
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/NTT%20Online.cpp"
    ],
    "completion_count": 4,
    "created_at": {
      "seconds": 1714361480,
      "nanoseconds": 296000000
    },
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/111399",
        "resource_title": "CDQ convolution (online FFT) generalization with Newton method  By adamant,",
        "is_starred": true
      },
      {
        "is_starred": true,
        "resource_comments": "use vpn if you cant access this site",
        "resource_title": "Online FFT Slides | Tanuj Khattar",
        "resource_url": "https://tanujkhattar.wordpress.com/wp-content/uploads/2018/01/onlinefft1.pdf"
      },
      {
        "resource_url": "https://atcoder.jp/contests/abc315/editorial/6997",
        "resource_title": "Relaxed Convolution | Atcoder Editorial",
        "resource_comments": "",
        "is_starred": true
      }
    ],
    "topic_id": "online_ntt"
  },
  "open_and_close_interval_trick": {
    "completion_count": 8,
    "problem_order": [
      "codeforces_626f",
      "cses_1665"
    ],
    "topic_id": "open_and_close_interval_trick",
    "is_data_complete": true,
    "template_codes": [],
    "created_at": {
      "seconds": 1714725660,
      "nanoseconds": 45000000
    },
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/47764",
        "resource_comments": "check Open and Close Interval Trick section",
        "resource_title": "[Tutorial] Non-trivial DP Tricks and Techniques  By zscoder",
        "is_starred": true
      }
    ]
  },
  "operators": {
    "resources": [
      {
        "resource_title": "Arithmetic Operators | Tech With Tim",
        "resource_url": "https://www.youtube.com/watch?v=CWtiqVQp8uk&list=PLzMcBGfZo4-lmGC8VW0iu6qfMHjy7gLQ3&index=5",
        "resource_comments": "",
        "is_starred": true,
        "is_video_type": true
      },
      {
        "resource_comments": "",
        "resource_title": "Comparison Operators | Tech With Tim",
        "is_video_type": true,
        "resource_url": "https://www.youtube.com/watch?v=taBgBbXRadc&list=PLzMcBGfZo4-lmGC8VW0iu6qfMHjy7gLQ3&index=6",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/watch?v=F__aAx-3HOY&list=PLzMcBGfZo4-lmGC8VW0iu6qfMHjy7gLQ3&index=7",
        "is_starred": true,
        "is_video_type": true,
        "resource_title": "Logical Operators (And, Or and Not) | Tech With Tim"
      },
      {
        "resource_comments": "",
        "resource_url": "https://www.programiz.com/cpp-programming/operators",
        "resource_title": "C++ Operators | Programiz",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "resource_url": "https://www.programiz.com/cpp-programming/relational-logical-operators",
        "is_starred": true,
        "resource_title": "C++ Relational and Logical Operators | Programiz"
      }
    ],
    "template_codes": [],
    "is_data_complete": true,
    "topic_id": "operators",
    "created_at": {
      "seconds": 1713661825,
      "nanoseconds": 481000000
    },
    "problem_order": [
      "hackerrank_python_arithmetic_operators",
      "gym_287306c",
      "gym_287306i",
      "gym_287306d",
      "gym_367756e",
      "hackerrank_js10_arithmetic_operators",
      "gym_287306q",
      "gym_287306f",
      "gym_287306x"
    ],
    "completion_count": 930
  },
  "optimization_using_bitsets": {
    "created_at": {
      "seconds": 1715817971,
      "nanoseconds": 887000000
    },
    "resources": [
      {
        "resource_title": "Bitwise operations 2 — popcount & bitsets  By Errichto",
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/73558"
      },
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Bitmasking as solution for subset sum problem",
        "resource_url": "https://gitlab.istic.univ-rennes1.fr/bdezordo/hpc-4-subset-sum-bitmasking/-/blob/main/README.md?ref_type=heads"
      }
    ],
    "template_codes": [],
    "topic_id": "optimization_using_bitsets"
  },
  "ordered_set": {
    "topic_id": "ordered_set",
    "resources": [
      {
        "resource_title": "C++ STL: Policy based data structures | adamant",
        "resource_url": "https://codeforces.com/blog/entry/11080",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "resource_url": "https://www.geeksforgeeks.org/ordered-set-gnu-c-pbds/",
        "resource_title": "Ordered Set and GNU C++ PBDS | Geeks For Geeks"
      }
    ],
    "completion_count": 39,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Ordered%20Set.cpp"
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1713818749,
      "nanoseconds": 866000000
    },
    "problem_order": [
      "spoj_orderset",
      "cf_edu_274545a",
      "kattis_megainversions",
      "spoj_meanarr",
      "spoj_koiline",
      "codeforces_61e",
      "codeforces_762e",
      "cf_gym_100861d",
      "codeforces_501d"
    ]
  },
  "pairs_and_tuples": {
    "topic_id": "pairs_and_tuples",
    "template_codes": [],
    "resources": [
      {
        "resource_title": "Pair in C++ Standard Template Library (STL) | Geeks for Geeks",
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://www.geeksforgeeks.org/pair-in-cpp-stl/"
      },
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/watch?v=T9-agjKW4PQ",
        "is_video_type": true,
        "resource_title": "Tuples | Tech With Tim"
      },
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Tuples in C++ | Geeks for Geeks",
        "resource_url": "https://www.geeksforgeeks.org/tuples-in-c/"
      }
    ],
    "created_at": {
      "seconds": 1715112193,
      "nanoseconds": 614000000
    },
    "is_data_complete": true,
    "completion_count": 263
  },
  "palindromic_tree": {
    "resources": [
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Palindromic tree  By ADJA,",
        "resource_url": "https://codeforces.com/blog/entry/13958"
      },
      {
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/13959",
        "resource_title": "Palindromic tree: behind the scenes  By adamant",
        "resource_comments": ""
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/58129",
        "resource_title": "Palindromic Tree Tutorial  By karamkontar",
        "resource_comments": ""
      }
    ],
    "problem_order": [
      "yosupo_eertree",
      "cses_1111",
      "hdu_3948",
      "ural_1960",
      "ural_2040",
      "codeforces_17e",
      "cf_gym_100543g",
      "cf_gym_100548g",
      "ural_2058",
      "cf_gym_102141f"
    ],
    "topic_id": "palindromic_tree",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Strings/Palindromic%20Tree.cpp"
    ],
    "completion_count": 3,
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714648008,
      "nanoseconds": 211000000
    }
  },
  "parallel_binary_search": {
    "topic_id": "parallel_binary_search",
    "created_at": {
      "seconds": 1714835504,
      "nanoseconds": 401000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Miscellaneous/Parallel%20Binary%20Search.cpp"
    ],
    "completion_count": 5,
    "problem_order": [
      "spoj_meteors",
      "cses_2101",
      "hackerearth_make_n00b_land_great_again_circuits",
      "atcoder_agc002_d",
      "coci18_pictionary",
      "dmoj_coci20c6p5",
      "hackerrank_travel_in_hackerland",
      "hackerrank_selective_additions",
      "codeforces_1957f2"
    ],
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/45578",
        "resource_title": "Parallel Binary Search [tutorial]  By himanshujaju",
        "resource_comments": ""
      },
      {
        "resource_title": "Parallel Binary Search Tutorial | Algorithms Conquered",
        "is_video_type": true,
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/watch?v=NGbaWEjM8MI"
      }
    ],
    "is_data_complete": true
  },
  "partially_persistent_dsu": {
    "is_data_complete": true,
    "created_at": {
      "seconds": 1712689664,
      "nanoseconds": 978000000
    },
    "completion_count": 3,
    "topic_id": "partially_persistent_dsu",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/DSU%20Partially%20Persistent.cpp"
    ],
    "resources": [
      {
        "is_video_type": true,
        "resource_url": "https://codeforces.com/blog/entry/75369",
        "resource_comments": "",
        "resource_title": "A quite interesting trick involving Disjoint Set Union by stefdasca"
      }
    ]
  },
  "partition_function": {
    "problem_order": [
      "yosupo_partition_function",
      "hackerearth_perfect_permutations_september_clash",
      "cf_gym_102354e",
      "atcoder_abc279_h",
      "cf_gym_102268g"
    ],
    "resources": [
      {
        "resource_title": "Partition function (number theory) | Wiki",
        "resource_comments": "",
        "resource_url": "https://en.wikipedia.org/wiki/Partition_function_(number_theory)"
      },
      {
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/55686?#comment-394330",
        "resource_comments": "",
        "resource_title": "Partition Function Intuitive Approach | ABalobanov"
      },
      {
        "is_starred": true,
        "resource_title": "Partitions and pentagonal number theorem  By adamant",
        "resource_url": "https://codeforces.com/blog/entry/104312",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_title": "Glaisher's theorem",
        "resource_url": "https://en.wikipedia.org/wiki/Glaisher%27s_theorem"
      },
      {
        "resource_comments": "",
        "resource_url": "https://en.wikipedia.org/wiki/Pentagonal_number_theorem",
        "resource_title": "Pentagonal number theorem | Wiki"
      },
      {
        "resource_comments": "",
        "resource_title": "The Pentagonal Number Theorem and All That | Dick Koch",
        "resource_url": "https://pages.uoregon.edu/koch/PentagonalNumbers.pdf"
      }
    ],
    "is_data_complete": true,
    "topic_id": "partition_function",
    "completion_count": 4,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Partition%20Function.cpp"
    ],
    "created_at": {
      "seconds": 1714305216,
      "nanoseconds": 506000000
    }
  },
  "path_intersection": {
    "created_at": {
      "seconds": 1714150410,
      "nanoseconds": 409000000
    },
    "resources": [],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Path%20Intersection.cpp"
    ],
    "is_data_complete": true,
    "topic_id": "path_intersection",
    "completion_count": 3
  },
  "path_union": {
    "completion_count": 3,
    "created_at": {
      "seconds": 1714150186,
      "nanoseconds": 574000000
    },
    "topic_id": "path_union",
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Path%20Union.cpp"
    ],
    "resources": []
  },
  "pells_equation": {
    "created_at": {
      "seconds": 1714308479,
      "nanoseconds": 303000000
    },
    "completion_count": 1,
    "is_data_complete": true,
    "resources": [
      {
        "resource_url": "https://brilliant.org/wiki/quadratic-diophantine-equations-pells-equation/",
        "resource_title": "Pell's Equation | Brilliant",
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_title": "Pell's equation  By LieutenantLolicon",
        "resource_url": "https://codeforces.com/blog/entry/68915",
        "resource_comments": ""
      },
      {
        "resource_title": "Pythagorean triples and Pell's equations  By adamant",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/116313"
      }
    ],
    "topic_id": "pells_equation",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Pells%20Equation.py"
    ]
  },
  "permanent_of_a_matrix": {
    "completion_count": 1,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Permanent%20of%20a%20Matrix.cpp"
    ],
    "topic_id": "permanent_of_a_matrix",
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714465491,
      "nanoseconds": 424000000
    },
    "resources": [
      {
        "resource_url": "https://en.wikipedia.org/wiki/Permanent_(mathematics)",
        "resource_comments": "",
        "resource_title": "Permanent (mathematics) | Wiki",
        "is_starred": true
      },
      {
        "resource_url": "https://en.wikipedia.org/wiki/Computing_the_permanent#Ryser_formula",
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Ryser formula | Wiki"
      }
    ]
  },
  "permutation_cycles": {
    "completion_count": 7,
    "is_data_complete": true,
    "problem_order": [
      "codechef_pcycle",
      "poj_1674",
      "codeforces_48d",
      "timus_1024",
      "codeforces_1768d",
      "codeforces_1327d",
      "codeforces_612e",
      "codeforces_1591d",
      "codeforces_911d",
      "codeforces_987e",
      "codechef_dpowperm",
      "codedrills_the_cabins_in_the_woods"
    ],
    "topic_id": "permutation_cycles",
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/111187",
        "resource_comments": "check until \"5. Miscellaneous topics\"",
        "resource_title": "[Tutorial] A comprehensive guide to permutations for beginners  By nor"
      },
      {
        "resource_url": "https://en.wikipedia.org/wiki/Permutation#k-permutations_of_n",
        "resource_comments": "check until \"Permutations with repetition\"",
        "resource_title": "Permutation | Wiki"
      },
      {
        "resource_title": "Linear time algorithm for parity of permutation, around 1591D  By thematdev",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/97849",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Minimum swaps to sort an array | Geeks for Geeks",
        "resource_url": "https://www.geeksforgeeks.org/minimum-number-swaps-required-sort-array/"
      },
      {
        "resource_comments": "An awesome fun video to understand permutation cycles",
        "resource_title": "The Riddle That Seems Impossible Even If You Know The Answer  Veritasium",
        "is_video_type": true,
        "is_starred": true,
        "resource_url": "https://www.youtube.com/watch?v=iSNsgj1OCLA"
      }
    ],
    "created_at": {
      "seconds": 1714845295,
      "nanoseconds": 815000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Miscellaneous/Permutation%20Cycles.cpp"
    ]
  },
  "permutation_tree": {
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "Tutorial on Permutation Tree | errorgorn",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/78898"
      }
    ],
    "created_at": {
      "seconds": 1713825553,
      "nanoseconds": 692000000
    },
    "problem_order": [
      "codeforces_997e",
      "cf_gym_101620i",
      "codeforces_526f",
      "codechef_armyofme",
      "codechef_goodsegs",
      "codeforces_1205f"
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Permutation%20Tree.cpp"
    ],
    "topic_id": "permutation_tree",
    "completion_count": 1,
    "is_data_complete": true
  },
  "permutations_and_combinations": {
    "problem_order": [
      "cses_1617",
      "cses_1079",
      "cses_1715",
      "cses_1716",
      "codeforces_300c",
      "cses_1072",
      "spoj_hc12",
      "codechef_nways",
      "spoj_adateams",
      "spoj_goodb",
      "codeforces_407c",
      "codeforces_1696e",
      "gym_103860c"
    ],
    "topic_id": "permutations_and_combinations",
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Basics/Binomial%20Coefficients.cpp"
    ],
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://flexbooks.ck12.org/cbook/ck-12-college-precalculus/section/14.2/primary/lesson/counting-with-permutations-and-combinations-c-precalc/",
        "resource_title": "14.2 Counting with Permutations and Combinations"
      },
      {
        "resource_title": "Discrete Math II/Combinatorics (Entire course) | Playlist by Kimberly Brehm",
        "resource_url": "https://www.youtube.com/playlist?list=PLl-gb0E4MII0sGLCJeqDB3y63HZ6lM5LJ",
        "is_video_type": true,
        "resource_comments": "complete the first 14 videos"
      },
      {
        "resource_url": "https://usaco.guide/gold/combo?lang=cpp",
        "resource_comments": "check until \"Derangements\"",
        "resource_title": "Combinatorics | USACO Guide"
      },
      {
        "resource_comments": "check until \"Computing binomial coefficients modulo m\"",
        "resource_title": "Binomial Coefficients | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/combinatorics/binomial-coefficients.html"
      }
    ],
    "created_at": {
      "seconds": 1715168856,
      "nanoseconds": 931000000
    },
    "completion_count": 71
  },
  "persistent_array": {
    "created_at": {
      "seconds": 1713831452,
      "nanoseconds": 487000000
    },
    "completion_count": 4,
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Persistent%20Array.cpp"
    ],
    "resources": [
      {
        "resource_comments": "check until \"Persistent Segment Tree\"",
        "resource_url": "https://usaco.guide/adv/persistent?lang=cpp#persistent-array",
        "resource_title": "Persistent Array | USACO Guide"
      }
    ],
    "topic_id": "persistent_array"
  },
  "persistent_centroid_decomposition": {
    "is_data_complete": true,
    "completion_count": 2,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Centroid%20Decomposition%20Persistent.cpp"
    ],
    "created_at": {
      "seconds": 1713742431,
      "nanoseconds": 466000000
    },
    "topic_id": "persistent_centroid_decomposition",
    "resources": [
      {
        "resource_url": "https://www.youtube.com/watch?v=3pN_7Dha05Y",
        "resource_title": "Persistent Centroid Decomposition || Indian Programming Camp 2020 - Advanced Track - Tanuj Khattar",
        "resource_comments": ""
      }
    ]
  },
  "persistent_cht": {
    "problem_order": [
      "hackerrank_expert_computation",
      "ceoi09_harbingers"
    ],
    "created_at": {
      "seconds": 1714684607,
      "nanoseconds": 420000000
    },
    "is_data_complete": true,
    "resources": [
      {
        "resource_title": "Fully Persistent Convex Hull Trick  By infinity",
        "resource_url": "https://codeforces.com/blog/entry/51684",
        "is_starred": true,
        "resource_comments": ""
      }
    ],
    "topic_id": "persistent_cht",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Dynamic%20Programming%20Optimizations/Persistent%20CHT.cpp"
    ]
  },
  "persistent_dsu": {
    "completion_count": 3,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Persistent%20UnionFind.cpp"
    ],
    "is_data_complete": true,
    "resources": [
      {
        "resource_title": "[Tutorial] Persistent DSU made trivial | sword060",
        "resource_comments": "Check mostly problem 3, but read the whole blog to understand better",
        "resource_url": "https://codeforces.com/blog/entry/119919"
      }
    ],
    "created_at": {
      "seconds": 1713324154,
      "nanoseconds": 987000000
    },
    "topic_id": "persistent_dsu"
  },
  "persistent_heap": {
    "completion_count": 1,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Persistent%20Meldable%20Heap.cpp"
    ],
    "created_at": {
      "seconds": 1713832232,
      "nanoseconds": 289000000
    },
    "is_data_complete": true,
    "resources": [
      {
        "resource_title": "Leftist tree | Wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Leftist_tree",
        "resource_comments": ""
      },
      {
        "resource_comments": "similar ideas",
        "resource_title": "Randomized Heap | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/data_structures/randomized_heap.html"
      }
    ],
    "topic_id": "persistent_heap"
  },
  "persistent_li_chao_tree": {
    "resources": [],
    "completion_count": 3,
    "created_at": {
      "seconds": 1714685341,
      "nanoseconds": 230000000
    },
    "topic_id": "persistent_li_chao_tree",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Dynamic%20Programming%20Optimizations/Persistent%20Li%20Chao%20Tree.cpp"
    ],
    "is_data_complete": true
  },
  "persistent_palindromic_tree": {
    "resources": [
      {
        "resource_title": "Double-ended eertree  By adamant",
        "resource_url": "https://codeforces.com/blog/entry/130276",
        "is_starred": true,
        "resource_comments": "It describes Palindrome tree on a stack like push/pop, and then also deque like push/pop"
      }
    ],
    "problem_order": [
      "codechef_binpalin",
      "cf_gym_101806q",
      "yosupo_palindromes_in_deque",
      "dmoj_mmcc15p3"
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714648881,
      "nanoseconds": 810000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Strings/Palindromic%20Tree%20Persistent.cpp",
      "https://judge.yosupo.jp/submission/213595"
    ],
    "topic_id": "persistent_palindromic_tree"
  },
  "persistent_queue": {
    "is_data_complete": true,
    "topic_id": "persistent_queue",
    "completion_count": 1,
    "resources": [],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Persistent%20Queue.cpp"
    ],
    "created_at": {
      "seconds": 1713831842,
      "nanoseconds": 215000000
    }
  },
  "persistent_segment_tree": {
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Segment%20Tree%20Persistent.cpp"
    ],
    "topic_id": "persistent_segment_tree",
    "created_at": {
      "seconds": 1712526312,
      "nanoseconds": 517000000
    },
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "Persistent Segment Tree by Oliver-Matis Lill",
        "resource_url": "https://drive.google.com/file/d/0BwGLW04WRv0ITEZjRWlMSFc2bk0/view?resourcekey=0-1Zvsu-oMrdNsCuCIU3xGNA",
        "is_starred": true
      },
      {
        "is_starred": true,
        "resource_title": "Persistent Segment Tree | CP Algorithms",
        "resource_comments": "check until \"Dynamic segment tree\"",
        "resource_url": "https://cp-algorithms.com/data_structures/segment_tree.html#preserving-the-history-of-its-values-persistent-segment-tree"
      },
      {
        "resource_title": "Persistence Made Simple by hikarico",
        "resource_url": "https://discuss.codechef.com/t/persistence-made-simple-tutorial/14915/5",
        "resource_comments": ""
      }
    ],
    "problem_order": [
      "cses_1737",
      "spoj_kqueryo",
      "spoj_mkthnum",
      "hackerrank_wet_shark_and_kth_largest_number",
      "spoj_ttm",
      "cses_1734",
      "codeforces_786c",
      "codeforces_837g",
      "codeforces_484e",
      "spoj_cot",
      "codechef_frbsum",
      "codechef_prmq",
      "codeforces_1422f",
      "lightoj_function_not_again",
      "codeforces_226e",
      "codechef_cloneme",
      "codeforces_464e"
    ],
    "completion_count": 32
  },
  "persistent_segment_tree_with_lazy_propagation": {
    "completion_count": 13,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Segment%20Tree%20Persistent%20Lazy.cpp"
    ],
    "is_data_complete": true,
    "resources": [
      {
        "resource_url": "https://discuss.codechef.com/t/persistence-made-simple-tutorial/14915/11",
        "resource_title": "Persistence Made Simple - Persistent Lazy Propagation by hikarico",
        "resource_comments": "",
        "is_starred": true
      }
    ],
    "created_at": {
      "seconds": 1713048949,
      "nanoseconds": 605000000
    },
    "topic_id": "persistent_segment_tree_with_lazy_propagation"
  },
  "persistent_treap": {
    "problem_order": [
      "uva_12538",
      "codechef_genetics",
      "eolymp_2957"
    ],
    "completion_count": 3,
    "topic_id": "persistent_treap",
    "is_data_complete": true,
    "created_at": {
      "seconds": 1713816175,
      "nanoseconds": 521000000
    },
    "resources": [
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://ankitsultana.com/2021/03/29/persistent-treaps.html",
        "resource_title": "Persistent / Immutable Treaps | Ankit Sultana"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Treap%20persistent.cpp"
    ]
  },
  "persistent_trie": {
    "problem_order": [
      "codechef_xrqrs",
      "cf_gym_101628k",
      "toph_yet_another_xor_tree_problem",
      "coci20_klasika",
      "toph_jontrona_of_liakot",
      "codechef_gpd",
      "toph_xor_is_fun"
    ],
    "topic_id": "persistent_trie",
    "is_data_complete": true,
    "created_at": {
      "seconds": 1713300402,
      "nanoseconds": 866000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Persistent%20Trie.cpp"
    ],
    "resources": [
      {
        "resource_url": "https://www.geeksforgeeks.org/persistent-trie-set-1-introduction/",
        "resource_title": "Persistent Trie | Geeks for Geeks",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "is_video_type": true,
        "resource_title": "Persistent Trie - Codechef - GothamPD | Gaurav Sen",
        "resource_url": "https://www.youtube.com/watch?v=0FgKhpyBTcw"
      }
    ],
    "completion_count": 7
  },
  "phi_field": {
    "completion_count": 1,
    "resources": [],
    "created_at": {
      "seconds": 1714312653,
      "nanoseconds": 86000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Phi%20Field.cpp"
    ],
    "topic_id": "phi_field",
    "is_data_complete": true
  },
  "picks_theorem": {
    "resources": [
      {
        "resource_title": "Pick's Theorem | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/geometry/picks-theorem.html",
        "resource_comments": ""
      },
      {
        "resource_title": "Pick’s Theorem | Tom Davis",
        "resource_comments": "",
        "resource_url": "http://www.geometer.org/mathcircles/pick.pdf"
      }
    ],
    "is_data_complete": true,
    "template_codes": [],
    "completion_count": 5,
    "topic_id": "picks_theorem",
    "created_at": {
      "seconds": 1714309604,
      "nanoseconds": 871000000
    }
  },
  "pigeonhole_principle": {
    "template_codes": [],
    "resources": [
      {
        "resource_title": "Pigeonhole Principle | Geeks for Geeks",
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://www.geeksforgeeks.org/discrete-mathematics-the-pigeonhole-principle/"
      },
      {
        "resource_title": "What Is the Pigeonhole Principle?  | Spanning Tree",
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/watch?v=B2A2pGrDG8I",
        "is_video_type": true
      }
    ],
    "completion_count": 59,
    "is_data_complete": true,
    "created_at": {
      "seconds": 1715169958,
      "nanoseconds": 958000000
    },
    "topic_id": "pigeonhole_principle",
    "problem_order": [
      "codeforces_1305c",
      "spoj_hallow",
      "codeforces_1501c",
      "codeforces_1994d"
    ]
  },
  "pisano_period": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Pisano%20Period.cpp"
    ],
    "resources": [
      {
        "resource_title": "Pisano period | Wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Pisano_period",
        "resource_comments": ""
      }
    ],
    "completion_count": 1,
    "is_data_complete": true,
    "topic_id": "pisano_period",
    "created_at": {
      "seconds": 1714312421,
      "nanoseconds": 491000000
    }
  },
  "planar_graph_faces": {
    "template_codes": [
      "https://cp-algorithms.com/geometry/planar.html"
    ],
    "created_at": {
      "seconds": 1714764595,
      "nanoseconds": 558000000
    },
    "topic_id": "planar_graph_faces",
    "problem_order": [
      "lightoj_farmers_tale",
      "timus_1664",
      "poj_3743",
      "timus_1681"
    ],
    "is_data_complete": true,
    "resources": [
      {
        "resource_url": "https://cp-algorithms.com/geometry/planar.html",
        "resource_title": "Finding faces of a planar graph and Building planar graph from line segments | CP Algorithms",
        "resource_comments": "",
        "is_starred": true
      }
    ],
    "completion_count": 1
  },
  "planarity_check": {
    "completion_count": 1,
    "is_data_complete": true,
    "template_codes": [],
    "topic_id": "planarity_check",
    "resources": [
      {
        "resource_title": "Planarity testing | Wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Planarity_testing",
        "resource_comments": ""
      },
      {
        "is_video_type": true,
        "resource_url": "https://www.youtube.com/watch?v=1deOVlruc-o",
        "resource_title": "Session 2A - Fully-dynamic Planarity Testing in Polylogarithmic Time",
        "resource_comments": ""
      }
    ],
    "created_at": {
      "seconds": 1714151177,
      "nanoseconds": 249000000
    }
  },
  "plane_based_coordinate_system_3d": {
    "resources": [
      {
        "is_starred": true,
        "resource_title": "Chapter 3.2.5 Coordinate system based on a plane | CP Geo",
        "resource_comments": "",
        "resource_url": "https://victorlecomte.com/cp-geo.pdf"
      }
    ],
    "is_data_complete": true,
    "problem_order": [
      "toph_bikpik_colony",
      "kattis_starsinacan"
    ],
    "created_at": {
      "seconds": 1714761602,
      "nanoseconds": 647000000
    },
    "topic_id": "plane_based_coordinate_system_3d",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%203D.cpp#L131-L161"
    ]
  },
  "planes_3d": {
    "completion_count": 1,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%203D.cpp#L97-L129"
    ],
    "is_data_complete": true,
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://victorlecomte.com/cp-geo.pdf",
        "resource_comments": "",
        "resource_title": "Chapter 3.2 Planes (excluding 3.2.5) | CP Geo"
      }
    ],
    "created_at": {
      "seconds": 1714761578,
      "nanoseconds": 680000000
    },
    "topic_id": "planes_3d"
  },
  "point_location": {
    "created_at": {
      "seconds": 1714826189,
      "nanoseconds": 673000000
    },
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/geometry/point-location.html",
        "resource_title": "Point location | CP Algorithms"
      }
    ],
    "is_data_complete": true,
    "topic_id": "point_location",
    "completion_count": 1,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Geometry/Point%20Location.cpp"
    ],
    "problem_order": [
      "timus_en",
      "uva_12310"
    ]
  },
  "pointers": {
    "resources": [
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Pointers (*) | Tech With Tim",
        "is_video_type": true,
        "resource_url": "https://www.youtube.com/watch?v=jUbOcBkdMF0&list=PLzMcBGfZo4-lmGC8VW0iu6qfMHjy7gLQ3&index=15"
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=RGYGiLUAQ3c&list=PLzMcBGfZo4-lmGC8VW0iu6qfMHjy7gLQ3&index=14",
        "is_starred": true,
        "is_video_type": true,
        "resource_title": "References (&) | Tech With Tim",
        "resource_comments": ""
      },
      {
        "resource_url": "https://www.youtube.com/playlist?list=PL2_aWCzGMAwLZp6LMUKI3cc7pgGsasm2_",
        "is_video_type": true,
        "resource_comments": "",
        "resource_title": "Pointers in C/C++",
        "is_starred": true
      },
      {
        "resource_url": "https://www.programiz.com/cpp-programming/pointers",
        "resource_comments": "",
        "resource_title": "C++ Pointers | Programiz"
      },
      {
        "resource_comments": "",
        "resource_title": "C++ Pointers and Arrays | Programiz",
        "resource_url": "https://www.programiz.com/cpp-programming/pointers-arrays"
      },
      {
        "is_starred": false,
        "resource_url": "https://www.programiz.com/cpp-programming/references",
        "resource_title": "C++ References | Programiz",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "C++ Pass by Reference | Programiz",
        "resource_url": "https://www.programiz.com/cpp-programming/pointers-function"
      }
    ],
    "completion_count": 651,
    "topic_id": "pointers",
    "template_codes": [],
    "created_at": {
      "seconds": 1713661828,
      "nanoseconds": 235000000
    },
    "is_data_complete": true
  },
  "points_and_vectors_2d": {
    "created_at": {
      "seconds": 1714758068,
      "nanoseconds": 95000000
    },
    "is_data_complete": true,
    "topic_id": "points_and_vectors_2d",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L4-L73"
    ],
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://victorlecomte.com/cp-geo.pdf",
        "resource_title": "Chapter 1 Precision issues and epsilons, Chapter 2.1 Points and vectors, 2.2 Transformations and 2.3 Products and angles | CP Geo",
        "resource_comments": ""
      },
      {
        "resource_comments": "check until \"Line Intersection\"",
        "resource_title": "Basic Geometry | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/geometry/basic-geometry.html"
      },
      {
        "resource_title": "Geometry: 2D points and lines [Tutorial]  By Al.Cash",
        "resource_url": "https://codeforces.com/blog/entry/48122",
        "resource_comments": "check until \"Examples\""
      },
      {
        "resource_title": "Basic Geometry for Competitive Programming | Geeks for Geeks",
        "resource_url": "https://www.geeksforgeeks.org/basic-geometry-for-competitive-programming/",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/22175",
        "is_starred": true,
        "resource_title": "Easy geometry using std::complex  By Hikari9"
      },
      {
        "resource_title": "Geometry Russian Contest Problems Translation",
        "resource_url": "https://www.dropbox.com/s/7v0hvsdacw08xd4/Translated%20Geometry%20Set.pdf?e=1",
        "resource_comments": "some of these problems have been used in the practice section below"
      }
    ],
    "completion_count": 7,
    "problem_order": [
      "cses_2189",
      "gym_100168l",
      "uva_10242",
      "uva_10927",
      "gym_100168a",
      "gym_100168b",
      "toph_once_upon_a_time_in_child_hood",
      "yosupo_sort_points_by_argument",
      "uva_920",
      "spoj_chase",
      "lightoj_1383",
      "gym_102361a",
      "codeforces_1025f",
      "kattis_maxcolinear"
    ]
  },
  "points_and_vectors_3d": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%203D.cpp#L1-L95"
    ],
    "created_at": {
      "seconds": 1714761541,
      "nanoseconds": 878000000
    },
    "topic_id": "points_and_vectors_3d",
    "is_data_complete": true,
    "resources": [
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Chapter 3.1 Points, products and orientation | CP Geo",
        "resource_url": "https://victorlecomte.com/cp-geo.pdf"
      }
    ],
    "completion_count": 2
  },
  "pollard_rho": {
    "resources": [
      {
        "resource_url": "https://cp-algorithms.com/algebra/factorization.html",
        "resource_title": "Integer factorization | CP Algorithms",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://en.algorithmica.org/hpc/algorithms/factorization/",
        "resource_title": "Integer Factorization | Algorithmica"
      }
    ],
    "completion_count": 12,
    "is_data_complete": true,
    "topic_id": "pollard_rho",
    "created_at": {
      "seconds": 1714203041,
      "nanoseconds": 315000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Pollard%20Rho.cpp"
    ],
    "problem_order": [
      "yosupo_factorize",
      "spoj_fact1",
      "cf_gym_100753f",
      "spoj_divsum2"
    ]
  },
  "polygon_circle_intersection_2d": {
    "is_data_complete": true,
    "topic_id": "polygon_circle_intersection_2d",
    "created_at": {
      "seconds": 1714763187,
      "nanoseconds": 420000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L1130-L1177"
    ],
    "resources": [],
    "problem_order": [
      "lightoj_intersection_between_circle_a",
      "lightoj_1358",
      "codechef_areafigr",
      "codeforces_497d"
    ]
  },
  "polygon_line_intersection_2d": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L819-L896"
    ],
    "topic_id": "polygon_line_intersection_2d",
    "resources": [
      {
        "resource_title": "6. Polygon stabbing",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/48868",
        "is_starred": true
      },
      {
        "resource_url": "https://tjkendev.github.io/procon-library/python/geometry/line_convex_polygon_intersection.html",
        "resource_comments": "",
        "resource_title": "Intersection between a convex polygon and a line",
        "is_starred": true
      }
    ],
    "created_at": {
      "seconds": 1714762305,
      "nanoseconds": 283000000
    },
    "is_data_complete": true
  },
  "polygon_union_2d": {
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714762781,
      "nanoseconds": 805000000
    },
    "resources": [],
    "topic_id": "polygon_union_2d",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L999-L1044"
    ]
  },
  "polygons_2d": {
    "is_data_complete": true,
    "topic_id": "polygons_2d",
    "created_at": {
      "seconds": 1714760889,
      "nanoseconds": 215000000
    },
    "resources": [
      {
        "is_starred": true,
        "resource_title": "Chapter 2.6.1 Polygon area and 2.6.2 Cutting-ray test  | CP Geo",
        "resource_url": "https://victorlecomte.com/cp-geo.pdf",
        "resource_comments": ""
      },
      {
        "resource_url": "https://cp-algorithms.com/geometry/oriented-triangle-area.html",
        "resource_title": "Oriented area of a triangle | CP Algorithms",
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "resource_url": "https://cp-algorithms.com/geometry/area-of-simple-polygon.html",
        "is_starred": true,
        "resource_title": "Finding area of simple polygon | CP Algorithms",
        "resource_comments": ""
      }
    ],
    "completion_count": 4,
    "problem_order": [
      "cses_2191",
      "kattis_polygonarea",
      "uva_12300",
      "uva_478",
      "uva_11800",
      "gym_101845d",
      "kattis_pieceofcake",
      "codechef_chefpoly"
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L555-L577"
    ]
  },
  "polyhedron_3d": {
    "resources": [
      {
        "resource_title": "Chapter 3.5 Polyhedrons | CP Geo",
        "resource_url": "https://victorlecomte.com/cp-geo.pdf",
        "is_starred": true,
        "resource_comments": ""
      }
    ],
    "is_data_complete": true,
    "topic_id": "polyhedron_3d",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%203D.cpp#L307-L365",
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%203D.cpp#L779-L825"
    ],
    "created_at": {
      "seconds": 1714761708,
      "nanoseconds": 438000000
    }
  },
  "polynomial_composition": {
    "created_at": {
      "seconds": 1714365820,
      "nanoseconds": 6000000
    },
    "is_data_complete": true,
    "topic_id": "polynomial_composition",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Polynomial.cpp"
    ],
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/101909",
        "resource_comments": "",
        "resource_title": "Fast polynomial composition  By adamant"
      }
    ]
  },
  "polynomial_division_and_remainder": {
    "created_at": {
      "seconds": 1714366209,
      "nanoseconds": 446000000
    },
    "topic_id": "polynomial_division_and_remainder",
    "completion_count": 1,
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Polynomial.cpp"
    ],
    "resources": [
      {
        "resource_url": "https://cp-algorithms.com/algebra/polynomial.html#euclidean-division",
        "resource_title": "Euclidean division | CP Algorithm",
        "resource_comments": ""
      }
    ]
  },
  "polynomial_exp": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Polynomial.cpp"
    ],
    "created_at": {
      "seconds": 1714365798,
      "nanoseconds": 416000000
    },
    "topic_id": "polynomial_exp",
    "resources": [
      {
        "resource_url": "https://cp-algorithms.com/algebra/polynomial.html#exponent",
        "resource_title": "Exponent | CP Algorithm",
        "resource_comments": ""
      }
    ],
    "is_data_complete": true,
    "completion_count": 2
  },
  "polynomial_factorization_of_xn_minus_1": {
    "topic_id": "polynomial_factorization_of_xn_minus_1",
    "created_at": {
      "seconds": 1714379803,
      "nanoseconds": 64000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Polynomial%20Factorization.cpp"
    ],
    "resources": [
      {
        "resource_title": "Cyclotomic polynomial | Wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Cyclotomic_polynomial",
        "resource_comments": ""
      }
    ],
    "is_data_complete": true
  },
  "polynomial_interpolation": {
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714366107,
      "nanoseconds": 98000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Polynomial.cpp"
    ],
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/algebra/polynomial.html#interpolation",
        "resource_title": "Interpolation | CP Algorithms"
      },
      {
        "resource_title": "Evaluation and interpolation on geometric progression  By adamant",
        "resource_url": "https://codeforces.com/blog/entry/118018",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_title": "[TUTORIAL] Basic Lagrange Interpolation pt. 2  By grhkm",
        "resource_url": "https://codeforces.com/blog/entry/94143"
      }
    ],
    "topic_id": "polynomial_interpolation",
    "completion_count": 1
  },
  "polynomial_inverse": {
    "topic_id": "polynomial_inverse",
    "resources": [
      {
        "resource_url": "https://cp-algorithms.com/algebra/polynomial.html#inverse-series",
        "resource_title": "Inverse series | CP Algorithms",
        "resource_comments": ""
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Polynomial.cpp"
    ],
    "created_at": {
      "seconds": 1714365778,
      "nanoseconds": 859000000
    },
    "completion_count": 2,
    "is_data_complete": true
  },
  "polynomial_log": {
    "topic_id": "polynomial_log",
    "completion_count": 2,
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/algebra/polynomial.html#logarithm",
        "resource_title": "Logarithm | CP Algorithm"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Polynomial.cpp"
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714365803,
      "nanoseconds": 529000000
    },
    "problem_order": [
      "yosupo_log_of_formal_power_series",
      "hackerrank_k_inversion_permutations",
      "codechef_pparts"
    ]
  },
  "polynomial_pow": {
    "problem_order": [
      "yosupo_pow_of_formal_power_series",
      "codeforces_1096g"
    ],
    "is_data_complete": true,
    "topic_id": "polynomial_pow",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Polynomial.cpp"
    ],
    "created_at": {
      "seconds": 1714365810,
      "nanoseconds": 150000000
    },
    "completion_count": 2,
    "resources": [
      {
        "resource_title": "  k-th power | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/algebra/polynomial.html#k-th-power",
        "resource_comments": ""
      }
    ]
  },
  "polynomial_root_finding": {
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://cp-algorithms.com/num_methods/roots_newton.html",
        "resource_title": "Newton's method for finding roots | CP Algorithms"
      }
    ],
    "template_codes": [],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714834848,
      "nanoseconds": 71000000
    },
    "topic_id": "polynomial_root_finding"
  },
  "polynomial_roots_under_modulo": {
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/104466",
        "resource_comments": "check idea 8",
        "resource_title": "A bit more of general ideas  By adamant",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "resource_title": "[問題案] mod p equation | Discussion",
        "resource_url": "https://github.com/yosupo06/library-checker-problems/issues/924"
      }
    ],
    "created_at": {
      "seconds": 1714374062,
      "nanoseconds": 643000000
    },
    "is_data_complete": true,
    "template_codes": [],
    "topic_id": "polynomial_roots_under_modulo"
  },
  "polynomial_shift": {
    "created_at": {
      "seconds": 1714373507,
      "nanoseconds": 312000000
    },
    "completion_count": 2,
    "topic_id": "polynomial_shift",
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/99646",
        "resource_comments": "",
        "resource_title": "OGFs, EGFs, differentiation and Taylor shifts  By adamant"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Polynomial.cpp"
    ],
    "is_data_complete": true
  },
  "polynomial_shift_sampling_points": {
    "created_at": {
      "seconds": 1714373870,
      "nanoseconds": 99000000
    },
    "topic_id": "polynomial_shift_sampling_points",
    "is_data_complete": true,
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/115696",
        "resource_comments": "",
        "resource_title": "Shift of polynomial sampling points  By adamant"
      }
    ],
    "template_codes": []
  },
  "polynomial_sqrt": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Polynomial.cpp"
    ],
    "created_at": {
      "seconds": 1714365815,
      "nanoseconds": 299000000
    },
    "topic_id": "polynomial_sqrt",
    "is_data_complete": true,
    "resources": [],
    "completion_count": 2
  },
  "polynomial_sum": {
    "completion_count": 1,
    "topic_id": "polynomial_sum",
    "created_at": {
      "seconds": 1714376253,
      "nanoseconds": 349000000
    },
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Polynomial%20Sum.cpp"
    ],
    "resources": [
      {
        "resource_title": "Discussion on library checker",
        "resource_comments": "",
        "resource_url": "https://github.com/yosupo06/library-checker-problems/issues/98"
      }
    ]
  },
  "polynomial_with_binomial_coefficients": {
    "resources": [
      {
        "resource_title": "Binomial coefficients as a basis for the space of polynomials",
        "resource_url": "https://en.wikipedia.org/wiki/Binomial_coefficient#Binomial_coefficients_as_a_basis_for_the_space_of_polynomials",
        "resource_comments": ""
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Polynomial%20with%20Binomial%20Coefficients.cpp"
    ],
    "topic_id": "polynomial_with_binomial_coefficients",
    "created_at": {
      "seconds": 1714379635,
      "nanoseconds": 473000000
    },
    "is_data_complete": true
  },
  "poset_ft_dilworths_and_mirskys_theorem": {
    "created_at": {
      "seconds": 1714136121,
      "nanoseconds": 204000000
    },
    "completion_count": 2,
    "is_data_complete": true,
    "template_codes": [],
    "topic_id": "poset_ft_dilworths_and_mirskys_theorem",
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/3781",
        "resource_title": "Partially Ordered Sets  By paladin8",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "resource_title": "Lecture 14 – Posets: Mirsky’s & Dilworth’s Theorems",
        "resource_url": "https://sites.gatech.edu/math3012openresources/lecture-videos/lecture-14/",
        "is_starred": true
      },
      {
        "resource_title": "Dilworth Theorem for Competitive Programming | Mirsky's Theorem | Bipartite Matching | Flow  | Vivek Gupta",
        "resource_url": "https://www.youtube.com/watch?v=7TpBLqvqeaA",
        "resource_comments": "",
        "is_starred": true
      }
    ]
  },
  "power_tower": {
    "is_data_complete": true,
    "problem_order": [
      "cf_gym_100975f",
      "kattis_exponial",
      "codeforces_906d",
      "codechef_ckoj20e"
    ],
    "completion_count": 7,
    "topic_id": "power_tower",
    "created_at": {
      "seconds": 1714207317,
      "nanoseconds": 749000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Power%20Tower.cpp"
    ],
    "resources": [
      {
        "is_starred": true,
        "resource_comments": "check \"Generalization\"",
        "resource_title": "Euler's totient function | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/algebra/phi-function.html#generalization"
      }
    ]
  },
  "pq_tree": {
    "topic_id": "pq_tree",
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://www.sciencedirect.com/science/article/pii/S0022000076800451#",
        "resource_title": "Testing for the consecutive ones property, interval graphs, and graph planarity using PQ-tree algorithms | Paper by Kellogg S. Booth, George S. Lueker"
      }
    ],
    "created_at": {
      "seconds": 1713826905,
      "nanoseconds": 130000000
    },
    "template_codes": [
      "https://codeforces.com/contest/1552/submission/123723552"
    ],
    "is_data_complete": true,
    "problem_order": [
      "codeforces_1552i",
      "codeforces_243e",
      "cf_gym_101726g"
    ]
  },
  "pragmas": {
    "resources": [
      {
        "resource_url": "https://www.geeksforgeeks.org/pragma-directive-in-c-c/",
        "resource_comments": "",
        "resource_title": "#pragma Directive in C | Geeks for Geeks",
        "is_starred": true
      },
      {
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/66279",
        "resource_title": "Speeding Up for Naive Algorithm  By E869120",
        "resource_comments": "check all comments"
      },
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Speed up Code executions with help of Pragma in C/C++ | Geeks for Geeks",
        "resource_url": "https://www.geeksforgeeks.org/speed-up-naive-algorithms-in-competitive-coding-in-c-cpp/"
      },
      {
        "resource_title": "Tree queries for O(nq)  By Golovanov399",
        "resource_url": "https://codeforces.com/blog/entry/67001",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_url": "https://stackoverflow.com/questions/76598335/using-pragmas-efficiently-in-c",
        "resource_comments": "it might slow down your code sometimes, use it only when your code is very simple and cache-friendly",
        "resource_title": "Using pragmas efficiently in C++"
      },
      {
        "is_starred": true,
        "resource_title": "Vectorization in C++ | USACO Guide",
        "resource_comments": "",
        "resource_url": "https://usaco.guide/adv/vectorization?lang=cpp"
      }
    ],
    "completion_count": 4,
    "topic_id": "pragmas",
    "template_codes": [],
    "created_at": {
      "seconds": 1715199010,
      "nanoseconds": 713000000
    },
    "problem_order": [
      "codeforces_911g",
      "codeforces_855f",
      "codechef_songif",
      "codeforces_925e"
    ],
    "is_data_complete": true
  },
  "prefix_sum": {
    "resources": [
      {
        "resource_title": "Prefix Sums - Problems | Errichto Algorithms",
        "resource_url": "https://www.youtube.com/watch?v=PhgtNY_-CiY",
        "is_starred": true,
        "is_video_type": true,
        "resource_comments": ""
      },
      {
        "resource_title": "Introduction to Prefix Sums | USACO Guide",
        "resource_url": "https://usaco.guide/silver/prefix-sums?lang=cpp",
        "resource_comments": "",
        "is_starred": true
      }
    ],
    "problem_order": [
      "cses_1646",
      "yosupo_static_range_sum",
      "codeforces_363b",
      "codeforces_1807d",
      "usaco_572",
      "codeforces_433b",
      "usaco_595",
      "codeforces_1738b",
      "cses_1661",
      "cses_1662"
    ],
    "created_at": {
      "seconds": 1715078677,
      "nanoseconds": 267000000
    },
    "completion_count": 274,
    "topic_id": "prefix_sum",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Basics/Prefix%20Sum.cpp"
    ],
    "is_data_complete": true
  },
  "prefix_sum_queries_of_nci": {
    "resources": [],
    "topic_id": "prefix_sum_queries_of_nci",
    "created_at": {
      "seconds": 1713662043,
      "nanoseconds": 233000000
    },
    "completion_count": 3,
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Prefix%20Sum%20Queries%20of%20nCi.cpp"
    ]
  },
  "prefix_xor": {
    "topic_id": "prefix_xor",
    "resources": [
      {
        "resource_title": "Prefix Xor Array | Geeks for Geeks",
        "resource_url": "https://www.geeksforgeeks.org/prefix-xor-array/",
        "resource_comments": ""
      },
      {
        "resource_title": "CSES - Range Xor Queries | USACO Guide",
        "resource_url": "https://usaco.guide/problems/cses-1650-range-xor-queries/solution",
        "resource_comments": "",
        "is_starred": true
      }
    ],
    "is_data_complete": true,
    "completion_count": 274,
    "created_at": {
      "seconds": 1715083950,
      "nanoseconds": 2000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Basics/Prefix%20Xor.cpp"
    ]
  },
  "prime_counting_function": {
    "completion_count": 8,
    "resources": [
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Counting primes in n^(2/3) By Maksim1744",
        "resource_url": "https://codeforces.com/blog/entry/91632"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/44466",
        "resource_title": "Editorial of Problem F",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_title": "COMPUTING π(x): THE MEISSEL, LEHMER, LAGARIAS, MILLER, ODLYZKO METHOD | Paper by M. DELEGLISE AND J. RIVAT",
        "resource_url": "https://cr.yp.to/bib/1996/deleglise.pdf"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/117783",
        "resource_comments": "Hard! Ignore if you want.",
        "resource_title": "Dirichlet convolution. Part 2: Dirichlet series and prime counting  By adamant"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Prime%20Counting%20Function.cpp"
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714199828,
      "nanoseconds": 883000000
    },
    "topic_id": "prime_counting_function"
  },
  "primitive_root": {
    "topic_id": "primitive_root",
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://cp-algorithms.com/algebra/primitive-root.html",
        "resource_title": "Primitive Root | CP Algorithms",
        "resource_comments": ""
      },
      {
        "resource_url": "https://zobayer.blogspot.com/2010/02/primitive-root.html",
        "resource_title": "Primitive root modulo n | I, ME AND MYSELF !!!",
        "resource_comments": "",
        "is_starred": true
      }
    ],
    "created_at": {
      "seconds": 1714223562,
      "nanoseconds": 68000000
    },
    "completion_count": 5,
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Primitive%20Root.cpp"
    ]
  },
  "principle_of_inclusion_and_exclusion": {
    "is_data_complete": true,
    "resources": [
      {
        "resource_title": "The Inclusion-Exclusion Principle | CP Algorithms",
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/combinatorics/inclusion-exclusion.html",
        "is_starred": true
      },
      {
        "resource_title": "22.3 Inclusion-exclusion | CPH",
        "resource_url": "https://usaco.guide/CPH.pdf#page=223",
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/64625",
        "resource_title": "[Tutorial] Inclusion-Exclusion Principle  By Roundgod"
      }
    ],
    "completion_count": 23,
    "template_codes": [],
    "created_at": {
      "seconds": 1713662041,
      "nanoseconds": 233000000
    },
    "topic_id": "principle_of_inclusion_and_exclusion",
    "problem_order": [
      "uva_1266",
      "cses_2185",
      "uva_2906",
      "spoj_ngm2",
      "spoj_easymath",
      "spoj_momos",
      "hdu_4135",
      "spoj_mskycode",
      "codechef_countrel",
      "spoj_sqfree",
      "spoj_kprimesb",
      "spoj_iitkwpch",
      "spoj_subset",
      "atcoder_dp_y",
      "codeforces_1750d",
      "hdu_6397",
      "atcoder_abc152_f",
      "hackerrank_k_inversion_permutations",
      "baekjoon_19313",
      "usaco_862"
    ]
  },
  "priority_queue": {
    "resources": [
      {
        "is_starred": true,
        "resource_title": "C++ Priority Queue | Programiz",
        "resource_url": "https://www.programiz.com/cpp-programming/priority-queue",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "is_video_type": true,
        "resource_title": "Priority Queue | C++ STL (Standard Template Library) | std::priority_queue  Knowledge Center",
        "resource_url": "https://www.youtube.com/watch?v=WhIcVlkZ19s&list=PL1w8k37X_6L9NXrP1D31hDTKcdAPIL0cG&index=11",
        "is_starred": false
      },
      {
        "resource_comments": "check the priority queue section",
        "resource_url": "https://www.youtube.com/watch?v=RRVYpIET_RU",
        "is_video_type": true,
        "resource_title": "Complete C++ STL in 1 Video | Time Complexity and Notes |  take U forward"
      },
      {
        "resource_url": "https://www.geeksforgeeks.org/priority-queue-in-cpp-stl/",
        "resource_comments": "",
        "resource_title": "Priority Queue in C++ Standard Template Library (STL) | Geeks for Geeks"
      }
    ],
    "is_data_complete": true,
    "topic_id": "priority_queue",
    "completion_count": 209,
    "template_codes": [],
    "created_at": {
      "seconds": 1715113231,
      "nanoseconds": 780000000
    }
  },
  "priority_queue_undo_trick": {
    "is_data_complete": true,
    "template_codes": [
      "https://gist.github.com/brunomaletta/81ba61f5e1e508e5f7e1d536dfd19958"
    ],
    "topic_id": "priority_queue_undo_trick",
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/111117",
        "resource_title": "[Tutorial] Supporting Priority-Queue-like Undoing on DS  By Monogon"
      }
    ],
    "created_at": {
      "seconds": 1713838574,
      "nanoseconds": 144000000
    }
  },
  "probabilities_and_expected_values": {
    "problem_order": [
      "codeforces_9a",
      "codeforces_312b",
      "codeforces_476b",
      "codeforces_453a",
      "spoj_adasea",
      "codeforces_1461c",
      "codeforces_621c",
      "codeforces_540d",
      "codeforces_442b",
      "uva_997",
      "codechef_marting1",
      "codeforces_839c",
      "codeforces_518d",
      "codeforces_148d",
      "uva_3904",
      "uva_12004",
      "codeforces_280c",
      "codechef_kaladin",
      "atcoder_abc189_f",
      "codeforces_1864e",
      "codeforces_1824b2",
      "codeforces_1778d",
      "codeforces_1612e",
      "codeforces_1599c",
      "codeforces_1525e",
      "codeforces_1418e",
      "codeforces_1096f",
      "codeforces_1097d",
      "codeforces_16e",
      "codeforces_26d",
      "codeforces_749e",
      "codeforces_107b",
      "codeforces_77b",
      "codeforces_626d",
      "codeforces_351b",
      "codeforces_235b",
      "codeforces_167b",
      "codeforces_109b",
      "codeforces_30c",
      "lightoj_birthday_paradox",
      "codeforces_1295f",
      "cf_gym_102059c",
      "codeforces_123e",
      "codeforces_113d",
      "codeforces_623d",
      "kattis_gemisland",
      "codeforces_1392h"
    ],
    "created_at": {
      "seconds": 1714503065,
      "nanoseconds": 163000000
    },
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "is_video_type": true,
        "resource_url": "https://codeforces.com/blog/entry/62690",
        "resource_title": "Sums and Expected Value — part 1  By Errichto"
      },
      {
        "resource_url": "https://www.topcoder.com/thrive/articles/Understanding%20Probabilities",
        "resource_title": "UNDERSTANDING PROBABILITIES | supernova",
        "resource_comments": "",
        "is_starred": true
      }
    ],
    "completion_count": 19,
    "topic_id": "probabilities_and_expected_values",
    "template_codes": [],
    "is_data_complete": true
  },
  "programming": {
    "is_data_complete": true,
    "created_at": {
      "seconds": 1715027074,
      "nanoseconds": 55000000
    },
    "completion_count": 1223,
    "topic_id": "programming",
    "resources": [
      {
        "is_starred": true,
        "resource_comments": "",
        "is_video_type": true,
        "resource_title": "Why Programming Is Important? |  Bugra Kilic",
        "resource_url": "https://www.youtube.com/watch?v=Dv7gLpW91DM"
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=N7ZmPYaXoic",
        "is_video_type": true,
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "What is Coding?  | TeXplaiNIT"
      },
      {
        "resource_title": "What is Programming? | Code Academy",
        "resource_comments": "",
        "resource_url": "https://www.codecademy.com/article/what-is-programming"
      },
      {
        "is_starred": true,
        "resource_url": "https://www.freecodecamp.org/news/what-is-programming/",
        "resource_comments": "",
        "resource_title": "What is Computer Programming? | freecodecamp"
      }
    ],
    "template_codes": []
  },
  "prufer_code": {
    "topic_id": "prufer_code",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Prufer%20Code.cpp"
    ],
    "problem_order": [
      "cses_1134",
      "timus_1069",
      "uva_1784",
      "codeforces_156d",
      "codechef_combiisfun"
    ],
    "completion_count": 4,
    "created_at": {
      "seconds": 1714109643,
      "nanoseconds": 613000000
    },
    "resources": [
      {
        "resource_url": "https://cp-algorithms.com/graph/pruefer_code.html",
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Prüfer code, Cayeley's Formula and the Number of ways to make a graph connected | CP Algorithms"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/123211",
        "resource_title": "Counting forests with limited degrees and component sizes  By -is-this-fft-",
        "resource_comments": ""
      }
    ],
    "is_data_complete": true
  },
  "pythagorean_triplets": {
    "created_at": {
      "seconds": 1714378868,
      "nanoseconds": 3000000
    },
    "completion_count": 3,
    "is_data_complete": true,
    "resources": [
      {
        "resource_title": "Pythagorean triple | Wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Pythagorean_triple",
        "resource_comments": ""
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Pythagorean%20%20Triplets.cpp"
    ],
    "topic_id": "pythagorean_triplets"
  },
  "q_binomial": {
    "topic_id": "q_binomial",
    "is_data_complete": true,
    "resources": [
      {
        "resource_comments": "very good and understandable resource!",
        "resource_url": "https://esirc.emporia.edu/bitstream/handle/123456789/3595/Geoffrey%20Critzer.pdf",
        "is_starred": true,
        "resource_title": "Combinatorics of Vector Spaces over Finite Fields | An Abstract of the Thesis of Geoffrey Critzer"
      },
      {
        "resource_comments": "",
        "resource_url": "https://en.wikipedia.org/wiki/Gaussian_binomial_coefficient",
        "resource_title": "Gaussian binomial coefficient | Wiki"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/99598",
        "resource_title": "Moment-generating functions, inversions and q-analogs  By adamant",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_title": "Note -「q-analog」组合意义灭天地",
        "resource_url": "https://www.cnblogs.com/rainybunny/p/16475568.html"
      }
    ],
    "problem_order": [
      "codeforces_1916h2",
      "codeforces_1603f",
      "atcoder_arc139_f",
      "atcoder_abc278_h"
    ],
    "completion_count": 2,
    "created_at": {
      "seconds": 1714376985,
      "nanoseconds": 37000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/q%20Binomial.cpp"
    ]
  },
  "queue": {
    "topic_id": "queue",
    "is_data_complete": true,
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "C++ Queue | Programiz",
        "resource_url": "https://www.programiz.com/cpp-programming/queue",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/watch?v=M73wcfBwX7Y&list=PL1w8k37X_6L9NXrP1D31hDTKcdAPIL0cG&index=10",
        "resource_title": "Queue | C++ STL (Standard Template Library) | std::queue  Knowledge Center",
        "is_video_type": true
      },
      {
        "resource_comments": "check the queue section",
        "resource_url": "https://www.youtube.com/watch?v=RRVYpIET_RU",
        "is_video_type": true,
        "resource_title": "Complete C++ STL in 1 Video | Time Complexity and Notes |  take U forward"
      },
      {
        "resource_title": "Queue in C++ Standard Template Library (STL) | Geeks for Geeks",
        "resource_url": "https://www.geeksforgeeks.org/queue-cpp-stl/",
        "resource_comments": ""
      }
    ],
    "problem_order": [
      "hackerrank_si_implement_queue",
      "spoj_queueez",
      "aizu_alds1_3_b",
      "uva_540"
    ],
    "created_at": {
      "seconds": 1715113208,
      "nanoseconds": 741000000
    },
    "completion_count": 220,
    "template_codes": []
  },
  "queue_undo_trick": {
    "completion_count": 2,
    "created_at": {
      "seconds": 1713838209,
      "nanoseconds": 844000000
    },
    "topic_id": "queue_undo_trick",
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/83467",
        "is_starred": true,
        "resource_title": "[Tutorial] Supporting Queue-like Undoing on DS | By Noam527"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Queue%20Undo%20Trick.cpp"
    ],
    "is_data_complete": true
  },
  "quick_sort": {
    "is_data_complete": true,
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "Quicksort Algorithm | Programiz",
        "is_starred": true,
        "resource_url": "https://www.programiz.com/dsa/quick-sort"
      },
      {
        "resource_title": "Quick Sort [Visual Explanation] | Manim Animation [4K] | CuriousWalk",
        "resource_url": "https://www.youtube.com/watch?v=WprjBK0p6rw",
        "is_video_type": true,
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "resource_title": "QUICK SORT | Sorting Algorithms | DSA | GeeksforGeeks",
        "resource_url": "https://www.youtube.com/watch?v=PgBzjlCcFvc",
        "is_video_type": true
      },
      {
        "resource_title": "Sorting Algorithm Visualizer | VisuAlgo",
        "is_starred": true,
        "resource_url": "https://visualgo.net/en/sorting",
        "resource_comments": "select Quick Sort"
      }
    ],
    "completion_count": 109,
    "template_codes": [
      "https://www.programiz.com/dsa/quick-sort"
    ],
    "topic_id": "quick_sort",
    "created_at": {
      "seconds": 1715159089,
      "nanoseconds": 463000000
    }
  },
  "radix_sort": {
    "topic_id": "radix_sort",
    "template_codes": [
      "https://www.programiz.com/dsa/radix-sort"
    ],
    "resources": [
      {
        "is_starred": true,
        "resource_title": "Radix Sort Algorithm | Programiz",
        "resource_comments": "",
        "resource_url": "https://www.programiz.com/dsa/radix-sort"
      },
      {
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/watch?v=nu4gDuFabIM",
        "resource_title": "Radix Sort | GeeksforGeeks",
        "is_video_type": true,
        "is_starred": true
      },
      {
        "is_starred": true,
        "resource_comments": "select Radix Sort",
        "resource_title": "Sorting Algorithm Visualizer | VisuAlgo",
        "resource_url": "https://visualgo.net/en/sorting"
      }
    ],
    "completion_count": 103,
    "created_at": {
      "seconds": 1715159856,
      "nanoseconds": 509000000
    },
    "is_data_complete": true
  },
  "randomized_algorithms": {
    "topic_id": "randomized_algorithms",
    "resources": [
      {
        "resource_comments": "",
        "is_video_type": true,
        "resource_url": "https://codeforces.com/blog/entry/71097",
        "resource_title": "Randomized algorithms lecture, part 1 & 2  By Errichto",
        "is_starred": true
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/51244",
        "resource_comments": "",
        "resource_title": "Randomization tasks  By Radewoosh"
      }
    ],
    "problem_order": [
      "cf_gym_104283c",
      "codeforces_840d",
      "cf_gym_100851j",
      "codechef_nopi",
      "kattis_findinglines",
      "cf_gym_101341i",
      "codeforces_364d",
      "cf_gym_101741f",
      "codeforces_1061f",
      "codeforces_753c",
      "cf_gym_100502b"
    ],
    "completion_count": 4,
    "template_codes": [],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714806987,
      "nanoseconds": 619000000
    }
  },
  "rational_approximation_stern_brocot_tree": {
    "is_data_complete": true,
    "topic_id": "rational_approximation_stern_brocot_tree",
    "resources": [
      {
        "resource_url": "https://cp-algorithms.com/others/stern_brocot_tree_farey_sequences.html",
        "is_starred": true,
        "resource_title": "The Stern-Brocot tree and Farey sequences | CP Algorithm",
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_title": "Some discussions about Finding fraction in a range",
        "resource_comments": "check all comments",
        "resource_url": "https://codeforces.com/blog/entry/50244"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/2674",
        "resource_comments": "",
        "resource_title": "Misunderstood the problem but miraculously got an AC By Sayakiss"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Rational%20Approximation.cpp"
    ],
    "problem_order": [
      "uva_10077",
      "yosupo_rational_approximation",
      "timus_1673",
      "uva_4878",
      "yandex_5457e"
    ],
    "created_at": {
      "seconds": 1714284488,
      "nanoseconds": 383000000
    }
  },
  "reachability_tree": {
    "is_data_complete": true,
    "resources": [
      {
        "resource_title": "Kruskal Reconstruction Tree | Yet Another Competitive Programming Blog",
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://mzhang2021.github.io/cp-blog/kruskal/"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/85714",
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "[Tutorial] Reachability Tree / DSU-tree | prabowo"
      },
      {
        "resource_title": "Merging Queries Trick  By SlavicG",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/100666"
      }
    ],
    "completion_count": 12,
    "problem_order": [
      "codeforces_1706e",
      "codeforces_1416d",
      "coci18_pictionary",
      "codechef_chefcomp",
      "atcoder_asaporo2_e",
      "codechef_tulips",
      "codeforces_1628e",
      "tlx_apio2020_b",
      "usaco_384"
    ],
    "topic_id": "reachability_tree",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Reachability%20Tree.cpp"
    ],
    "created_at": {
      "seconds": 1713322694,
      "nanoseconds": 224000000
    }
  },
  "rectangle_union": {
    "resources": [
      {
        "resource_comments": "check \"Rectangle union area\"",
        "resource_url": "https://codeforces.com/blog/entry/20377",
        "is_starred": true,
        "resource_title": "How to sweep like a Sir  By DanAlex"
      },
      {
        "resource_title": "Rectangle Union Problem  By P_Nyagolov",
        "resource_comments": "check comments",
        "resource_url": "https://codeforces.com/blog/entry/44484"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Geometry/Rectangle%20Union.cpp"
    ],
    "created_at": {
      "seconds": 1714823797,
      "nanoseconds": 546000000
    },
    "problem_order": [
      "yosupo_area_of_union_of_rectangles",
      "gym_101982f",
      "kattis_kingdomofants"
    ],
    "topic_id": "rectangle_union",
    "is_data_complete": true
  },
  "recursion": {
    "is_data_complete": true,
    "problem_order": [
      "cf_group_223339a",
      "cf_group_223339b",
      "cf_group_223339c",
      "cf_group_223339j",
      "cf_group_223339o",
      "cf_group_223339f",
      "spoj_hrecurs",
      "cses_1068",
      "cf_group_223339r",
      "cses_2165",
      "cf_group_223339y",
      "cses_1623",
      "cf_group_223339w",
      "cf_group_223339u"
    ],
    "resources": [
      {
        "resource_url": "https://www.youtube.com/playlist?list=PLBlnK6fEyqRjTO_UNGKuaaoxEqvSF0t5h",
        "resource_title": "Recursion in C | Neso Academy",
        "resource_comments": "check the full playlist",
        "is_video_type": true,
        "is_starred": true
      },
      {
        "is_starred": true,
        "resource_url": "https://www.programiz.com/cpp-programming/recursion",
        "resource_comments": "",
        "resource_title": "C++ Recursion"
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "5 Simple Steps for Solving Any Recursive Problem | Reducible",
        "resource_url": "https://www.youtube.com/watch?v=ngCos392W4w",
        "is_video_type": true
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "is_video_type": true,
        "resource_title": "Towers of Hanoi: A Complete Recursive Visualization | Reducible",
        "resource_url": "https://www.youtube.com/watch?v=rf6uf3jNjbo&list=PLpXOY-RxVRTM_-Lvss2ezy1lVl6VUrzW2&index=2"
      },
      {
        "resource_url": "https://www.geeksforgeeks.org/introduction-to-recursion-data-structure-and-algorithm-tutorials/",
        "resource_title": "Introduction to Recursion – Data Structure and Algorithm Tutorials | Geeks for Geeks",
        "resource_comments": ""
      },
      {
        "resource_title": "[Bangla] An In-depth Analysis of Function and Recursion in Competitive Programming - YouKn0wWho Academy",
        "is_video_type": true,
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/watch?v=QwR1_GXnNkA"
      },
      {
        "is_video_type": true,
        "resource_title": "Recursion Series | take U forward",
        "resource_url": "https://www.youtube.com/playlist?list=PLgUwDviBIf0rGlzIn_7rsaR2FQ5e6ZOL9",
        "resource_comments": ""
      }
    ],
    "created_at": {
      "seconds": 1713662087,
      "nanoseconds": 190000000
    },
    "topic_id": "recursion",
    "template_codes": [],
    "completion_count": 327
  },
  "reeds_sloane_algorithm": {
    "completion_count": 1,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Reeds%20Sloane%20Algorithm.cpp"
    ],
    "created_at": {
      "seconds": 1714462245,
      "nanoseconds": 542000000
    },
    "topic_id": "reeds_sloane_algorithm",
    "is_data_complete": true,
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/61306?#comment-452367",
        "resource_title": "Comment Thread"
      },
      {
        "resource_title": "Shift Register Synthesis (Modulo m ) | Paper by Reeds and Sloane",
        "resource_comments": "",
        "resource_url": "https://www.researchgate.net/publication/220616688_Shift_Register_Synthesis_Modulo_m"
      }
    ]
  },
  "reflections_on_a_rectangle": {
    "template_codes": [],
    "topic_id": "reflections_on_a_rectangle",
    "is_data_complete": true,
    "resources": [],
    "created_at": {
      "seconds": 1714826729,
      "nanoseconds": 898000000
    }
  },
  "rerooting_technique": {
    "resources": [
      {
        "resource_url": "https://usaco.guide/gold/all-roots?lang=cpp",
        "resource_comments": "",
        "resource_title": "DP on Trees - Solving For All Roots | USACO Guide",
        "is_starred": true
      },
      {
        "resource_title": "Online Query Based Rerooting Technique  By DeadlyCritic",
        "resource_url": "https://codeforces.com/blog/entry/76150",
        "is_starred": true,
        "resource_comments": "check upto \"Advanced\" section if you are new to this topic"
      },
      {
        "resource_comments": "not necessary to check if you are a beginner",
        "resource_url": "https://codeforces.com/blog/entry/124286",
        "resource_title": "The Ultimate Reroot Template  By pajenegod"
      },
      {
        "is_video_type": true,
        "resource_url": "https://www.youtube.com/watch?v=7_huTWwl5jM",
        "resource_title": "Rerooting DP on Trees Tutorial | codemastercpp",
        "resource_comments": ""
      }
    ],
    "topic_id": "rerooting_technique",
    "is_data_complete": true,
    "template_codes": [
      "https://usaco.guide/gold/all-roots?lang=cpp"
    ],
    "created_at": {
      "seconds": 1714732855,
      "nanoseconds": 985000000
    },
    "problem_order": [
      "cses_1132",
      "cses_1133",
      "codeforces_1092f",
      "codeforces_219d",
      "codeforces_1324f",
      "codeforces_1000g",
      "atcoder_dp_v",
      "codeforces_1187e",
      "atcoder_abc220_f",
      "baekjoon_14875",
      "atcoder_abc160_f",
      "codeforces_960e",
      "atcoder_abc149_f",
      "atcoder_abc223_g",
      "atcoder_abc222_f",
      "codeforces_543d",
      "codeforces_852e",
      "atcoder_abc337_g",
      "dmoj_apio10p2",
      "izho17_road",
      "cf_group_363472a",
      "codeforces_1402c"
    ],
    "completion_count": 19
  },
  "resultant_of_two_polynomials": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Polynomial.cpp"
    ],
    "topic_id": "resultant_of_two_polynomials",
    "resources": [
      {
        "resource_url": "https://cp-algorithms.com/algebra/polynomial.html#resultant",
        "resource_comments": "",
        "resource_title": "Resultant and Half-GCD | CP Algorithms"
      },
      {
        "resource_title": "Half-GCD algorithm  By adamant",
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/101850"
      }
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714366161,
      "nanoseconds": 488000000
    },
    "completion_count": 0
  },
  "rope": {
    "completion_count": 5,
    "template_codes": [
      "https://codeforces.com/blog/entry/10355"
    ],
    "is_data_complete": true,
    "topic_id": "rope",
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/10355",
        "resource_title": "Implicit cartesian tree in GNU C++ STL | By Perlik",
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_title": "STL Ropes in C++ | Geeks For Feeks",
        "resource_url": "https://www.geeksforgeeks.org/stl-ropes-in-c/",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Mirrored Rope Trick: Ropes with Reverse Queries | By chromate00",
        "resource_url": "https://codeforces.com/blog/entry/107434"
      }
    ],
    "created_at": {
      "seconds": 1713820175,
      "nanoseconds": 377000000
    },
    "problem_order": [
      "msk_1974",
      "baekjoon_14131",
      "cses_2073"
    ]
  },
  "rotating_calipers": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L741-L794"
    ],
    "completion_count": 1,
    "problem_order": [
      "kattis_roberthood",
      "uva_12311",
      "yosupo_furthest_pair",
      "uva_1111",
      "spoj_tfoss",
      "kattis_fenceortho",
      "kattis_largesttriangle",
      "poj_2079",
      "uva_12307",
      "uva_10173",
      "cf_gym_101635k",
      "poj_3608"
    ],
    "topic_id": "rotating_calipers",
    "is_data_complete": true,
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "Rotating calipers| Wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Rotating_calipers"
      },
      {
        "resource_comments": "very good resource, contains everything. Check chapters 1, 2 and 3.",
        "is_starred": true,
        "resource_url": "https://www.nlc-bnc.ca/obj/s4/f2/dsk1/tape7/PQDD_0027/MQ50856.pdf?oclc_number=1006918422",
        "resource_title": "COMPUTATIONAL GEOMETRY WITH THE ROTATING CALIPERS by Hormoz Pirzadeh"
      },
      {
        "resource_url": "https://web.cs.swarthmore.edu/~adanner/cs97/s08/pdf/calipers.pdf",
        "resource_title": "Solving Geometric Problems with the Rotating Calipers | Godfried Toussaint",
        "resource_comments": ""
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/110739",
        "resource_title": "Finding the Diameter of a Polygon using Two pointers and Monotone Chain  By chromate00",
        "resource_comments": ""
      }
    ],
    "created_at": {
      "seconds": 1714803684,
      "nanoseconds": 855000000
    }
  },
  "scc": {
    "resources": [
      {
        "resource_url": "https://cp-algorithms.com/graph/strongly-connected-components.html#toc-tgt-5",
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Finding strongly connected components / Building condensation graph | CP Algorithms"
      },
      {
        "is_video_type": true,
        "resource_comments": "",
        "resource_title": "Tarjan's Strongly Connected Component (SCC) Algorithm (UPDATED) | Graph Theory | WilliamFiset",
        "resource_url": "https://www.youtube.com/watch?v=wUgWX0nc4NY"
      },
      {
        "resource_url": "https://www.hackerearth.com/practice/algorithms/graphs/strongly-connected-components/tutorial/",
        "resource_title": "Strongly Connected Components | HackerEarth",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_url": "https://usaco.guide/adv/SCC?lang=cpp",
        "resource_title": "Strongly Connected Components | USACO Guide"
      },
      {
        "resource_title": "Strong connectivity and Kosaraju's Algorithm | CPH",
        "resource_url": "https://usaco.guide/CPH.pdf#page=167",
        "resource_comments": ""
      },
      {
        "resource_url": "https://www.shafaetsplanet.com/?p=2531",
        "resource_title": "[Bangla] গ্রাফ থিওরিতে হাতেখড়ি ১৪ – স্ট্রংলি কানেক্টেড কম্পোনেন্ট",
        "resource_comments": ""
      }
    ],
    "problem_order": [
      "yosupo_scc",
      "cses_1682",
      "cses_1683",
      "spoj_gooda",
      "spoj_lego",
      "codechef_chefrrun",
      "spoj_capcity",
      "codeforces_427c",
      "szkopul_akksmtjwttdoehdqnmq3_eaa",
      "cses_1686",
      "codeforces_505d",
      "spoj_tfriends",
      "codeforces_22e",
      "spoj_adapanel",
      "codeforces_894e",
      "codeforces_1239d",
      "codeforces_1423b",
      "cses_1685",
      "codeforces_1534f2"
    ],
    "topic_id": "scc",
    "created_at": {
      "seconds": 1714024433,
      "nanoseconds": 765000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/SCC.cpp"
    ],
    "is_data_complete": true,
    "completion_count": 45
  },
  "schreier_sims_algorithm": {
    "created_at": {
      "seconds": 1714848258,
      "nanoseconds": 249000000
    },
    "topic_id": "schreier_sims_algorithm",
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/111290?locale=en",
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Permutation group basis construction (Schreier–Sims algorithm)  By adamant"
      },
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Schraer-Sims algorithm for dummies | Zlobober",
        "resource_url": "https://codeforces.com/blog/entry/21335?locale=ru#comment-260437"
      },
      {
        "resource_comments": "",
        "resource_url": "http://opencup.ru/files/ocg/gp5/problems1-e.pdf",
        "resource_title": "Another Problem using this Algorithm, but not sure if you can access it"
      }
    ],
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Miscellaneous/Schreier%E2%80%93Sims%20algorithm.cpp"
    ]
  },
  "schwartz_zippel_lemma": {
    "is_data_complete": true,
    "template_codes": [],
    "created_at": {
      "seconds": 1714380006,
      "nanoseconds": 72000000
    },
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://en.wikipedia.org/wiki/Schwartz%E2%80%93Zippel_lemma",
        "resource_title": "Schwartz–Zippel lemma | Wiki"
      },
      {
        "resource_title": "Hashing and Probability of Collision | rng_58",
        "resource_url": "https://rng-58.blogspot.com/2017/02/hashing-and-probability-of-collision.html",
        "resource_comments": "check problem 1"
      }
    ],
    "topic_id": "schwartz_zippel_lemma"
  },
  "sdfsdf": {
    "template_codes": [],
    "topic_id": "sdfsdf",
    "resources": [],
    "created_at": {
      "seconds": 1712529019,
      "nanoseconds": 64000000
    }
  },
  "segment_tree": {
    "problem_order": [
      "cf_edu_273169a",
      "cf_edu_273169b",
      "cf_edu_273169c",
      "cf_edu_274545a",
      "cses_1144",
      "codeforces_61e",
      "kattis_megainversions",
      "spoj_kquery",
      "codeforces_459d",
      "cf_edu_274684c",
      "cf_edu_280801b",
      "codeforces_1234d",
      "cses_1734",
      "codeforces_339d",
      "codeforces_380c",
      "codeforces_19d",
      "codeforces_474f",
      "codeforces_482b",
      "codeforces_540e",
      "codeforces_597c",
      "codeforces_920f",
      "cses_1143",
      "cses_1748",
      "cses_1749",
      "codeforces_396c",
      "yaroslav and divisors",
      "cses_1190",
      "codeforces_594d",
      "codeforces_501d",
      "codeforces_115e"
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Segment%20Tree.cpp"
    ],
    "is_data_complete": true,
    "topic_id": "segment_tree",
    "created_at": {
      "seconds": 1712871178,
      "nanoseconds": 379000000
    },
    "resources": [
      {
        "resource_title": "Segment Tree Part 1 | CF EDU",
        "is_starred": true,
        "resource_url": "https://codeforces.com/edu/course/2/lesson/4",
        "resource_comments": "",
        "is_video_type": true
      },
      {
        "is_starred": true,
        "resource_url": "https://csacademy.com/lesson/segment_trees",
        "resource_comments": "check until lazy updates, it has nice interactive diagrams",
        "resource_title": "Segment Trees | CS Academy"
      },
      {
        "resource_url": "https://cp-algorithms.com/data_structures/segment_tree.html",
        "is_starred": true,
        "resource_title": "Simplest form of a Segment Tree and some variations | CP Algorithms",
        "resource_comments": "check until \"Range updates (Lazy Propagation)\""
      }
    ],
    "completion_count": 105
  },
  "segment_tree_beats": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Segment%20Tree%20Beats.cpp"
    ],
    "resources": [
      {
        "is_starred": true,
        "is_video_type": true,
        "resource_title": "Segment Tree Beats: Segment Tree On Steroids. Part 1 |  peltorator",
        "resource_url": "https://www.youtube.com/watch?v=NwkO73jGSPA",
        "resource_comments": "Manimations!"
      },
      {
        "resource_title": "A simple introduction to \"Segment tree beats\" | jiry_2",
        "resource_url": "https://codeforces.com/blog/entry/57319",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_title": "Segment tree beats | IOI preparation #6 | Errichto",
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/watch?v=wFqKgrW1IMQ",
        "is_video_type": true
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=_TGNYtkWAsQ",
        "resource_title": "AlgorithmsThread 4: Segment Tree Beats",
        "resource_comments": "",
        "is_video_type": true
      }
    ],
    "topic_id": "segment_tree_beats",
    "problem_order": [
      "codeforces_438d",
      "hdu_5306",
      "cf_group_327313b",
      "cf_group_327313d",
      "yosupo_range_chmin_chmax_add_range_sum",
      "csacademy_and_or_max",
      "codeforces_679e",
      "codeforces_453e",
      "codeforces_793f",
      "codeforces_855f",
      "hackerrank_box_operations",
      "codeforces_997e",
      "cf_group_327313e",
      "uoj_169",
      "codeforces_1572f"
    ],
    "completion_count": 8,
    "created_at": {
      "seconds": 1713140142,
      "nanoseconds": 533000000
    },
    "is_data_complete": true
  },
  "segment_tree_merging": {
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Segment%20Tree%20Merging.cpp"
    ],
    "created_at": {
      "seconds": 1713138198,
      "nanoseconds": 928000000
    },
    "problem_order": [
      "atcoder_abc237_g",
      "szkopul_sue3qzxbtasek_rawmzaxy_p",
      "spoj_cot3",
      "szkopul_b0bm0al2crqbt6zovetjfoc6",
      "loj_2537",
      "codeforces_1515h",
      "loj_2553",
      "loj_3340"
    ],
    "topic_id": "segment_tree_merging",
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://mzhang2021.github.io/cp-blog/segtree-merging/",
        "is_starred": true,
        "resource_title": "Segment Tree Merging | Yet Another Competitive Programming Blog"
      },
      {
        "resource_title": "using merging segment tree to solve problems about sorted list | TLE",
        "resource_url": "https://codeforces.com/blog/entry/49446",
        "resource_comments": ""
      }
    ],
    "completion_count": 7
  },
  "segment_tree_with_lazy_propagation": {
    "problem_order": [
      "cf_edu_279653d",
      "cf_edu_279653a",
      "codeforces_52c",
      "cf_edu_279653b",
      "cf_edu_279653f",
      "cses_2166",
      "cf_edu_280801a",
      "yosupo_range_affine_range_sum",
      "cf_edu_279653c",
      "cf_edu_280799b",
      "cf_edu_280799c",
      "cf_edu_280799a",
      "codeforces_580e",
      "codeforces_558e",
      "codeforces_242e",
      "cses_1736",
      "codeforces_145e",
      "codeforces_1555e",
      "codeforces_438d",
      "codeforces_446c",
      "codeforces_1114f",
      "codeforces_115e",
      "cf_gym_100739a",
      "codeforces_1132g"
    ],
    "topic_id": "segment_tree_with_lazy_propagation",
    "completion_count": 79,
    "resources": [
      {
        "is_starred": true,
        "is_video_type": true,
        "resource_title": "Segment Tree Part 2 | CF EDU",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/edu/course/2/lesson/5"
      },
      {
        "resource_title": "Range updates (Lazy Propagation) | CP Algorithms",
        "resource_comments": "check until \"Generalization to higher dimensions\"",
        "is_starred": true,
        "resource_url": "https://cp-algorithms.com/data_structures/segment_tree.html#range-updates-lazy-propagation"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Segment%20Tree%20Lazy.cpp"
    ],
    "created_at": {
      "seconds": 1712526750,
      "nanoseconds": 708000000
    },
    "is_data_complete": true
  },
  "segmented_sieve": {
    "template_codes": [
      "https://cp-algorithms.com/algebra/sieve-of-eratosthenes.html#segmented-sieve"
    ],
    "problem_order": [
      "spoj_prime1",
      "hackerrank_euler134"
    ],
    "topic_id": "segmented_sieve",
    "completion_count": 24,
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714192605,
      "nanoseconds": 81000000
    },
    "resources": [
      {
        "is_starred": true,
        "resource_title": "Segmented Sieve | CP Algorithms",
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/algebra/sieve-of-eratosthenes.html#segmented-sieve"
      },
      {
        "resource_comments": "",
        "resource_title": "Segmented Sieve (Print Primes in a Range) | Geeks For Geeks",
        "resource_url": "https://www.geeksforgeeks.org/segmented-sieve-print-primes-in-a-range/"
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=uCgCMW9CMn4",
        "resource_title": "L22 : What is Segmented Sieve and why you should learn it? | Number Theory | CodeNCode",
        "resource_comments": ""
      },
      {
        "resource_title": "Segmented sieve of Eratosthenes | kimwalisch",
        "resource_url": "https://github.com/kimwalisch/primesieve/wiki/Segmented-sieve-of-Eratosthenes",
        "resource_comments": ""
      }
    ]
  },
  "selection_sort": {
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://www.programiz.com/dsa/selection-sort",
        "resource_title": "Selection Sort Algorithm | Programiz"
      },
      {
        "is_starred": true,
        "resource_title": "Selection Sort Animation | Ravindu Sachintha",
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/watch?v=XeP1K3UZ35M",
        "is_video_type": true
      },
      {
        "is_starred": true,
        "resource_title": "Sorting Algorithm Visualizer | VisuAlgo",
        "resource_url": "https://visualgo.net/en/sorting",
        "resource_comments": "select Selection Sort"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Basics/Selection%20Sort.cpp"
    ],
    "completion_count": 164,
    "topic_id": "selection_sort",
    "created_at": {
      "seconds": 1715159038,
      "nanoseconds": 17000000
    },
    "is_data_complete": true
  },
  "set": {
    "is_data_complete": true,
    "completion_count": 209,
    "template_codes": [],
    "resources": [
      {
        "resource_url": "https://www.youtube.com/watch?v=682xT_TcKUg&list=PLzMcBGfZo4-lmGC8VW0iu6qfMHjy7gLQ3&index=19",
        "resource_title": "Sets  | Tech With Tim",
        "is_starred": true,
        "is_video_type": true,
        "resource_comments": ""
      },
      {
        "resource_title": "C++ Set | Programiz",
        "resource_comments": "",
        "resource_url": "https://www.programiz.com/cpp-programming/set"
      },
      {
        "resource_comments": "",
        "is_video_type": true,
        "resource_url": "https://www.youtube.com/watch?v=2OEnAdl1eLc&list=PL1w8k37X_6L9NXrP1D31hDTKcdAPIL0cG&index=12",
        "resource_title": "Set | C++ STL (Standard Template Library) | std::set 🔥  Knowledge Center"
      },
      {
        "resource_comments": "",
        "resource_url": "https://takeuforward.org/c/set-in-c-stl/",
        "resource_title": "Set in C++ | TUF",
        "is_starred": false
      },
      {
        "resource_title": "Set in C++ Standard Template Library (STL) | Geeks for Geeks",
        "resource_url": "https://www.geeksforgeeks.org/set-in-cpp-stl/",
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Unordered Set | C++ STL (Standard Template Library) | std::unordered_set 🔥  Knowledge Center",
        "resource_url": "https://www.youtube.com/watch?v=g5RGA50LGCA&list=PL1w8k37X_6L9NXrP1D31hDTKcdAPIL0cG&index=14",
        "is_video_type": true
      },
      {
        "resource_comments": "",
        "resource_url": "https://www.programiz.com/cpp-programming/unordered-set",
        "resource_title": "C++ Unordered Set | Programiz"
      },
      {
        "resource_url": "https://takeuforward.org/c/unordered-set-in-c-stl/",
        "resource_comments": "",
        "resource_title": "Unordered-set in C++ STL | TUF",
        "is_starred": false
      },
      {
        "resource_title": "Unordered Sets in C++ Standard Template Library | Geeks for Geeks",
        "resource_url": "https://www.geeksforgeeks.org/unordered_set-in-cpp-stl/",
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_title": "Multi Set | C++ STL (Standard Template Library) | std::multiset 🔥  Knowledge Center",
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/watch?v=iJCnqHrkPq8&list=PL1w8k37X_6L9NXrP1D31hDTKcdAPIL0cG&index=13",
        "is_video_type": true
      },
      {
        "resource_comments": "",
        "resource_title": "C++ Multiset | Programiz",
        "resource_url": "https://www.programiz.com/cpp-programming/multiset"
      },
      {
        "resource_url": "https://www.geeksforgeeks.org/multiset-in-cpp-stl/",
        "resource_comments": "",
        "resource_title": "Multiset in C++ Standard Template Library (STL) | Geeks for Geeks"
      },
      {
        "resource_comments": "check set, multiset and unordered set sections",
        "resource_title": "Complete C++ STL in 1 Video | Time Complexity and Notes |  take U forward",
        "resource_url": "https://www.youtube.com/watch?v=RRVYpIET_RU",
        "is_video_type": true
      }
    ],
    "problem_order": [
      "hackerrank_cpp_sets",
      "cses_1621",
      "yosupo_double_ended_priority_queue",
      "cses_1091",
      "cses_2216",
      "cses_1073",
      "cses_2168"
    ],
    "topic_id": "set",
    "created_at": {
      "seconds": 1715112584,
      "nanoseconds": 534000000
    }
  },
  "sieve": {
    "resources": [
      {
        "is_starred": true,
        "resource_comments": "check until \"Euclid’s algorithm\"",
        "resource_title": "21.1 Primes and factors | CPH",
        "resource_url": "https://usaco.guide/CPH.pdf#page=207"
      },
      {
        "resource_comments": "check until \"Segmented Sieve\"",
        "resource_url": "https://cp-algorithms.com/algebra/sieve-of-eratosthenes.html",
        "is_starred": true,
        "resource_title": "Sieve of Eratosthenes | CP Algorithms"
      },
      {
        "is_video_type": true,
        "resource_title": "L02 : Sieve of Eretosthenes | Number Theory | CodeNCode",
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/watch?v=7zYMjXqdchc"
      },
      {
        "resource_url": "https://toph.co/tutorials/sieve-of-eratosthenes",
        "resource_title": "Sieve of Eratosthenes | TarifEzaz",
        "resource_comments": ""
      },
      {
        "resource_url": "https://davidaltizio.web.illinois.edu/Divisors%20and%20Divisibility%20Overview.pdf",
        "resource_comments": "",
        "resource_title": "Introduction to Number Theory | David Altizio"
      },
      {
        "resource_comments": "",
        "resource_title": "Basic Number Theory-2 | HackerEarth",
        "resource_url": "https://www.hackerearth.com/practice/math/number-theory/basic-number-theory-2/tutorial/"
      },
      {
        "is_starred": true,
        "resource_title": "Extensions of the Prime Sieve  By Hikari9",
        "resource_comments": "ignore \"Euler Totient Sieve\"",
        "resource_url": "https://codeforces.com/blog/entry/22229"
      },
      {
        "resource_title": "Divisibility | USACO Guide",
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://usaco.guide/gold/divisibility?lang=cpp"
      },
      {
        "resource_url": "https://www.geeksforgeeks.org/least-prime-factor-of-numbers-till-n/",
        "resource_comments": "",
        "resource_title": "Least prime factor of numbers till n | Geeks for Geeks"
      },
      {
        "resource_url": "https://www.geeksforgeeks.org/prime-factorization-using-sieve-olog-n-multiple-queries/",
        "resource_title": "Prime Factorization using Sieve O(log n) for multiple queries | Geeks for Geeks",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_url": "https://www.geeksforgeeks.org/bitwise-sieve/",
        "resource_comments": "",
        "resource_title": "Bitwise Sieve | Geeks for Geeks"
      },
      {
        "resource_title": "বিটওয়াইজ্ সিভ(Bitwise sieve) | শাফায়েতের ব্লগ",
        "resource_url": "https://www.shafaetsplanet.com/?p=855",
        "resource_comments": ""
      }
    ],
    "created_at": {
      "seconds": 1714188176,
      "nanoseconds": 839000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Sieve.cpp"
    ],
    "is_data_complete": true,
    "topic_id": "sieve",
    "problem_order": [
      "leetcode_count_primes",
      "codeforces_26a",
      "toph_n_th_prime",
      "spoj_tdprimes",
      "spoj_vectar8",
      "spoj_hs08paul",
      "spoj_ptri2",
      "spoj_factcg2",
      "spoj_fact0",
      "cses_1713",
      "spoj_divsum",
      "cses_1081",
      "codeforces_776b",
      "atcoder_abc169_d",
      "leetcode_four_divisors",
      "spoj_divsum2",
      "codeforces_230b",
      "spoj_nfactor",
      "spoj_ngirl",
      "spoj_dcepc505",
      "spoj_bsprime",
      "uva_2338",
      "codeforces_17a",
      "codeforces_154b",
      "codeforces_546d",
      "codeforces_222c",
      "codeforces_1649d",
      "codeforces_1561d2",
      "codeforces_1225d",
      "codeforces_1349a",
      "codeforces_1154g",
      "codeforces_803f",
      "codeforces_1499d",
      "atcoder_abc191_f",
      "codeforces_1493d",
      "codechef_chefsums"
    ],
    "completion_count": 72
  },
  "sieve_upto_1e9": {
    "topic_id": "sieve_upto_1e9",
    "completion_count": 10,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Sieve%20upto%201e9.cpp"
    ],
    "resources": [],
    "created_at": {
      "seconds": 1714202213,
      "nanoseconds": 824000000
    },
    "is_data_complete": true
  },
  "sigma_function": {
    "problem_order": [
      "cses_1713",
      "spoj_comdiv",
      "spoj_divsum",
      "spoj_divsum2",
      "cses_1081",
      "cses_2182",
      "cf_gym_103373b",
      "cses_1082",
      "cf_group_338701j"
    ],
    "template_codes": [],
    "topic_id": "sigma_function",
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714194432,
      "nanoseconds": 918000000
    },
    "completion_count": 38,
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://cp-algorithms.com/algebra/divisors.html",
        "resource_comments": "",
        "resource_title": "Number of divisors / sum of divisors | CP Algorithms"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/21478",
        "resource_title": "Sum Of Number Of Divisors Of Divisors Of A Number  By kalimm",
        "resource_comments": ""
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/22317",
        "resource_comments": "Prerequisite: Miller Rabin Primality Testing, so check back after learning Miller Rabin, skip it for now",
        "is_starred": true,
        "resource_title": "Counting Divisors of a Number in O(n^(1/3)) [tutorial]  By himanshujaju "
      }
    ]
  },
  "simplex_algorithm": {
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "Simplex algorithm | Wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Simplex_algorithm"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/101470",
        "resource_title": "Alternative Solution to 1421 D. Hexagons using Linear Programming & Total Unimodularity  By eyfmharb",
        "resource_comments": ""
      }
    ],
    "problem_order": [
      "codeforces_605c",
      "spoj_seq1",
      "codeforces_375e"
    ],
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Simplex%20Algorithm.cpp"
    ],
    "completion_count": 1,
    "created_at": {
      "seconds": 1714508945,
      "nanoseconds": 777000000
    },
    "topic_id": "simplex_algorithm"
  },
  "sliding_window_technique": {
    "template_codes": [],
    "resources": [
      {
        "resource_title": "Mastering Sliding Window Techniques | Ankit Singh ",
        "resource_url": "https://medium.com/@rishu__2701/mastering-sliding-window-techniques-48f819194fd7",
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "resource_url": "https://usaco.guide/gold/sliding-window?lang=cpp",
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Sliding Window | USACO Guide"
      }
    ],
    "is_data_complete": true,
    "completion_count": 90,
    "topic_id": "sliding_window_technique",
    "created_at": {
      "seconds": 1715079142,
      "nanoseconds": 211000000
    }
  },
  "slope_trick": {
    "topic_id": "slope_trick",
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/77298",
        "resource_title": "Slope trick explained  By Kuroni",
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "is_video_type": true,
        "is_starred": true,
        "resource_url": "https://www.youtube.com/watch?v=p8RxN6Y9OOA",
        "resource_comments": "",
        "resource_title": "Slope Trick Visualised | benritmicocode"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/47821",
        "is_starred": true,
        "resource_title": "[Tutorial] Slope Trick  By zscoder",
        "resource_comments": ""
      },
      {
        "resource_url": "https://usaco.guide/adv/slope-trick?lang=cpp",
        "resource_title": "Slope Trick | USACO Guide",
        "resource_comments": "has great example explanations",
        "is_starred": true
      },
      {
        "is_starred": true,
        "resource_title": "[Tutorial] Intuition on Slope Trick  By maomao9",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/103222"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/91725",
        "resource_title": "\"Worse-to-best option\", a different way to think about Slope Trick  By gmyu.michael",
        "resource_comments": ""
      }
    ],
    "problem_order": [
      "codeforces_713c",
      "cses_2132",
      "codeforces_865d",
      "apio16_fireworks",
      "atcoder_arc070_c",
      "noi18_safety",
      "lmio19_bulves",
      "cf_gym_101806t",
      "cf_gym_102391j",
      "atcoder_jag2017autumn_j",
      "atcoder_kupc2016_h",
      "cf_gym_102331h",
      "codeforces_1209h",
      "codeforces_1229f",
      "kattis_conquertheworld"
    ],
    "is_data_complete": true,
    "completion_count": 7,
    "created_at": {
      "seconds": 1714726020,
      "nanoseconds": 758000000
    },
    "template_codes": []
  },
  "smallest_nonnegative_integer_x_s_t_l_ax_mod_p_r": {
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/73629",
        "resource_comments": "",
        "resource_title": "Recovering rational number from its remainder modulo huge integer  By adamant"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/72537",
        "resource_title": "This is most useful CP problem I create until now  By dreamoon_love_AA",
        "resource_comments": "",
        "is_starred": true
      }
    ],
    "created_at": {
      "seconds": 1714313606,
      "nanoseconds": 895000000
    },
    "topic_id": "smallest_nonnegative_integer_x_s_t_l_ax_mod_p_r",
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Smallest%20Nonnegative%20Integer%20x%20s.t.%20l%20%3C=%20ax%20%25%20p%20%3C=%20r.cpp"
    ]
  },
  "smallest_number_having_exactly_k_divisors": {
    "topic_id": "smallest_number_having_exactly_k_divisors",
    "completion_count": 4,
    "created_at": {
      "seconds": 1714205306,
      "nanoseconds": 271000000
    },
    "resources": [],
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Smallest%20Number%20Having%20Exactly%20K%20Divisors.cpp"
    ]
  },
  "sos_dp": {
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714723035,
      "nanoseconds": 503000000
    },
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://cp-algorithms.com/algebra/all-submasks.html",
        "resource_title": "Submask Enumeration | CP Algorithms"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/45223",
        "is_starred": true,
        "resource_title": "SOS Dynamic Programming [Tutorial]  By usaxena95",
        "resource_comments": ""
      },
      {
        "resource_title": "Some SOS DP Insights  By maxwellzen",
        "resource_url": "https://codeforces.com/blog/entry/105247",
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "resource_title": "SOS <> N Dimensional Prefix Sum | Errichto",
        "is_starred": true,
        "resource_comments": "starts at 5:11, Solution to Cake Testing ",
        "resource_url": "https://www.youtube.com/watch?v=Lpvsd8WpbWc&t=311s"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/45223?#comment-573034",
        "resource_comments": "",
        "resource_title": "SOS <> N Dimensional Prefix Sum | Rezwan"
      },
      {
        "resource_url": "https://usaco.guide/adv/dp-sos?lang=cpp",
        "resource_title": "Sum over Subsets DP | USACO Guide",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "is_video_type": true,
        "resource_title": "The Big idea behind SOS DP ft. Editorial of 1995D : Cases Codeforces",
        "resource_url": "https://www.youtube.com/watch?v=LgxHoy3Aguk&t=1782s"
      }
    ],
    "topic_id": "sos_dp",
    "problem_order": [
      "cses_1654",
      "codeforces_165e",
      "codeforces_383e",
      "codechef_covering",
      "codeforces_449d",
      "cf_group_203881k",
      "atcoder_abc187_f",
      "codeforces_599e",
      "hackerrank_vim_war",
      "codechef_beauty",
      "codechef_str_func",
      "codechef_maxor",
      "codechef_monster",
      "codechef_amr14f",
      "cf_gym_102128b",
      "csacademy_good_permurations",
      "cf_gym_101666g",
      "codechef_andpref",
      "codeforces_800d",
      "codechef_danyanum",
      "atcoder_arc100_c"
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Dynamic%20Programming%20Optimizations/SOS%20DP.cpp"
    ],
    "completion_count": 12
  },
  "sparse_table": {
    "topic_id": "sparse_table",
    "resources": [
      {
        "resource_title": "Sparse Table | CP Algorithms",
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://cp-algorithms.com/data_structures/sparse-table.html"
      },
      {
        "resource_title": "Sparse Table Data Structure | WilliamFiset",
        "is_video_type": true,
        "resource_url": "https://www.youtube.com/watch?v=uUatD9AudXo",
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=0jWeUdxrGm4",
        "is_video_type": true,
        "resource_title": "Sparse Table & RMQ (Range Minimum Query) | Errichto",
        "resource_comments": ""
      },
      {
        "resource_title": "Sparse Table | Aditya Biswakarma",
        "resource_comments": "",
        "resource_url": "https://medium.com/nybles/sparse-table-f3981fbb1bc8"
      },
      {
        "resource_comments": "",
        "resource_url": "https://www.hackerearth.com/practice/notes/sparse-table/",
        "resource_title": "Sparse table | Mike Koltsov"
      }
    ],
    "completion_count": 56,
    "created_at": {
      "seconds": 1713291636,
      "nanoseconds": 235000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Sparse%20Table.cpp"
    ],
    "is_data_complete": true
  },
  "sparse_table_2d": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Sparse%20Table%202D.cpp"
    ],
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/45485",
        "resource_comments": "",
        "resource_title": "2D Range Minimum Query in O(1) | fnf47",
        "is_starred": true
      },
      {
        "resource_url": "https://www.geeksforgeeks.org/2d-range-minimum-query-in-o1/",
        "resource_title": "2D Range Minimum Query in O(1) | Geeks for Geeks",
        "resource_comments": ""
      }
    ],
    "completion_count": 11,
    "topic_id": "sparse_table_2d",
    "is_data_complete": true,
    "created_at": {
      "seconds": 1713297396,
      "nanoseconds": 247000000
    },
    "problem_order": [
      "codeforces_713d",
      "codechef_cens20b",
      "codechef_chsqarr",
      "codeforces_15d"
    ]
  },
  "spfa": {
    "problem_order": [
      "cf_gym_101498l",
      "uva_10099",
      "uva_11671"
    ],
    "created_at": {
      "seconds": 1714045212,
      "nanoseconds": 42000000
    },
    "topic_id": "spfa",
    "is_data_complete": true,
    "completion_count": 8,
    "resources": [
      {
        "resource_url": "https://cp-algorithms.com/graph/bellman_ford.html#shortest-path-faster-algorithm-spfa",
        "resource_title": "Shortest Path Faster Algorithm (SPFA) | CP Algorithms",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "is_starred": true,
        "resource_url": "https://konaeakira.github.io/posts/using-the-shortest-path-faster-algorithm-to-find-negative-cycles.html",
        "resource_title": "Using the Shortest Path Faster Algorithm to find a negative cycle | KonaeAkira's blog",
        "resource_comments": ""
      },
      {
        "resource_url": "https://www.geeksforgeeks.org/shortest-path-faster-algorithm/",
        "resource_title": "Shortest Path Faster Algorithm | Geeks For Geeks",
        "resource_comments": ""
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/SPFA.cpp"
    ]
  },
  "spheres_3d": {
    "created_at": {
      "seconds": 1714761683,
      "nanoseconds": 277000000
    },
    "resources": [
      {
        "resource_url": "https://victorlecomte.com/cp-geo.pdf",
        "is_starred": true,
        "resource_title": "3.6 Spherical geometry | CP Geo",
        "resource_comments": ""
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%203D.cpp#L548-L746",
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%203D.cpp#L768-L776"
    ],
    "topic_id": "spheres_3d",
    "problem_order": [
      "lightoj_der_stern",
      "uva_13281"
    ],
    "is_data_complete": true
  },
  "splay_tree": {
    "completion_count": 2,
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/108457",
        "resource_title": "[Tutorial] Splay Tree: One Tree to Rule Them All | by Zhtluo",
        "resource_comments": ""
      },
      {
        "is_video_type": true,
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/watch?v=q4fnJZr8ztY",
        "is_starred": true,
        "resource_title": "Balanced binary search tree rotations  WilliamFiset"
      },
      {
        "resource_title": "Splay Tree Notes | Michel X. Goemans MIT",
        "resource_comments": "",
        "resource_url": "https://ocw.mit.edu/courses/6-854j-advanced-algorithms-fall-2008/921232cb9a69015c50002ff5ea6a9824_lec6.pdf"
      },
      {
        "resource_comments": "",
        "resource_title": "Splay Tree Presentation | Stanford",
        "resource_url": "https://web.stanford.edu/class/archive/cs/cs166/cs166.1146/lectures/08/Slides08.pdf"
      }
    ],
    "template_codes": [
      "https://github.com/Bibeknam/algorithmtutorprograms/blob/master/data-structures/splay-trees/SplayTree.cpp"
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1713817901,
      "nanoseconds": 771000000
    },
    "problem_order": [
      "cf_gym_103997a",
      "spoj_adalist",
      "hdu_3487"
    ],
    "topic_id": "splay_tree"
  },
  "splitting_objects_into_light_and_heavy": {
    "template_codes": [],
    "topic_id": "splitting_objects_into_light_and_heavy",
    "is_data_complete": true,
    "created_at": {
      "seconds": 1713378025,
      "nanoseconds": 990000000
    },
    "completion_count": 26,
    "problem_order": [
      "codeforces_220b",
      "codechef_kol15c",
      "codeforces_677d",
      "codeforces_348c",
      "codeforces_13e",
      "codeforces_1619h",
      "codeforces_1580c",
      "atcoder_abc219_g",
      "codeforces_506d",
      "codeforces_398d"
    ],
    "resources": [
      {
        "resource_title": "Combining Algorithms | USACO Guide",
        "resource_comments": "check until \"Batching\"",
        "resource_url": "https://usaco.guide/plat/sqrt?lang=cpp#combining-algorithms",
        "is_starred": true
      },
      {
        "resource_url": "https://usaco.guide/CPH.pdf#page=262",
        "resource_title": "27.1 - Case Processing | Competitive Programming Handbook",
        "resource_comments": "check until \"Batch Processing\""
      },
      {
        "resource_comments": "check from 9:35 to 13:18",
        "is_video_type": true,
        "is_starred": true,
        "resource_title": "Light and heavy | Errichto",
        "resource_url": "https://www.youtube.com/watch?v=BJhzd_VG61k"
      },
      {
        "resource_comments": "check from 31:28 to 34:48",
        "is_starred": true,
        "resource_url": "https://www.youtube.com/watch?v=BJhzd_VG61k",
        "resource_title": "sqrt(S) distinct values | Errichto"
      },
      {
        "is_video_type": true,
        "resource_title": "Square root decomposition topic summary | Competitive Programming | Vivek Gupta | Advanced",
        "resource_comments": "check from 13:16 to 23:08",
        "resource_url": "https://www.youtube.com/watch?v=Uqyn-3w7yIU"
      }
    ]
  },
  "sqrt_decomposition": {
    "topic_id": "sqrt_decomposition",
    "problem_order": [
      "lightoj_curious_robin_hood",
      "cses_1651",
      "cf_edu_280801a",
      "spoj_dquery",
      "spoj_giveaway",
      "codechef_hilljump",
      "cf_gym_101864d",
      "uva_3141",
      "uva_3154",
      "codechef_chefexq",
      "codechef_fncs",
      "codeforces_896e"
    ],
    "created_at": {
      "seconds": 1713376600,
      "nanoseconds": 166000000
    },
    "resources": [
      {
        "resource_title": "Sqrt Decomposition | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/data_structures/sqrt_decomposition.html",
        "resource_comments": "check until \"MO's Algorithm\"",
        "is_starred": true
      },
      {
        "is_starred": true,
        "resource_comments": "check until \"Combining Algorithms\"",
        "resource_url": "https://usaco.guide/plat/sqrt?lang=cpp",
        "resource_title": "Square Root Decomposition | USACO Guide"
      },
      {
        "resource_title": "27 - Square Root Algorithms | Competitive Programming Handbook",
        "resource_url": "https://usaco.guide/CPH.pdf#page=261",
        "resource_comments": "check until \"Combining Algorithms\""
      },
      {
        "is_starred": true,
        "resource_title": "Sqrt Decomposition | Errichto",
        "resource_comments": "check until 9:35",
        "is_video_type": true,
        "resource_url": "https://www.youtube.com/watch?v=BJhzd_VG61k"
      },
      {
        "resource_comments": "",
        "resource_title": "What is Square Root Decomposition? - Range Query Solving | Gaurav Sen",
        "resource_url": "https://www.youtube.com/watch?v=gWbDocYhwDA",
        "is_video_type": true
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=Uqyn-3w7yIU",
        "is_video_type": true,
        "resource_title": "Square root decomposition topic summary | Competitive Programming | Vivek Gupta | Advanced",
        "resource_comments": "check until 7:25"
      },
      {
        "resource_title": "An alternative sorting order for Mo's algorithm (Hilbert Order) | gepardo",
        "resource_comments": "slightly advanced, not that important to learn",
        "resource_url": "https://codeforces.com/blog/entry/61203"
      }
    ],
    "is_data_complete": true,
    "completion_count": 43,
    "template_codes": []
  },
  "sqrt_decomposition_split_and_build_technique": {
    "topic_id": "sqrt_decomposition_split_and_build_technique",
    "created_at": {
      "seconds": 1713379716,
      "nanoseconds": 129000000
    },
    "is_data_complete": true,
    "completion_count": 5,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Square%20Root%20Decomposition%20With%20Reverse%20Update.cpp"
    ],
    "resources": [
      {
        "resource_comments": "check from 32:49",
        "resource_url": "https://www.youtube.com/watch?v=Uqyn-3w7yIU",
        "resource_title": "Square root decomposition topic summary | Competitive Programming | Vivek Gupta | Advanced",
        "is_video_type": true
      }
    ]
  },
  "sqrt_fragmented_tree": {
    "completion_count": 3,
    "is_data_complete": true,
    "created_at": {
      "seconds": 1713828270,
      "nanoseconds": 403000000
    },
    "topic_id": "sqrt_fragmented_tree",
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/46843",
        "resource_comments": "",
        "resource_title": "Unknown Data Structure — (Sqrt Fragmented Tree)  By cjtoribio"
      }
    ],
    "template_codes": [
      "https://codeforces.com/gym/100589/submission/20273231"
    ]
  },
  "sqrt_s_distinct_elements_trick": {
    "created_at": {
      "seconds": 1713379122,
      "nanoseconds": 843000000
    },
    "template_codes": [],
    "topic_id": "sqrt_s_distinct_elements_trick",
    "resources": [
      {
        "resource_title": "sqrt(S) distinct values | Errichto",
        "resource_url": "https://www.youtube.com/watch?v=BJhzd_VG61k",
        "resource_comments": "check from 31:28 to 34:48",
        "is_video_type": true
      }
    ]
  },
  "sqrt_tree": {
    "topic_id": "sqrt_tree",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/SQRT%20Tree.cpp"
    ],
    "resources": [
      {
        "resource_title": "Sqrt Tree | CP Algorithms",
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/data_structures/sqrt-tree.html",
        "is_starred": true
      },
      {
        "resource_title": "Sqrt-tree: answering queries in O(1) with O(NloglogN) preprocessing By gepardo",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/57046"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/59092",
        "resource_comments": "",
        "resource_title": "Sqrt-tree (part 2): modifications in O(sqrtN), lazy propagation | By gepardo"
      }
    ],
    "completion_count": 1,
    "is_data_complete": true,
    "created_at": {
      "seconds": 1713827313,
      "nanoseconds": 718000000
    },
    "problem_order": [
      "codechef_segprod",
      "cf_group_102954a",
      "cses_1649"
    ]
  },
  "st_numbering": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/ST%20Numbering.cpp"
    ],
    "is_data_complete": true,
    "topic_id": "st_numbering",
    "problem_order": [
      "yosupo_st_numbering",
      "codeforces_1916f",
      "cses_241c"
    ],
    "resources": [
      {
        "resource_url": "https://en.wikipedia.org/wiki/Bipolar_orientation",
        "resource_comments": "",
        "resource_title": "Bipolar orientation | Wiki"
      }
    ],
    "created_at": {
      "seconds": 1714030862,
      "nanoseconds": 811000000
    }
  },
  "stable_marriage_problem": {
    "is_data_complete": true,
    "completion_count": 1,
    "topic_id": "stable_marriage_problem",
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "Stable marriage problem | Wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Stable_marriage_problem"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Stable%20Marriage%20Problem.cpp"
    ],
    "created_at": {
      "seconds": 1714135041,
      "nanoseconds": 696000000
    }
  },
  "stack": {
    "is_data_complete": true,
    "problem_order": [
      "hackerrank_si_implement_stack",
      "leetcode_valid_parentheses",
      "hackerrank_ctci_balanced_brackets",
      "cses_1645",
      "codeforces_5c"
    ],
    "resources": [
      {
        "resource_title": "C++ Stack | Programiz",
        "resource_comments": "",
        "resource_url": "https://www.programiz.com/cpp-programming/stack",
        "is_starred": true
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=WK97Pj0wa7A&list=PL1w8k37X_6L9NXrP1D31hDTKcdAPIL0cG&index=9",
        "resource_comments": "",
        "resource_title": "Stack | C++ STL (Standard Template Library) | std::stack  Knowledge Center",
        "is_video_type": true
      },
      {
        "resource_comments": "check the stack section",
        "resource_url": "https://www.youtube.com/watch?v=RRVYpIET_RU",
        "is_video_type": true,
        "resource_title": "Complete C++ STL in 1 Video | Time Complexity and Notes |  take U forward"
      },
      {
        "resource_comments": "",
        "resource_title": "Stack in C++ STL | Geeks for Geeks",
        "resource_url": "https://www.geeksforgeeks.org/stack-in-cpp-stl/"
      }
    ],
    "template_codes": [],
    "topic_id": "stack",
    "created_at": {
      "seconds": 1715113197,
      "nanoseconds": 997000000
    },
    "completion_count": 234
  },
  "star_2d": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L1272-L1288"
    ],
    "topic_id": "star_2d",
    "resources": [],
    "created_at": {
      "seconds": 1714763000,
      "nanoseconds": 608000000
    }
  },
  "stars_and_bars": {
    "resources": [
      {
        "is_starred": true,
        "resource_title": "Stars and bars | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/combinatorics/stars_and_bars.html",
        "resource_comments": ""
      }
    ],
    "topic_id": "stars_and_bars",
    "problem_order": [
      "lightoj_problem_makes_problem",
      "codeforces_57c",
      "codeforces_553a",
      "spoj_ucv2013e",
      "codeforces_1288c",
      "spoj_marbles",
      "codeforces_1931g",
      "atcoder_abc156_e",
      "atcoder_abc110_d"
    ],
    "template_codes": [],
    "completion_count": 61,
    "is_data_complete": true,
    "created_at": {
      "seconds": 1715170251,
      "nanoseconds": 428000000
    }
  },
  "static_to_dynamic_trick": {
    "topic_id": "static_to_dynamic_trick",
    "completion_count": 4,
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Static%20to%20Dynamic%20Trick.cpp"
    ],
    "created_at": {
      "seconds": 1713834609,
      "nanoseconds": 399000000
    },
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "“Log Decomposition”, a technique to insert random elements into sorted data structures  By ismail-but-noob",
        "resource_url": "https://codeforces.com/blog/entry/124766"
      },
      {
        "resource_comments": "check the following template in this site to understand this concept better",
        "resource_url": "https://codeforces.com/blog/entry/48417",
        "resource_title": "Idea 4 of General ideas  By adamant",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/67263",
        "resource_title": "Blogewoosh #7"
      }
    ]
  },
  "steiner_tree_problem": {
    "problem_order": [
      "codeforces_152e",
      "spoj_ticket"
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Steiner%20Tree%20Problem.cpp"
    ],
    "is_data_complete": true,
    "completion_count": 3,
    "topic_id": "steiner_tree_problem",
    "created_at": {
      "seconds": 1714035680,
      "nanoseconds": 277000000
    },
    "resources": [
      {
        "resource_title": "Episode 7 - Steiner Trees | Algorithms Live!",
        "is_video_type": true,
        "is_starred": true,
        "resource_url": "https://www.youtube.com/watch?v=BG4vAoV5kWw",
        "resource_comments": ""
      },
      {
        "resource_title": "Dreyfus-Wagner DP algorithm | By Arkham_Knight",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/91601"
      },
      {
        "resource_title": "Exact Algorithms for Steiner Tree | Ondra Such´y",
        "resource_url": "https://www.imsc.res.in/~vraman/exact/suchy.pdf",
        "resource_comments": ""
      }
    ]
  },
  "stirling_number_of_the_first_kind_for_fixed_k": {
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714304084,
      "nanoseconds": 319000000
    },
    "topic_id": "stirling_number_of_the_first_kind_for_fixed_k",
    "completion_count": 1,
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/77468#:~:text=several%20disjoint%20cycles.-,Problem.%20Count%20the%20number%20of%20permutations%20of%20length,cycles.,-These%20numbers%20are",
        "resource_title": "[Tutorial] Generating Functions in Competitive Programming (Part 1)  By zscoder",
        "resource_comments": "check \"Problem. Count the number of permutations of length 𝑛  with 𝑘  cycles.\"",
        "is_starred": true
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/117906",
        "resource_title": "Stirling numbers with fixed n and k  By adamant",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_title": "Expansions for fixed k | Wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Stirling_numbers_of_the_first_kind#Expansions_for_fixed_k"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Stirling%20Number%20of%20the%20First%20Kind%20for%20Fixed%20k.cpp"
    ]
  },
  "stirling_number_of_the_first_kind_for_fixed_n": {
    "topic_id": "stirling_number_of_the_first_kind_for_fixed_n",
    "created_at": {
      "seconds": 1714303615,
      "nanoseconds": 204000000
    },
    "completion_count": 2,
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Stirling%20Number%20of%20the%20First%20Kind%20for%20Fixed%20n.cpp"
    ],
    "resources": [
      {
        "resource_url": "https://en.wikipedia.org/wiki/Stirling_numbers_of_the_first_kind#Definitions",
        "resource_comments": "Check the \"Definition\" section, it contains the formula, we will just have to optimize it using NTT",
        "resource_title": "Stirling numbers of the first kind | Wiki",
        "is_starred": true
      },
      {
        "resource_title": "Stirling numbers with fixed n and k  By adamant",
        "resource_url": "https://codeforces.com/blog/entry/117906",
        "resource_comments": ""
      }
    ]
  },
  "stirling_number_of_the_second_kind_for_fixed_k": {
    "topic_id": "stirling_number_of_the_second_kind_for_fixed_k",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Stirling%20Number%20of%20the%20Second%20Kind%20for%20Fixed%20k.cpp"
    ],
    "is_data_complete": true,
    "resources": [
      {
        "resource_title": "Stirling Number of the Second Kind | Wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Stirling_numbers_of_the_second_kind#Generating_functions",
        "resource_comments": "Check the Generating Functions section, it has the formula"
      },
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/117906",
        "resource_title": "Stirling numbers with fixed n and k  By adamant"
      }
    ],
    "completion_count": 1,
    "created_at": {
      "seconds": 1714304566,
      "nanoseconds": 903000000
    }
  },
  "stirling_number_of_the_second_kind_for_fixed_n": {
    "created_at": {
      "seconds": 1714304424,
      "nanoseconds": 526000000
    },
    "completion_count": 3,
    "topic_id": "stirling_number_of_the_second_kind_for_fixed_n",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Stirling%20Number%20of%20the%20Second%20Kind%20for%20Fixed%20n.cpp"
    ],
    "is_data_complete": true,
    "resources": [
      {
        "resource_title": "A comment by PrinceOfPersia",
        "resource_url": "https://codeforces.com/blog/entry/48603?#comment-326879",
        "resource_comments": "",
        "is_starred": true
      }
    ]
  },
  "stirling_numbers": {
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714302099,
      "nanoseconds": 961000000
    },
    "problem_order": [
      "toph_caching_combinatorics",
      "spoj_binstirl"
    ],
    "completion_count": 6,
    "template_codes": [],
    "resources": [
      {
        "resource_title": "Stirling numbers of the second kind | Wiki",
        "resource_comments": "check the variants too at the end of the page",
        "resource_url": "https://en.wikipedia.org/wiki/Stirling_numbers_of_the_second_kind"
      },
      {
        "resource_url": "https://en.wikipedia.org/wiki/Stirling_numbers_of_the_first_kind",
        "resource_title": "Stirling numbers of the first kind | Wiki",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_title": "Recurrence relation for Stirling number of first kind with a minimum value",
        "resource_url": "https://math.stackexchange.com/questions/4003424/recurrence-relation-for-stirling-number-of-first-kind-with-a-minimum-value"
      },
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/48603",
        "resource_title": "Distributing N distinct people in M identical rooms  By bluemmb"
      }
    ],
    "topic_id": "stirling_numbers"
  },
  "stl_intro": {
    "created_at": {
      "seconds": 1715120116,
      "nanoseconds": 641000000
    },
    "topic_id": "stl_intro",
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "C++ Standard Template Library | Programiz",
        "is_starred": true,
        "resource_url": "https://www.programiz.com/cpp-programming/standard-template-library"
      },
      {
        "is_video_type": true,
        "resource_comments": "",
        "resource_title": "Introduction | C++ STL (Standard Template Library) | Knowledge Center",
        "is_starred": true,
        "resource_url": "https://www.youtube.com/watch?v=BKBXM7ypQG0&list=PL1w8k37X_6L9NXrP1D31hDTKcdAPIL0cG&index=1"
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=1MmpefbNGeU&list=PL1w8k37X_6L9NXrP1D31hDTKcdAPIL0cG&index=2",
        "resource_title": "Containers C++ | C++ STL (Standard Template Library)  Knowledge Center",
        "resource_comments": "",
        "is_video_type": true,
        "is_starred": true
      },
      {
        "is_starred": true,
        "resource_url": "https://www.youtube.com/watch?v=wjfb2kT6dtI&list=PL1w8k37X_6L9NXrP1D31hDTKcdAPIL0cG&index=3",
        "is_video_type": true,
        "resource_comments": "",
        "resource_title": "Iterators in C++ | C++ STL (Standard Template Library) | types of Iterators  Knowledge Center"
      },
      {
        "is_video_type": true,
        "resource_url": "https://www.youtube.com/watch?v=aATdPX_5T_Q&list=PL1w8k37X_6L9NXrP1D31hDTKcdAPIL0cG&index=4",
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Iterators Functions | C++ STL (Standard Template Library) | 4 important iterator functions  Knowledge Center"
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=MW9Cs4cCyTI&list=PL1w8k37X_6L9NXrP1D31hDTKcdAPIL0cG&index=5",
        "is_video_type": true,
        "resource_comments": "",
        "resource_title": "Iterator Invalidation | C++ STL (Standard Template Library)  Knowledge Center"
      },
      {
        "resource_url": "https://www.programiz.com/cpp-programming/iterators",
        "is_starred": true,
        "resource_title": "C++ Iterators | Programiz",
        "resource_comments": ""
      }
    ],
    "completion_count": 293,
    "template_codes": [],
    "is_data_complete": true
  },
  "stl_sort": {
    "template_codes": [],
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Sort in C++ Standard Template Library (STL) | Geeks for Geeks",
        "resource_url": "https://www.geeksforgeeks.org/sort-algorithms-the-c-standard-template-library-stl/"
      },
      {
        "is_starred": true,
        "resource_comments": "check until \"Coordinate Compression\"",
        "resource_title": "Custom Comparators | USACO Guide",
        "resource_url": "https://usaco.guide/silver/sorting-custom?lang=cpp"
      },
      {
        "resource_url": "https://www.programiz.com/dsa/sorting-algorithm",
        "is_starred": false,
        "resource_title": "All sorting algorithms at one place | Programiz",
        "resource_comments": ""
      }
    ],
    "topic_id": "stl_sort",
    "created_at": {
      "seconds": 1715078760,
      "nanoseconds": 549000000
    },
    "completion_count": 119,
    "problem_order": [
      "codechef_tsort",
      "hackerrank_ctci_comparator_sorting",
      "spoj_sort2d",
      "aizu_itp2_5_b",
      "hdu_5427",
      "codeforces_632c"
    ],
    "is_data_complete": true
  },
  "stoer_wagner_algorithm": {
    "created_at": {
      "seconds": 1714132727,
      "nanoseconds": 486000000
    },
    "resources": [
      {
        "resource_url": "https://blog.thomasjungblut.com/graph/mincut/mincut/",
        "resource_title": "Minimum Cut - Stoer–Wagner algorithm | Coding with Thomas",
        "resource_comments": "",
        "is_starred": true
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Stoer%20Wagner%20Algorithm.cpp"
    ],
    "topic_id": "stoer_wagner_algorithm",
    "completion_count": 1,
    "is_data_complete": true
  },
  "string_hashing": {
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/string/string-hashing.html#toc-tgt-7",
        "resource_title": "String Hashing | CP Algorithms",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "resource_title": "Rabin-Karp Algorithm for string matching | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/string/rabin-karp.html"
      },
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/60445",
        "is_starred": true,
        "resource_title": "[Tutorial] Rolling hash and 8 interesting problems [Editorial]  By dmkz"
      },
      {
        "resource_title": "26.3 String hashing | CPH",
        "resource_url": "https://usaco.guide/CPH.pdf#page=255",
        "resource_comments": ""
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/129094",
        "is_starred": true,
        "resource_comments": "Lesson: always use double hashing",
        "resource_title": "How to blow up too weak hashing without thinking  By physics0523"
      },
      {
        "resource_comments": "not necessary to check",
        "resource_url": "https://codeforces.com/blog/entry/60442",
        "resource_title": "On the mathematics behind rolling hashes and anti-hash tests"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Strings/String%20Hashing.cpp"
    ],
    "created_at": {
      "seconds": 1714639515,
      "nanoseconds": 511000000
    },
    "is_data_complete": true,
    "topic_id": "string_hashing",
    "completion_count": 32,
    "problem_order": [
      "cses_1753",
      "spoj_najpf",
      "spoj_nhay",
      "codeforces_471d",
      "kattis_hashing",
      "cses_1732",
      "cses_1733",
      "cses_1110",
      "cses_1111",
      "yosupo_enumerate_palindromes",
      "yosupo_longest_common_substring",
      "codeforces_271d",
      "spoj_adaclean",
      "codeforces_580e",
      "codeforces_716e",
      "toph_unique_substrings_query",
      "spoj_epalin",
      "uva_1239",
      "codeforces_126b",
      "codeforces_119d",
      "cses_2420",
      "codeforces_154c",
      "codechef_insq15_a",
      "uva_3163",
      "codeforces_727e",
      "uva_2955",
      "codeforces_825f",
      "codeforces_835d",
      "codeforces_25e",
      "hackerrank_gift_boxes",
      "codeforces_19c",
      "codeforces_7d",
      "hackerrank_jitu_and_strings",
      "acmp_829",
      "dmoj_ccc20s3",
      "codeforces_1056e",
      "cf_gym_104048k",
      "codechef_subinver"
    ]
  },
  "string_matching_using_bitsets": {
    "completion_count": 8,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Strings/String%20Matching%20using%20Bitsets.cpp"
    ],
    "problem_order": [
      "codeforces_914f",
      "codeforces_963d",
      "codeforces_954i",
      "codeforces_1334g",
      "codeforces_754e",
      "codeforces_528d",
      "codeforces_472g"
    ],
    "topic_id": "string_matching_using_bitsets",
    "created_at": {
      "seconds": 1714547953,
      "nanoseconds": 510000000
    },
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "String Matching using Bitset",
        "resource_url": "https://iq.opengenus.org/string-matching-using-bitset/"
      }
    ],
    "is_data_complete": true
  },
  "string_matching_with_fft": {
    "is_data_complete": true,
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/59386",
        "resource_title": "Interesting problem involving convolutions  By snacache",
        "is_starred": true
      },
      {
        "resource_title": "Simple Deterministic Wildcard Matching Peter Clifford and Raphael Clifford",
        "resource_url": "https://www.informatika.bg/resources/StringMatchingWithFFT.pdf",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_title": "[Tutorial] On Variations of String Matching  By brunomont",
        "resource_url": "https://codeforces.com/blog/entry/111380",
        "is_starred": true,
        "resource_comments": "the whole blog is great!"
      }
    ],
    "completion_count": 6,
    "created_at": {
      "seconds": 1714362680,
      "nanoseconds": 733000000
    },
    "problem_order": [
      "spoj_adamatch",
      "spoj_maxmatch",
      "kattis_kinversions",
      "toph_inter_university_sust_cse_carnival_2024",
      "codeforces_528d",
      "codeforces_827e",
      "codeforces_1334g",
      "kattis_mosaicbrowsing"
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Strings/String%20Matching%20With%20FFT.cpp"
    ],
    "topic_id": "string_matching_with_fft"
  },
  "strings": {
    "completion_count": 703,
    "template_codes": [],
    "created_at": {
      "seconds": 1713661827,
      "nanoseconds": 547000000
    },
    "is_data_complete": true,
    "problem_order": [
      "gym_287306a",
      "gym_293843a",
      "gym_293843b",
      "gym_287306k",
      "gym_293843f",
      "gym_287306o",
      "gym_287310k",
      "gym_287306n",
      "gym_293843g",
      "gym_293843c",
      "gym_293843d",
      "gym_293843h",
      "gym_293843i",
      "gym_293843j",
      "gym_293843k",
      "gym_287310x"
    ],
    "topic_id": "strings",
    "resources": [
      {
        "resource_title": "Strings | Tech With Tim",
        "resource_comments": "",
        "is_video_type": true,
        "resource_url": "https://www.youtube.com/watch?v=QtP0PdLEvFk&list=PLzMcBGfZo4-lmGC8VW0iu6qfMHjy7gLQ3&index=13"
      },
      {
        "resource_url": "https://www.programiz.com/cpp-programming/strings",
        "resource_comments": "",
        "resource_title": "C++ Strings | Programiz"
      },
      {
        "resource_url": "https://www.programiz.com/cpp-programming/string-class",
        "resource_comments": "",
        "resource_title": "C++ String Class | Programiz"
      }
    ]
  },
  "strong_orientation": {
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Strong Orientation | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/graph/strong-orientation.html"
      }
    ],
    "created_at": {
      "seconds": 1714029913,
      "nanoseconds": 828000000
    },
    "topic_id": "strong_orientation",
    "template_codes": [],
    "is_data_complete": true,
    "completion_count": 10,
    "problem_order": [
      "cses_2177",
      "szkopul_nldsb4ew1yuzykblf4lczl1y"
    ]
  },
  "structures": {
    "resources": [
      {
        "resource_title": "C++ Structures | Programiz",
        "resource_url": "https://www.programiz.com/cpp-programming/structure",
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_title": "C++ Structure and Function | Programiz",
        "resource_url": "https://www.programiz.com/cpp-programming/structure-function"
      },
      {
        "resource_title": "Structure In C++ | CppNuts",
        "resource_comments": "",
        "is_video_type": true,
        "resource_url": "https://www.youtube.com/watch?v=_vmtpsNgD7o"
      }
    ],
    "topic_id": "structures",
    "created_at": {
      "seconds": 1713661828,
      "nanoseconds": 907000000
    },
    "completion_count": 644,
    "template_codes": [],
    "is_data_complete": true
  },
  "subset_convolution": {
    "created_at": {
      "seconds": 1714377366,
      "nanoseconds": 476000000
    },
    "topic_id": "subset_convolution",
    "is_data_complete": true,
    "resources": [
      {
        "resource_title": "Tutorial on Zeta Transform, Mobius Transform and Subset Sum Convolution  By sidhant",
        "resource_url": "https://codeforces.com/blog/entry/72488",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_title": "Fourier Meets Mobius: Fast Subset Convolution | Andreas Bjorklund and Thore Husfeldt",
        "resource_url": "https://people.csail.mit.edu/rrw/presentations/subset-conv.pdf",
        "resource_comments": ""
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/92153",
        "resource_comments": "",
        "resource_title": "Subset convolution interpretation  By adamant"
      },
      {
        "resource_comments": "relevant tutorial, check the first comment in this blog",
        "resource_title": "OR Convolution for Common People  By ko_osaga",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/115438"
      },
      {
        "resource_comments": "related content",
        "resource_title": "[Tutorial] Zeta, Mobius Transform to AND, OR, GCD Convolution  By jinhan814",
        "resource_url": "https://codeforces.com/blog/entry/119082"
      }
    ],
    "completion_count": 3,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Dynamic%20Programming%20Optimizations/SOS%20convolutions.cpp"
    ]
  },
  "subset_sum_in_sqrt": {
    "created_at": {
      "seconds": 1714381412,
      "nanoseconds": 771000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Dynamic%20Programming%20Optimizations/Bounded%20Knapsack.cpp",
      "https://github.com/ShahjalalShohag/code-library/blob/main/Dynamic%20Programming%20Optimizations/Subset%20Sum%20in%20SQRT.cpp"
    ],
    "topic_id": "subset_sum_in_sqrt",
    "resources": [
      {
        "resource_url": "https://gitlab.istic.univ-rennes1.fr/bdezordo/hpc-4-subset-sum-bitmasking/-/blob/main/README.md?ref_type=heads",
        "resource_title": "Bitmasking as solution for subset sum problem",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_comments": "",
        "resource_title": "Subset sum queries using bitset | Geeks for Geeks",
        "resource_url": "https://www.geeksforgeeks.org/subset-sum-queries-using-bitset/"
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "[Tutorial] Subset Sum Square Root Optimisation  By arujbansal",
        "resource_url": "https://codeforces.com/blog/entry/97396"
      },
      {
        "resource_title": "Decide if a number equals the sum of some submultiset of positive integers  By pimenta",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/49812",
        "is_starred": true
      },
      {
        "resource_title": "[Tutorial] Knapsack, Subset Sum and the (max,+) Convolution  By errorgorn",
        "resource_url": "https://codeforces.com/blog/entry/98663",
        "is_starred": true,
        "resource_comments": "check until \"(max,+) convolution\""
      },
      {
        "is_starred": true,
        "resource_url": "https://medium.com/@florian_algo/unveiling-the-bounded-knapsack-problem-737d71c4146b",
        "resource_title": "Unveiling the Bounded Knapsack Problem Florian June Florian June",
        "resource_comments": ""
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/59606",
        "resource_title": "[Tutorial] Optimized solution for Knapsack problem  By sdnr1",
        "is_starred": false,
        "resource_comments": ""
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/100910",
        "resource_comments": "check techniques 3, 4 and 5",
        "resource_title": "[Tutorial] Collection of little techniques  By -is-this-fft-",
        "is_starred": true
      },
      {
        "is_starred": true,
        "resource_url": "https://usaco.guide/CPH.pdf#page=264",
        "resource_comments": "",
        "resource_title": "27.2 Integer partitions | CPH"
      },
      {
        "resource_comments": "",
        "resource_title": "Integral bounded knapsack problem solvable in O(knapsack_size*num_of_items) | Petr",
        "resource_url": "https://blog.mitrichev.ch/2011/07/integral-bounded-knapsack-problem.html"
      },
      {
        "resource_url": "https://usaco.guide/plat/bitsets?lang=cpp#knapsack-again",
        "resource_comments": "",
        "resource_title": "Bitsets | Knapsack Again | USACO Guide"
      }
    ],
    "completion_count": 29,
    "is_data_complete": true,
    "problem_order": [
      "cses_1745",
      "cses_1093",
      "codeforces_755f",
      "codeforces_1856e2",
      "atcoder_agc020_c",
      "codeforces_1839e",
      "codechef_minfund",
      "noi18_knapsack",
      "codechef_treups",
      "codeforces_95e",
      "kattis_eavesdropperevasion",
      "yandex_18290f",
      "atcoder_abc221_g",
      "codeforces_1481f"
    ]
  },
  "subset_sum_problem_using_generating_functions": {
    "is_data_complete": true,
    "resources": [
      {
        "resource_url": "https://discuss.codechef.com/t/pparts-editorial/68595",
        "resource_title": "PPARTS - Editorial",
        "resource_comments": ""
      }
    ],
    "created_at": {
      "seconds": 1714380378,
      "nanoseconds": 929000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Subset%20Sum%20Problem.cpp"
    ],
    "topic_id": "subset_sum_problem_using_generating_functions",
    "completion_count": 3
  },
  "subset_union_of_bitsets": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Dynamic%20Programming%20Optimizations/Subset%20Union%20of%20Bitsets.cpp"
    ],
    "created_at": {
      "seconds": 1714725381,
      "nanoseconds": 540000000
    },
    "topic_id": "subset_union_of_bitsets",
    "resources": [],
    "is_data_complete": true
  },
  "substring_dp": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Strings/Prefix%20Automaton.cpp"
    ],
    "topic_id": "substring_dp",
    "completion_count": 8,
    "problem_order": [
      "cses_1112",
      "codeforces_1015f",
      "codeforces_808g",
      "codeforces_346b",
      "lightoj_unlucky_strings"
    ],
    "is_data_complete": true,
    "resources": [
      {
        "resource_title": "Prefix function. Knuth–Morris–Pratt algorithm | CP Algorithms",
        "resource_comments": "check the \"Building an automaton according to the prefix function\" section",
        "resource_url": "https://cp-algorithms.com/string/prefix-function.html#building-an-automaton-according-to-the-prefix-function"
      }
    ],
    "created_at": {
      "seconds": 1714733574,
      "nanoseconds": 288000000
    }
  },
  "suffix_array": {
    "created_at": {
      "seconds": 1714642480,
      "nanoseconds": 588000000
    },
    "is_data_complete": true,
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/string/suffix-array.html",
        "is_starred": true,
        "is_video_type": false,
        "resource_title": "Suffix Array | CP Algorithms"
      },
      {
        "resource_title": "Suffix Array » Step 1-5 | CF EDU",
        "resource_url": "https://codeforces.com/edu/course/2/lesson/2",
        "resource_comments": "",
        "is_starred": true,
        "is_video_type": true
      },
      {
        "resource_url": "https://discuss.codechef.com/t/a-tutorial-on-suffix-arrays/2950",
        "resource_title": "A tutorial on Suffix Arrays | kuruma",
        "resource_comments": ""
      }
    ],
    "completion_count": 13,
    "problem_order": [
      "yosupo_suffixarray",
      "cf_edu_269119a",
      "cf_edu_269118a",
      "cses_2103",
      "cses_2105",
      "cses_2106",
      "cf_edu_269656c",
      "cses_2108",
      "cses_2109",
      "spoj_sublex",
      "cses_2110",
      "yosupo_number_of_substrings",
      "yosupo_longest_common_substring",
      "spoj_lcs2",
      "spoj_adaclean",
      "cses_2104",
      "uva_3664",
      "codechef_anusar",
      "spoj_adaphoto",
      "codechef_insq16f",
      "uva_3668",
      "codeforces_149e",
      "codeforces_963d",
      "codeforces_822e",
      "codechef_tangled",
      "uva_3695",
      "uva_3343",
      "uva_3358",
      "codeforces_873f",
      "codeforces_802i",
      "cf_edu_269656d",
      "cf_edu_269656e",
      "cf_edu_269656f",
      "codeforces_1090j",
      "usaco_768",
      "codeforces_653f",
      "codechef_tandem",
      "codeforces_30e",
      "codeforces_204e",
      "codeforces_504e"
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Strings/Suffix%20Array.cpp"
    ],
    "topic_id": "suffix_array"
  },
  "suffix_automaton": {
    "topic_id": "suffix_automaton",
    "resources": [
      {
        "is_starred": true,
        "resource_title": "Suffix Automaton | CP Algorithms",
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/string/suffix-automaton.html"
      },
      {
        "resource_title": "A short guide to suffix automata  By quasisphere",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/20861"
      },
      {
        "resource_title": "Obtaining suffix array from suffix automaton  By adamant",
        "resource_url": "https://codeforces.com/blog/entry/12280",
        "resource_comments": ""
      }
    ],
    "problem_order": [
      "cses_2102",
      "cses_2103",
      "cses_2105",
      "cses_2108",
      "cses_2109",
      "cses_2110",
      "yosupo_number_of_substrings",
      "cses_2104",
      "yosupo_longest_common_substring",
      "codechef_anusar",
      "uva_3668",
      "spoj_lcs2",
      "spoj_sublex",
      "codeforces_873f",
      "cf_edu_269656d",
      "cf_edu_269656e",
      "codeforces_235c",
      "codeforces_802i",
      "codeforces_204e"
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Strings/Suffix%20Automaton.cpp"
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714647125,
      "nanoseconds": 758000000
    },
    "completion_count": 6
  },
  "suffix_automaton_ft_distinct_substring_queries_in_range": {
    "topic_id": "suffix_automaton_ft_distinct_substring_queries_in_range",
    "created_at": {
      "seconds": 1714647619,
      "nanoseconds": 614000000
    },
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/62331",
        "resource_comments": "",
        "resource_title": "The history of some recurring problem  By adamant"
      }
    ],
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Strings/Suffix%20Automaton%20Distinct%20Substring%20Queries%20in%20Range.cpp"
    ]
  },
  "suffix_tree": {
    "is_data_complete": true,
    "topic_id": "suffix_tree",
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "Suffix Tree. Ukkonen's Algorithm | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/string/suffix-tree-ukkonen.html",
        "is_starred": true
      },
      {
        "resource_title": "Suffix tree. Ukkonen's algorithm  By adamant",
        "resource_url": "https://codeforces.com/blog/entry/16780",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_url": "https://www.cs.otago.ac.nz/cosc348/alignments/SuffixTreesTutorial.pdf",
        "resource_title": "Fast String Searching With Suffix Trees: Tutorial by Mark Nelson"
      }
    ],
    "template_codes": [
      "https://ideone.com/sT8Vd1"
    ],
    "completion_count": 1,
    "created_at": {
      "seconds": 1714647652,
      "nanoseconds": 810000000
    }
  },
  "sum_of_floors": {
    "completion_count": 10,
    "problem_order": [
      "yosupo_enumerate_quotients",
      "cses_1082",
      "codeforces_616e",
      "atcoder_abc356_e",
      "leetcode_sum_of_floored_pairs",
      "toph_colded_lcm",
      "hackerearth_yet_another_sum_problem"
    ],
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://usaco.guide/problems/cses-1082-sum-of-divisors/solution",
        "resource_title": "Editorial of CSES - Sum of Divisors | USACO guide"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/65363?mobile=false",
        "resource_title": "Discussion - Sum of floor values",
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/118001",
        "resource_comments": "",
        "resource_title": "[Tutorial] Investigating the Harmonic Numbers  By Proofy"
      }
    ],
    "topic_id": "sum_of_floors",
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Sum%20of%20Floors.cpp"
    ],
    "created_at": {
      "seconds": 1714309852,
      "nanoseconds": 331000000
    }
  },
  "sum_of_nci_for_a_fixed_large_n": {
    "completion_count": 1,
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://discuss.codechef.com/t/how-to-calculate-sum-of-binomial-coefficients-efficiently/12846/4",
        "resource_title": "min_25 explanation",
        "resource_comments": ""
      }
    ],
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Sum%20of%20nCi%20for%20a%20Fixed%20Large%20n.cpp"
    ],
    "created_at": {
      "seconds": 1713662045,
      "nanoseconds": 205000000
    },
    "topic_id": "sum_of_nci_for_a_fixed_large_n"
  },
  "sum_of_nci_over_a_fixed_congruence_class": {
    "created_at": {
      "seconds": 1713662043,
      "nanoseconds": 893000000
    },
    "topic_id": "sum_of_nci_over_a_fixed_congruence_class",
    "resources": [],
    "template_codes": [],
    "completion_count": 1
  },
  "sum_of_ncr_a_i_k_for_each_k_from_1_to_n": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Sum%20of%20C(a(i),%20k)%20for%20each%20k%20from%201%20to%20n.cpp"
    ],
    "is_data_complete": true,
    "topic_id": "sum_of_ncr_a_i_k_for_each_k_from_1_to_n",
    "resources": [],
    "completion_count": 2,
    "created_at": {
      "seconds": 1713662044,
      "nanoseconds": 539000000
    }
  },
  "sum_of_ncr_over_a_fixed_congruence_class": {
    "created_at": {
      "seconds": 1714299741,
      "nanoseconds": 112000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Sum%20of%20nCi%20over%20a%20Fixed%20Congruence%20Class.cpp"
    ],
    "topic_id": "sum_of_ncr_over_a_fixed_congruence_class",
    "resources": [],
    "is_data_complete": true,
    "completion_count": 1,
    "problem_order": [
      "toph_abcdefgh"
    ]
  },
  "sum_of_the_number_of_divisors_in_cbrt_n": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Sum%20of%20The%20Number%20of%20Divisors%20in%20cbrt(n).cpp"
    ],
    "topic_id": "sum_of_the_number_of_divisors_in_cbrt_n",
    "is_data_complete": true,
    "completion_count": 2,
    "resources": [],
    "created_at": {
      "seconds": 1714211395,
      "nanoseconds": 870000000
    }
  },
  "suurballes_algorithm": {
    "topic_id": "suurballes_algorithm",
    "template_codes": [
      "https://github.com/nildo/suurballe/blob/master/suurballe.py"
    ],
    "resources": [
      {
        "is_starred": true,
        "resource_title": "Suurballe's algorithm | Wiki",
        "resource_comments": "",
        "resource_url": "https://en.wikipedia.org/wiki/Suurballe%27s_algorithm"
      }
    ],
    "created_at": {
      "seconds": 1714108203,
      "nanoseconds": 772000000
    },
    "is_data_complete": true
  },
  "sweep_line_algorithm": {
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/20377",
        "resource_comments": "",
        "resource_title": "How to sweep like a Sir  By DanAlex"
      },
      {
        "resource_comments": "",
        "resource_url": "https://www.topcoder.com/thrive/articles/Line%20Sweep%20Algorithms",
        "resource_title": "LINE SWEEP ALGORITHMS | Topcoder"
      },
      {
        "resource_title": "Chapter 30 Sweep line algorithms | CPH",
        "resource_url": "https://usaco.guide/CPH.pdf#page=285",
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "resource_url": "https://usaco.guide/plat/sweep-line?lang=cpp",
        "is_starred": true,
        "resource_title": "Sweep Line | USACO Guide",
        "resource_comments": ""
      }
    ],
    "template_codes": [],
    "is_data_complete": true,
    "problem_order": [
      "gym_101982f",
      "cses_1740",
      "kattis_closestpair2",
      "gym_101987a",
      "usaco_227",
      "uva_4376",
      "cf_gym_104114b",
      "usaco_943",
      "usaco_266",
      "dmoj_ioi03p6",
      "szkopul_nzscuwz2acepsbkuvcivzrrt",
      "uva_4413",
      "gym_101242g",
      "codechef_inf16l",
      "codechef_chefcirc",
      "kattis_gridmst",
      "coci17_plahte",
      "ceoi06_walk",
      "dmoj_apio10p3",
      "cf_gym_100443j",
      "codeforces_1402b"
    ],
    "created_at": {
      "seconds": 1714773504,
      "nanoseconds": 337000000
    },
    "topic_id": "sweep_line_algorithm",
    "completion_count": 4
  },
  "sweepline_mo": {
    "topic_id": "sweepline_mo",
    "template_codes": [],
    "resources": [
      {
        "resource_comments": "check \"Advanced: Sweepline Mo / Offline Again\" section, until \"Answering queries on a static array, online\"",
        "is_starred": true,
        "resource_title": "[Tutorial] Square root decomposition and applications | box",
        "resource_url": "https://codeforces.com/blog/entry/83248"
      }
    ],
    "created_at": {
      "seconds": 1713378386,
      "nanoseconds": 135000000
    },
    "completion_count": 3,
    "is_data_complete": true
  },
  "system_of_difference_constraints": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/System%20Of%20Difference%20Constraints.cpp"
    ],
    "created_at": {
      "seconds": 1714045969,
      "nanoseconds": 865000000
    },
    "is_data_complete": true,
    "resources": [
      {
        "resource_comments": "use vpn if you cant access the site",
        "resource_url": "https://reponroy.wordpress.com/2016/06/27/system-of-difference-constraints/",
        "is_starred": true,
        "resource_title": "System of difference constraints"
      },
      {
        "resource_url": "https://www.cs.rit.edu/~spr/COURSES/ALG/MIT/lec18.pdf",
        "resource_title": "Solving a system of difference constraints ",
        "resource_comments": "check from page 32"
      },
      {
        "resource_comments": "",
        "resource_url": "https://walkccc.me/CLRS/Chap24/24.4/",
        "resource_title": "Difference constraints and shortest paths"
      }
    ],
    "completion_count": 2,
    "topic_id": "system_of_difference_constraints"
  },
  "tangent_2d": {
    "created_at": {
      "seconds": 1714760525,
      "nanoseconds": 289000000
    },
    "problem_order": [
      "uva_12304",
      "timus_1163"
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L420-L454",
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L364-L391"
    ],
    "completion_count": 1,
    "topic_id": "tangent_2d",
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "Chapter 2.7.5 Tangent lines | CP Geo",
        "is_starred": true,
        "resource_url": "https://victorlecomte.com/cp-geo.pdf"
      },
      {
        "is_starred": true,
        "resource_url": "https://cp-algorithms.com/geometry/tangents-to-two-circles.html",
        "resource_comments": "",
        "resource_title": "Finding common tangents to two circles | CP Algorithms"
      }
    ],
    "is_data_complete": true
  },
  "tangents_from_point_to_polygon_2d": {
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L897-L930"
    ],
    "resources": [
      {
        "is_starred": true,
        "resource_title": "5.1 Convex polygon: O(logN) ",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/48868"
      },
      {
        "resource_url": "https://cs.stackexchange.com/questions/138901/upper-and-lower-tangent-line-to-convex-hull-from-a-point",
        "resource_title": "Upper and lower tangent line to convex hull from a point",
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "is_video_type": true,
        "resource_title": "09 Convex Hulls - Common tangent from a point | peyman afshani",
        "resource_url": "https://www.youtube.com/watch?v=xwpCSvvOfMI"
      },
      {
        "is_video_type": true,
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/watch?v=ESHYt_xQ-FY&list=PLtTatrCwXHzFp1Y_c6i82waJ2b7OWyiKM&index=10",
        "resource_title": "10 Convex Hulls - Common tangent between two hulls  peyman afshani"
      },
      {
        "resource_comments": "",
        "resource_url": "https://www.geeksforgeeks.org/tangents-two-convex-polygons/",
        "resource_title": "Tangents between two Convex Polygons | Geeks for Geeks"
      },
      {
        "resource_title": "Help for a Geometry Problem  By _Ash__",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/64003"
      }
    ],
    "created_at": {
      "seconds": 1714762359,
      "nanoseconds": 108000000
    },
    "topic_id": "tangents_from_point_to_polygon_2d"
  },
  "ternary_search": {
    "completion_count": 20,
    "template_codes": [
      "https://cp-algorithms.com/num_methods/ternary_search.html#implementation"
    ],
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Ternary Search | CP Algorithms",
        "resource_url": "https://cp-algorithms.com/num_methods/ternary_search.html"
      },
      {
        "is_starred": true,
        "resource_title": "Ternary Search on Integers!  By Deemo",
        "resource_url": "https://codeforces.com/blog/entry/43440",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "resource_title": "Tutorial On Tof (Ternary Search)  By Mahdi_Jfri",
        "resource_url": "https://codeforces.com/blog/entry/91664"
      }
    ],
    "created_at": {
      "seconds": 1714834313,
      "nanoseconds": 358000000
    },
    "problem_order": [
      "codechef_amcs03",
      "cf_gym_101309d",
      "codeforces_439d",
      "codechef_icm2003",
      "codeforces_578c",
      "lightoj_closest_distance",
      "uva_4898",
      "cf_gym_100829a",
      "codeforces_1848d",
      "lightoj_pyramid",
      "uva_3349",
      "spoj_kopc12a",
      "codeforces_1059d",
      "codeforces_1355e",
      "timus_1719",
      "codeforces_626e",
      "codeforces_1538g",
      "codeforces_1928d",
      "toph_life_is_dark_and_full_of_error"
    ],
    "topic_id": "ternary_search",
    "is_data_complete": true
  },
  "the_slime_trick": {
    "topic_id": "the_slime_trick",
    "resources": [
      {
        "resource_title": "A comment by jqdai0815",
        "resource_url": "https://codeforces.com/blog/entry/77284#comment-620956",
        "resource_comments": ""
      }
    ],
    "template_codes": [],
    "created_at": {
      "seconds": 1714507748,
      "nanoseconds": 844000000
    },
    "is_data_complete": true
  },
  "the_xor_trick": {
    "topic_id": "the_xor_trick",
    "created_at": {
      "seconds": 1715167463,
      "nanoseconds": 981000000
    },
    "is_data_complete": true,
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "That XOR Trick | florian",
        "resource_url": "https://florian.github.io//xor-trick/"
      }
    ],
    "template_codes": [],
    "completion_count": 95
  },
  "thomas_algorithm": {
    "resources": [
      {
        "resource_comments": "",
        "resource_title": "Tridiagonal matrix algorithm | Wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Tridiagonal_matrix_algorithm"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Thomas%20Algorithm.cpp"
    ],
    "topic_id": "thomas_algorithm",
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714470723,
      "nanoseconds": 46000000
    }
  },
  "three_edge_connectivity": {
    "topic_id": "three_edge_connectivity",
    "created_at": {
      "seconds": 1714030397,
      "nanoseconds": 9000000
    },
    "completion_count": 1,
    "resources": [
      {
        "resource_url": "https://www.sciencedirect.com/science/article/abs/pii/S0020019013002470",
        "resource_comments": "",
        "resource_title": "A simple 3-edge connected component algorithm revisited | Paper by Nima Norouzi, Yung H. Tsin"
      }
    ],
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Three%20Edge%20Connectivity.cpp"
    ]
  },
  "titus_lemma": {
    "topic_id": "titus_lemma",
    "created_at": {
      "seconds": 1714478185,
      "nanoseconds": 529000000
    },
    "resources": [
      {
        "resource_title": "Titu's Lemma | Brilliant",
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://brilliant.org/wiki/titus-lemma/"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/49741#comment-337988",
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "A comment by Alpha_Q"
      }
    ],
    "is_data_complete": true,
    "template_codes": [],
    "completion_count": 1
  },
  "tonelli_shanks_algorithm": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Tonelli%20Shanks%20Algorithm.cpp",
      "https://37zigen.com/cipolla-algorithm/"
    ],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714284303,
      "nanoseconds": 842000000
    },
    "completion_count": 1,
    "topic_id": "tonelli_shanks_algorithm",
    "problem_order": [
      "yosupo_sqrt_mod",
      "luogu_p5491",
      "codechef_lcasqrt"
    ],
    "resources": [
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm",
        "resource_title": "[Prime Mod] Tonelli–Shanks algorithm | Wiki"
      },
      {
        "resource_url": "https://en.wikipedia.org/wiki/Cipolla%27s_algorithm",
        "resource_comments": "",
        "resource_title": "[Prime Mod] Cipolla's algorithm | Wiki"
      },
      {
        "resource_url": "https://37zigen.com/cipolla-algorithm/",
        "resource_comments": "",
        "resource_title": "[Prime Mod] Cipolla のアルゴリズム | 37zigen"
      },
      {
        "resource_title": "[General Solution] Discrete square root modulo  By wilcot",
        "resource_url": "https://codeforces.com/blog/entry/124745",
        "resource_comments": "",
        "is_starred": true
      }
    ]
  },
  "top_tree": {
    "created_at": {
      "seconds": 1713764024,
      "nanoseconds": 408000000
    },
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/103726",
        "resource_title": "[Tutorial] Fully Dynamic Trees Supporting Path/Subtree Aggregates and Lazy Path/Subtree Updates | smax",
        "resource_comments": ""
      },
      {
        "resource_url": "https://www.overleaf.com/project/5cd4ea03d299a86710788575",
        "is_starred": true,
        "resource_title": "A Basic Exploration of Dynamic Trees | Zhiao Huang and Kirito Feng",
        "resource_comments": "Check Some Extensions of LCT"
      },
      {
        "resource_title": "Top-trees and dynamic graph algorithms | Thesis Paper by Jacob Holm and Kristian de Lichtenberg",
        "resource_url": "https://di.ku.dk/forskning/Publikationer/tekniske_rapporter/tekniske-rapporter-1998/98-17.pdf",
        "resource_comments": ""
      }
    ],
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ecnerwala/cp-book/blob/master/src/top_tree.hpp"
    ],
    "topic_id": "top_tree"
  },
  "topological_sorting": {
    "is_data_complete": true,
    "topic_id": "topological_sorting",
    "problem_order": [
      "cses_1679",
      "spoj_toposort",
      "uva_10305",
      "codeforces_510c",
      "spoj_rpla",
      "cf_gym_101102k"
    ],
    "completion_count": 77,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Topological%20Sorting.cpp"
    ],
    "created_at": {
      "seconds": 1713949762,
      "nanoseconds": 316000000
    },
    "resources": [
      {
        "resource_url": "https://cp-algorithms.com/graph/topological-sort.html",
        "is_starred": true,
        "resource_title": "Topological Sorting | CP Algorithms",
        "resource_comments": ""
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=eL-KzMXSXXI",
        "resource_comments": "",
        "is_video_type": true,
        "resource_title": "Topological Sort Algorithm | Graph Theory | WilliamFiset",
        "is_starred": true
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=cIBFEhD77b4",
        "resource_title": "Topological Sort | Kahn's Algorithm | Graph Theory  WilliamFiset",
        "is_starred": true,
        "resource_comments": "",
        "is_video_type": true
      },
      {
        "resource_title": "Topological Sorting | Geeks For Geeks",
        "resource_url": "https://www.geeksforgeeks.org/topological-sorting/",
        "resource_comments": ""
      },
      {
        "resource_comments": "",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/75627",
        "resource_title": "[Insight] Number of Topological Orderings of a Directed Tree  By Osama_Alkhodairy"
      }
    ]
  },
  "tournament_graph": {
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://en.wikipedia.org/wiki/Tournament_(graph_theory)",
        "resource_comments": "",
        "resource_title": "Tournament (graph theory) | Wiki"
      },
      {
        "resource_title": "Hamiltonian Path in Tournament Graph",
        "resource_url": "https://www.iarcs.org.in/inoi/contests/apr2005/Advanced-2-solution.php",
        "resource_comments": ""
      },
      {
        "resource_title": "Strongly Connected Tournament",
        "resource_comments": "",
        "resource_url": "https://math.stackexchange.com/questions/1200126/strongly-connected-tournament"
      }
    ],
    "topic_id": "tournament_graph",
    "template_codes": [],
    "completion_count": 2,
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714119970,
      "nanoseconds": 231000000
    }
  },
  "treap": {
    "is_data_complete": true,
    "topic_id": "treap",
    "completion_count": 15,
    "problem_order": [
      "spoj_orderset",
      "spoj_adaaphid",
      "spoj_count1it",
      "codeforces_911g",
      "codedrills_the_cabins_in_the_woods",
      "codeforces_809d",
      "hackerearth_septembereasy_points_and_distances_d30d0e6b",
      "ioi13_game"
    ],
    "resources": [
      {
        "resource_url": "https://cp-algorithms.com/data_structures/treap.html#toc-tgt-8",
        "is_starred": true,
        "resource_title": "Treap | CP Algorithms",
        "resource_comments": "check until \"Implicit Treaps\""
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=6x0UlIBLRsc",
        "is_video_type": true,
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "AlgorithmsThread 9: Treaps | SecondThread"
      },
      {
        "resource_url": "https://docs.google.com/presentation/d/14xgtdDWnIBwmJRAuIdZ8FvLZcX9uRxnNoGOGAQRDIvc/edit#slide=id.g2b8ceafba6_0_3",
        "resource_comments": "",
        "resource_title": "Treap presentation | Benq"
      },
      {
        "resource_comments": "use vpn if you can't access this site",
        "resource_url": "https://tanujkhattar.wordpress.com/2016/01/10/treaps-one-tree-to-rule-em-all-part-1/",
        "resource_title": "Treaps : One Tree to Rule ’em all | Tanuj Khattar"
      },
      {
        "resource_comments": "",
        "resource_title": "\"Merging treaps\" -- or how to merge sorted sets in good complexity...  By bicsi",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/108601"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Treap.cpp"
    ],
    "created_at": {
      "seconds": 1713808435,
      "nanoseconds": 990000000
    }
  },
  "tree_diameter": {
    "is_data_complete": true,
    "resources": [
      {
        "resource_title": "[Tutorial] Diameter of a tree and its applications  By TheScrasse",
        "resource_url": "https://codeforces.com/blog/entry/101271",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=MOy4UDjN8DM",
        "resource_comments": "check first 12 mins",
        "resource_title": "AlgorithmsThread 8: Tree Basics",
        "is_video_type": true
      }
    ],
    "created_at": {
      "seconds": 1713951142,
      "nanoseconds": 443000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Tree%20Diameter.cpp"
    ],
    "completion_count": 57,
    "topic_id": "tree_diameter",
    "problem_order": [
      "cses_1131",
      "cses_1132",
      "spoj_eagle1",
      "cf_gym_102694a",
      "cf_gym_102694b",
      "codeforces_734e",
      "atcoder_agc033_c",
      "codeforces_1404b",
      "codeforces_456e",
      "codeforces_1004e",
      "codeforces_1943c",
      "codeforces_633f",
      "atcoder_arc117_d",
      "atcoder_arc108_f",
      "atcoder_abc221_f",
      "codeforces_1434d",
      "codeforces_1214h"
    ]
  },
  "tree_isomorphism": {
    "resources": [
      {
        "resource_title": "Tree isomorphism | Slides by Alexander Smal",
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://logic.pdmi.ras.ru/~smal/files/smal_jass08_slides.pdf"
      },
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://wwwmayr.in.tum.de/konferenzen/Jass08/courses/1/smal/Smal_Paper.pdf",
        "resource_title": "Explanation for ‘Tree isomorphism’ talk by Alexander Smal"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/101010",
        "resource_comments": "",
        "resource_title": "[Tutorial] Tree Isomorphism CSES  By Olympia"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/113465",
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Hashing root trees  By Vladosiya"
      }
    ],
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Tree%20Isomorphism.cpp"
    ],
    "topic_id": "tree_isomorphism",
    "completion_count": 7,
    "created_at": {
      "seconds": 1714149318,
      "nanoseconds": 29000000
    },
    "problem_order": [
      "cses_1700",
      "cses_1701",
      "spoj_treeiso",
      "yosupo_rooted_tree_isomorphism_classification",
      "csacademy_binary_isomorphism",
      "codeforces_1800g",
      "codechef_twotrees",
      "codeforces_1252f",
      "cf_gym_102354j",
      "kattis_twochartsbecomeone",
      "toph_isomorphic_graph",
      "codeforces_763d",
      "cf_gym_103640g"
    ]
  },
  "tree_orientation_to_maximize_pairs_of_reachable_nodes": {
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/89228?#comment-776479",
        "resource_title": "A comment by Bruteforceman",
        "is_starred": true
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Tree%20Orientation.cpp"
    ],
    "created_at": {
      "seconds": 1714151069,
      "nanoseconds": 425000000
    },
    "is_data_complete": true,
    "topic_id": "tree_orientation_to_maximize_pairs_of_reachable_nodes"
  },
  "triangulation_2d": {
    "completion_count": 3,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L1244-L1270"
    ],
    "topic_id": "triangulation_2d",
    "is_data_complete": true,
    "resources": [
      {
        "is_starred": true,
        "resource_title": "Polygon triangulation | Wiki",
        "resource_comments": "",
        "resource_url": "https://en.wikipedia.org/wiki/Polygon_triangulation"
      },
      {
        "resource_title": "Every Polygon can be Triangulated Into Exactly n-2 Triangles | Proof by Induction | Think Twice",
        "is_video_type": true,
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/watch?v=2x4ioToqe_c"
      },
      {
        "resource_title": "Polygon Triangulation [1] - Overview of Ear Clipping | Two-Bit Coding",
        "is_starred": true,
        "is_video_type": true,
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/watch?v=QAdfkylpYwc"
      }
    ],
    "created_at": {
      "seconds": 1714762815,
      "nanoseconds": 349000000
    }
  },
  "trie": {
    "is_data_complete": true,
    "topic_id": "trie",
    "completion_count": 45,
    "resources": [
      {
        "resource_title": "Trie series | Striver",
        "resource_comments": "",
        "resource_url": "https://www.youtube.com/playlist?list=PLgUwDviBIf0pcIDCZnxhv0LkHf5KzG9zp",
        "is_starred": true,
        "is_video_type": true
      },
      {
        "resource_url": "https://www.geeksforgeeks.org/introduction-to-trie-data-structure-and-algorithm-tutorials/",
        "resource_title": "Introduction to Trie – Data Structure and Algorithm Tutorials | Geeks for Geeks",
        "resource_comments": ""
      },
      {
        "resource_url": "https://usaco.guide/PAPS.pdf#page=243",
        "resource_comments": "",
        "resource_title": "Trie | Principles of Algorithmic Problem Solving"
      },
      {
        "resource_url": "https://threadsiiithyderabad.quora.com/Tutorial-on-Trie-and-example-problems",
        "is_starred": true,
        "resource_comments": "it describes how we can use Tries for bit problems",
        "resource_title": "Bitwise Trie | Lalit Kundu  "
      }
    ],
    "problem_order": [
      "spoj_adaindex",
      "spoj_trycomp",
      "karuta",
      "codechef_nplflf",
      "uva_12506",
      "toph_priority_of_digits",
      "codeforces_706d",
      "uva_11488",
      "yosupo_set_xor_min",
      "codeforces_842d",
      "spoj_subxor",
      "codeforces_665e",
      "izho12_xor",
      "codeforces_282e",
      "codeforces_817e",
      "csacademy_xor_submatrix",
      "toph_yet_another_xor_problem",
      "cses_1731",
      "codeforces_456d",
      "coci20_vlak",
      "ioi08_printer",
      "atcoder_arc122_d",
      "codeforces_965e",
      "uva_11539",
      "codeforces_1416c",
      "usaco_1281",
      "codeforces_1055f",
      "joi16_selling_rna",
      "codeforces_888g"
    ],
    "created_at": {
      "seconds": 1713300302,
      "nanoseconds": 899000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Trie.cpp"
    ]
  },
  "trivariable_linear_diophantine_equation_with_nonnegative_solutions": {
    "is_data_complete": true,
    "resources": [
      {
        "resource_title": "The Number of Solutions to ax + by + cz = n and its Relation to Quadratic Residues",
        "resource_comments": "",
        "resource_url": "https://cs.uwaterloo.ca/journals/JIS/VOL23/Binner/binner4.pdf"
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Number%20Theory/Linear%20Diophantine%20Equation%20Three%20Variables%20with%20Nonnegative%20Solutions.cpp"
    ],
    "topic_id": "trivariable_linear_diophantine_equation_with_nonnegative_solutions",
    "created_at": {
      "seconds": 1714307139,
      "nanoseconds": 667000000
    }
  },
  "trygub_numbers": {
    "topic_id": "trygub_numbers",
    "resources": [
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_title": "Big integers with negative digits: The Trygub numbers  By adamant",
        "resource_url": "https://codeforces.com/blog/entry/115626"
      }
    ],
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Miscellaneous/Trygub%20Num.cpp"
    ],
    "created_at": {
      "seconds": 1714832500,
      "nanoseconds": 218000000
    }
  },
  "tuttes_theorem_ft_arborescences_in_a_graph": {
    "topic_id": "tuttes_theorem_ft_arborescences_in_a_graph",
    "created_at": {
      "seconds": 1714039194,
      "nanoseconds": 181000000
    },
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Tuttes%20Theorem.cpp"
    ],
    "problem_order": [
      "yosupo_counting_spanning_tree_directed",
      "spoj_dagcnt"
    ],
    "resources": [
      {
        "resource_title": "The Matrix-Tree Theorems",
        "resource_url": "https://personalpages.manchester.ac.uk/staff/mark.muldoon/Teaching/DiscreteMaths/LectureNotes/IntroToMatrixTree.pdf",
        "resource_comments": "check the Tutte’s Matrix-Tree Theorem section"
      }
    ]
  },
  "two_pointers": {
    "problem_order": [
      "cf_edu_307092a",
      "cf_edu_307093a",
      "cf_edu_307093b",
      "cf_edu_307093c",
      "cf_edu_307093d",
      "cses_1640",
      "cses_1660",
      "codeforces_279b",
      "codeforces_702c",
      "codeforces_701c",
      "cses_1141",
      "cses_1641",
      "cses_2428",
      "cf_edu_307093e",
      "cf_edu_307093f",
      "codeforces_1777c",
      "cses_1642"
    ],
    "is_data_complete": true,
    "completion_count": 139,
    "resources": [
      {
        "is_starred": true,
        "resource_comments": "Complete steps 1 and 2",
        "resource_url": "https://codeforces.com/edu/course/2/lesson/9",
        "resource_title": "Two Pointers Method | CF EDU"
      },
      {
        "is_starred": true,
        "resource_url": "https://usaco.guide/silver/two-pointers?lang=cpp",
        "resource_title": "Two Pointers | USACO Guide",
        "resource_comments": ""
      },
      {
        "resource_title": "8.1 Two pointers method | CPH",
        "resource_comments": "",
        "resource_url": "https://usaco.guide/CPH.pdf#page=87"
      },
      {
        "resource_url": "https://www.geeksforgeeks.org/two-pointers-technique/",
        "resource_title": "Two Pointers Technique | Geeks for Geeks",
        "resource_comments": ""
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=On03HWe2tZM",
        "is_video_type": true,
        "resource_title": "Visual introduction Two Pointer Algorithm | Data Structure and Algorithm for Coding Interviews |  Josh's DevBox",
        "resource_comments": ""
      }
    ],
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Basics/Two%20Pointers.cpp"
    ],
    "topic_id": "two_pointers",
    "created_at": {
      "seconds": 1715078789,
      "nanoseconds": 442000000
    }
  },
  "two_squares_theorem": {
    "template_codes": [],
    "topic_id": "two_squares_theorem",
    "is_data_complete": true,
    "completion_count": 1,
    "created_at": {
      "seconds": 1714377553,
      "nanoseconds": 502000000
    },
    "resources": [
      {
        "resource_title": "Integer solutions to x² + y² = z  By adamant",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/116519",
        "is_starred": true
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/13851",
        "resource_comments": "",
        "resource_title": "Jacobi's Two Square Theorem  By NeverSayNever"
      },
      {
        "resource_comments": "",
        "resource_title": "Sum of two squares theorem | Wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Sum_of_two_squares_theorem"
      },
      {
        "resource_comments": "",
        "resource_url": "https://en.wikipedia.org/wiki/Fermat%27s_theorem_on_sums_of_two_squares",
        "resource_title": "Fermat's theorem on sums of two squares | Wiki"
      },
      {
        "resource_comments": "",
        "resource_title": "Legendre's three-square theorem | Wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Legendre%27s_three-square_theorem"
      },
      {
        "resource_comments": "",
        "resource_url": "https://en.wikipedia.org/wiki/Lagrange%27s_four-square_theorem",
        "resource_title": "Lagrange's four-square theorem | Wiki"
      },
      {
        "resource_comments": "",
        "resource_url": "https://en.wikipedia.org/wiki/Euler%27s_four-square_identity",
        "resource_title": "Euler's four-square identity | Wiki"
      },
      {
        "resource_comments": "",
        "resource_url": "https://en.wikipedia.org/wiki/Brahmagupta%E2%80%93Fibonacci_identity",
        "resource_title": "Brahmagupta–Fibonacci identity | Wiki"
      }
    ]
  },
  "unique_min_cut": {
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714133085,
      "nanoseconds": 377000000
    },
    "topic_id": "unique_min_cut",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Unique%20Min%20Cut.cpp"
    ],
    "resources": [
      {
        "resource_comments": "",
        "resource_url": "https://stackoverflow.com/questions/7673711/determining-the-uniqueness-of-a-min-cut",
        "resource_title": "Determining the uniqueness of a min-cut"
      }
    ]
  },
  "unordered_map": {
    "template_codes": [],
    "resources": [
      {
        "resource_comments": "slightly advanced discussions. TLDR: it is not safe to use unordered map directly, use custom hashing",
        "resource_url": "https://codeforces.com/blog/entry/62393",
        "is_starred": true,
        "resource_title": "Blowing up unordered_map, and how to stop getting hacked on it | neal"
      }
    ],
    "topic_id": "unordered_map",
    "created_at": {
      "seconds": 1713819294,
      "nanoseconds": 657000000
    }
  },
  "vandermonde_matrix": {
    "is_data_complete": true,
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://en.wikipedia.org/wiki/Vandermonde_matrix",
        "resource_comments": "",
        "resource_title": "Vandermonde matrix | Wiki"
      },
      {
        "resource_url": "https://codeforces.com/blog/entry/98824",
        "resource_comments": "",
        "resource_title": "About Vandermonde Determinant  By happyguy656"
      }
    ],
    "topic_id": "vandermonde_matrix",
    "created_at": {
      "seconds": 1714465849,
      "nanoseconds": 310000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Math/Vandermonde%20Matrix.cpp"
    ]
  },
  "variables": {
    "template_codes": [],
    "completion_count": 1,
    "topic_id": "variables",
    "resources": [],
    "created_at": {
      "seconds": 1713660797,
      "nanoseconds": 434000000
    }
  },
  "variables_and_data_types": {
    "problem_order": [
      "gym_287306b",
      "gym_287306c",
      "gym_287306d",
      "gym_367756e",
      "gym_287306a",
      "gym_287306i",
      "gym_287306f",
      "gym_287306j",
      "gym_287306k"
    ],
    "created_at": {
      "seconds": 1715029638,
      "nanoseconds": 85000000
    },
    "is_data_complete": true,
    "completion_count": 995,
    "topic_id": "variables_and_data_types",
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://www.youtube.com/watch?v=ckbfOdMhZls&list=PLzMcBGfZo4-lmGC8VW0iu6qfMHjy7gLQ3&index=2",
        "resource_comments": "",
        "is_video_type": true,
        "resource_title": "C++ Program Structure |  Tech With Tim"
      },
      {
        "is_starred": true,
        "is_video_type": true,
        "resource_title": "Data Types and Variables | Tech With Tim",
        "resource_url": "https://www.youtube.com/watch?v=zgutFVxOlTY&list=PLzMcBGfZo4-lmGC8VW0iu6qfMHjy7gLQ3&index=3",
        "resource_comments": ""
      },
      {
        "is_video_type": true,
        "resource_title": "User Input and Constants | Tech With Tim",
        "resource_url": "https://www.youtube.com/watch?v=OA28SYILJv8&list=PLzMcBGfZo4-lmGC8VW0iu6qfMHjy7gLQ3&index=4",
        "resource_comments": "",
        "is_starred": true
      },
      {
        "resource_url": "https://www.programiz.com/cpp-programming/variables-literals",
        "resource_comments": "",
        "resource_title": "C++ Variables, Literals and Constants | Programiz"
      },
      {
        "resource_url": "https://www.programiz.com/cpp-programming/comments",
        "resource_title": "C++ Comments | Programiz",
        "resource_comments": ""
      },
      {
        "resource_url": "https://www.programiz.com/cpp-programming/data-types",
        "resource_comments": "",
        "resource_title": "C++ Data Types | Programiz"
      },
      {
        "resource_url": "https://www.programiz.com/cpp-programming/constants",
        "resource_title": "C++ Constants | Programiz",
        "resource_comments": ""
      },
      {
        "resource_title": "C++ Basic Input/Output | Programiz",
        "resource_url": "https://www.programiz.com/cpp-programming/input-output",
        "resource_comments": ""
      },
      {
        "resource_title": "Data Types | USACO Guide",
        "is_starred": true,
        "resource_url": "https://usaco.guide/general/data-types?lang=cpp",
        "resource_comments": ""
      }
    ],
    "template_codes": []
  },
  "vector": {
    "is_data_complete": true,
    "completion_count": 259,
    "problem_order": [
      "aizu_itp2_1_a",
      "hackerrank_vector_sort",
      "hackerrank_vector_erase",
      "aizu_itp2_1_d",
      "atcoder_arc087_a",
      "hackerrank_cpp_lower_bound",
      "codeforces_704a"
    ],
    "template_codes": [],
    "resources": [
      {
        "is_video_type": true,
        "is_starred": true,
        "resource_url": "https://www.youtube.com/watch?v=RXzzE2wnnlo&list=PLzMcBGfZo4-lmGC8VW0iu6qfMHjy7gLQ3&index=18",
        "resource_title": "Vectors | Tech With Tim",
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_url": "https://www.programiz.com/cpp-programming/vectors",
        "resource_title": "C++ Vectors | Programiz",
        "resource_comments": ""
      },
      {
        "resource_title": "Vector | C++ STL (Standard Template Library) | std::vector  Knowledge Center",
        "resource_url": "https://www.youtube.com/watch?v=0DNDvuHZDiQ&list=PL1w8k37X_6L9NXrP1D31hDTKcdAPIL0cG&index=6",
        "is_video_type": true,
        "resource_comments": ""
      },
      {
        "resource_title": "Complete C++ STL in 1 Video | Time Complexity and Notes |  take U forward",
        "resource_url": "https://www.youtube.com/watch?v=RRVYpIET_RU",
        "is_video_type": true,
        "resource_comments": "check the whole vector section"
      },
      {
        "resource_comments": "",
        "resource_url": "https://takeuforward.org/c/vector-in-c-stl/",
        "resource_title": "Vector in C++ STL | TUF"
      },
      {
        "resource_comments": "",
        "resource_title": "Vector in C++ STL | Geeks for Geeks",
        "resource_url": "https://www.geeksforgeeks.org/vector-in-cpp-stl/"
      }
    ],
    "topic_id": "vector",
    "created_at": {
      "seconds": 1715112233,
      "nanoseconds": 363000000
    }
  },
  "venice_technique": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Venice%20Technique.cpp"
    ],
    "resources": [
      {
        "resource_title": "Venice Technique By cjtoribio",
        "resource_url": "https://codeforces.com/blog/entry/58316",
        "resource_comments": "",
        "is_starred": true
      }
    ],
    "created_at": {
      "seconds": 1713834093,
      "nanoseconds": 560000000
    },
    "is_data_complete": true,
    "problem_order": [
      "codeforces_842d",
      "codeforces_893d"
    ],
    "completion_count": 12,
    "topic_id": "venice_technique"
  },
  "vertical_decomposition": {
    "resources": [
      {
        "resource_title": "Vertical decomposition | CP Algorithms",
        "resource_comments": "",
        "resource_url": "https://cp-algorithms.com/geometry/vertical_decomposition.html"
      }
    ],
    "template_codes": [],
    "topic_id": "vertical_decomposition",
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714825928,
      "nanoseconds": 64000000
    }
  },
  "virtual_tree": {
    "created_at": {
      "seconds": 1714148732,
      "nanoseconds": 441000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Graph%20Theory/Virtual%20Tree.cpp"
    ],
    "problem_order": [
      "codeforces_613d",
      "hackerrank_wccity",
      "codeforces_1292d",
      "hackerrank_kittys_calculations_on_a_tree",
      "codechef_yatp",
      "atcoder_abc340_g",
      "codechef_adjleaf2",
      "codechef_icl1705"
    ],
    "topic_id": "virtual_tree",
    "completion_count": 14,
    "is_data_complete": true,
    "resources": [
      {
        "is_starred": true,
        "resource_url": "https://www.youtube.com/watch?v=czySm7bUHgY",
        "resource_title": "CP Tutorial: Virtual/Auxiliary Tree | Radoslav Dimitrov",
        "is_video_type": true,
        "resource_comments": ""
      },
      {
        "resource_url": "https://discuss.codechef.com/t/icl1705-editorial/14269",
        "resource_comments": "",
        "resource_title": "Editorial of this problem"
      }
    ]
  },
  "wavelet_tree": {
    "completion_count": 11,
    "topic_id": "wavelet_tree",
    "is_data_complete": true,
    "created_at": {
      "seconds": 1713822820,
      "nanoseconds": 515000000
    },
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/Wavelet%20Tree.cpp"
    ],
    "resources": [
      {
        "resource_title": "Introduction to New Data Structure: Wavelet Trees | By rachitiitr",
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/52854",
        "is_starred": true
      },
      {
        "resource_url": "https://www.youtube.com/watch?v=4aSv9PcecDw",
        "is_video_type": true,
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Wavelet Trees for competitive programming | IOI preparation #3 | Errichto"
      },
      {
        "resource_url": "https://ioinformatics.org/journal/v10_2016_19_37.pdf",
        "resource_comments": "use vpn if you cant access this site",
        "resource_title": "Wavelet Trees for Competitive Programming | Paper"
      }
    ]
  },
  "welsh_powell_algorithm": {
    "created_at": {
      "seconds": 1714104001,
      "nanoseconds": 869000000
    },
    "topic_id": "welsh_powell_algorithm",
    "template_codes": [],
    "is_data_complete": true,
    "resources": [
      {
        "resource_url": "https://en.wikipedia.org/wiki/Greedy_coloring",
        "resource_title": "Greedy coloring | Wiki",
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_title": "Welsh Powell Graph colouring Algorithm | Geeks for Geeks",
        "resource_url": "https://www.geeksforgeeks.org/welsh-powell-graph-colouring-algorithm/",
        "resource_comments": ""
      }
    ]
  },
  "wewe": {
    "template_codes": [],
    "created_at": {
      "seconds": 1712528004,
      "nanoseconds": 102000000
    },
    "resources": [],
    "topic_id": "wewe"
  },
  "width_of_a_polygon_2d": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L758-L771"
    ],
    "resources": [],
    "created_at": {
      "seconds": 1714762123,
      "nanoseconds": 126000000
    },
    "topic_id": "width_of_a_polygon_2d"
  },
  "wilsons_theorem": {
    "created_at": {
      "seconds": 1714314568,
      "nanoseconds": 751000000
    },
    "resources": [
      {
        "resource_title": "Wilson's theorem | Wiki",
        "resource_url": "https://en.wikipedia.org/wiki/Wilson%27s_theorem",
        "resource_comments": "also check \"Gauss' generalization\" at the end of the page"
      },
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/127832",
        "resource_title": "Fool algorithm for finding prime numbers based on long arithmetic  By alexvim"
      }
    ],
    "is_data_complete": true,
    "template_codes": [],
    "problem_order": [
      "spoj_dcepc11b",
      "spoj_iitkwpcm",
      "codeforces_1957e",
      "spoj_boring2"
    ],
    "completion_count": 5,
    "topic_id": "wilsons_theorem"
  },
  "winding_number_2d": {
    "is_data_complete": true,
    "completion_count": 1,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/b1d164f9fc6e9a0896370cebf43793043ee30e7b/Geometry/Geometry%202D.cpp#L688-L714"
    ],
    "resources": [
      {
        "resource_url": "https://en.wikipedia.org/wiki/Winding_number",
        "resource_comments": "",
        "resource_title": "Winding number | Wiki"
      },
      {
        "resource_url": "https://en.wikipedia.org/wiki/Point_in_polygon",
        "resource_comments": "check Ray casting algorithm too",
        "resource_title": "Point in polygon | Wiki"
      },
      {
        "resource_title": "4.3 Simple polygon: O(N)",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/48868",
        "resource_comments": ""
      }
    ],
    "created_at": {
      "seconds": 1714762061,
      "nanoseconds": 982000000
    },
    "topic_id": "winding_number_2d"
  },
  "winding_number_3d": {
    "created_at": {
      "seconds": 1714761739,
      "nanoseconds": 896000000
    },
    "resources": [
      {
        "resource_url": "https://victorlecomte.com/cp-geo.pdf",
        "resource_comments": "",
        "resource_title": "Chapter 3.6.8 3D winding number | CP Geo"
      }
    ],
    "topic_id": "winding_number_3d",
    "template_codes": []
  },
  "x2_plus_1_trick": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Dynamic%20Programming%20Optimizations/x2%20+1%20trick.cpp"
    ],
    "resources": [
      {
        "resource_title": "[Tutorial] Non-trivial DP Tricks and Techniques  By zscoder",
        "resource_comments": "check × 2,  + 1 trick section",
        "is_starred": true,
        "resource_url": "https://codeforces.com/blog/entry/47764"
      }
    ],
    "created_at": {
      "seconds": 1714725874,
      "nanoseconds": 788000000
    },
    "completion_count": 5,
    "topic_id": "x2_plus_1_trick",
    "problem_order": [
      "hackerearth_perfect_permutations_september_clash",
      "codeforces_1516e"
    ],
    "is_data_complete": true
  },
  "xor_equation": {
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Dynamic%20Programming%20Optimizations/XOR%20Equation.cpp"
    ],
    "topic_id": "xor_equation",
    "is_data_complete": true,
    "resources": [
      {
        "is_starred": true,
        "resource_title": "Editorial of Stone Game | kevinsogo",
        "resource_url": "https://www.hackerrank.com/challenges/stonegame/editorial",
        "resource_comments": ""
      }
    ],
    "created_at": {
      "seconds": 1714725465,
      "nanoseconds": 129000000
    }
  },
  "xor_hashing": {
    "template_codes": [],
    "is_data_complete": true,
    "created_at": {
      "seconds": 1714641022,
      "nanoseconds": 354000000
    },
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/85900",
        "resource_title": "XOR Hashing [TUTORIAL]  By humbertoyusta",
        "is_starred": true,
        "resource_comments": ""
      },
      {
        "is_starred": true,
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/129907",
        "resource_title": "An analysis on the error rate of Zobrist Hashing (Xor Hashing)  By kinoud"
      }
    ],
    "topic_id": "xor_hashing",
    "problem_order": [
      "codeforces_1418g",
      "codeforces_895c",
      "codeforces_1771f",
      "codeforces_1175f",
      "codeforces_869e",
      "toph_ep_palindromes",
      "atcoder_abc250_e",
      "codeforces_1914g2",
      "codeforces_1830c",
      "hackerrank_number_game_on_a_tree",
      "codeforces_1622f",
      "codeforces_1746f",
      "codeforces_1479d"
    ],
    "completion_count": 10
  },
  "xor_segment_tree": {
    "problem_order": [
      "baekjoon_24271",
      "codeforces_1716e",
      "yukicoder_1891",
      "codeforces_1654f",
      "codeforces_1401f"
    ],
    "created_at": {
      "seconds": 1713143536,
      "nanoseconds": 822000000
    },
    "topic_id": "xor_segment_tree",
    "completion_count": 9,
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/105723",
        "resource_comments": "",
        "resource_title": "[Tutorial] XOR Segment Tree | PurpleCrayon",
        "is_starred": true
      }
    ],
    "is_data_complete": true,
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Data%20Structures/XOR%20Segment%20Tree.cpp"
    ]
  },
  "young_tableaus": {
    "completion_count": 1,
    "topic_id": "young_tableaus",
    "resources": [
      {
        "resource_url": "https://codeforces.com/blog/entry/98167",
        "resource_title": "Young Tableaus and the Hook Length Formula  By mango_lassi",
        "is_starred": true,
        "resource_comments": ""
      }
    ],
    "template_codes": [],
    "created_at": {
      "seconds": 1715259529,
      "nanoseconds": 543000000
    },
    "is_data_complete": true
  },
  "z_algorithm": {
    "created_at": {
      "seconds": 1714546475,
      "nanoseconds": 785000000
    },
    "problem_order": [
      "yosupo_zalgorithm",
      "cses_1753",
      "cses_1733",
      "cses_1732",
      "spoj_najpf",
      "spoj_nhay",
      "codeforces_471d",
      "cses_2107",
      "spoj_querystr",
      "spoj_epalin",
      "codeforces_535d",
      "codeforces_119d",
      "yosupo_runenumerate"
    ],
    "topic_id": "z_algorithm",
    "template_codes": [
      "https://github.com/ShahjalalShohag/code-library/blob/main/Strings/Z%20Algorithm.cpp"
    ],
    "is_data_complete": true,
    "resources": [
      {
        "resource_url": "https://cp-algorithms.com/string/z-function.html",
        "resource_comments": "",
        "is_starred": true,
        "resource_title": "Z-function and its calculation | CP Algorithms"
      },
      {
        "resource_comments": "",
        "resource_url": "https://codeforces.com/blog/entry/3107",
        "resource_title": "Z Algorithm By paladin8"
      }
    ],
    "completion_count": 24
  }
}
